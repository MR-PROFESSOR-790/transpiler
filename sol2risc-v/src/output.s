
        .section .data
            .align 3
        memory_area:     .space 65536    # EVM memory
        storage_area:    .space 65536    # Storage
        calldata_area:   .space 4096     # Calldata
        returndata:      .space 4096     # Return data
        event_buffer:    .space 8192     # Event logs
        
        .section .text
            .align 2
            .global _start
            
        _start:
            # Runtime setup
            addi sp, sp, -1024
            sd ra, 1016(sp)
            sd s0, 1008(sp)
            addi s0, sp, 1024
            
            # Initialize pointers and counters
            la s1, memory_area      # s1 = memory base
            la s2, storage_area     # s2 = storage base
            la s3, calldata_area    # s3 = calldata base
            la s4, returndata       # s4 = return data
            la s5, event_buffer     # s5 = event buffer
            li s11, 1000000        # Initial gas limit
            
        # Error handlers and common operations
        

        # Memory operations
        mstore_impl:
            add t0, s1, a0        # memory base + offset
            sd a1, 0(t0)          # store value
            ret
            
        mload_impl:
            add t0, s1, a0        # memory base + offset
            ld a0, 0(t0)          # load value
            ret
            
        # Storage operations
        sstore_impl:
            slli t0, a0, 3        # multiply key by 8
            add t0, s2, t0        # storage base + offset
            ld t1, 0(t0)          # load old value
            beq t1, a1, skip_store # skip if unchanged
            sd a1, 0(t0)          # store new value
        skip_store:
            ret
            
        sload_impl:
            slli t0, a0, 3        # multiply key by 8
            add t0, s2, t0        # storage base + offset
            ld a0, 0(t0)          # load value
            ret
            
        # Gas checking
        check_gas:
            sub t0, s11, a0       # subtract required gas
            bltz t0, out_of_gas   # branch if negative
            mv s11, t0            # update gas counter
            ret
            
        # Error handlers
        out_of_gas:
            li a0, 2              # out of gas error code
            j revert_handler
            
        revert_handler:
            li a7, 93             # exit syscall
            ecall
        

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 128        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 64        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # value
                addi sp, sp, 8
                ld a0, 0(sp)          # offset
                addi sp, sp, 8
                jal mstore_impl
            

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 10000000000000000        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 3        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # value
                addi sp, sp, 8
                ld a0, 0(sp)          # key
                addi sp, sp, 8
                jal sstore_impl
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_callvalue t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_dup1 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_iszero t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 26        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                # Conditional jump
                ld t1, 0(sp)          # condition
                addi sp, sp, 8
                ld t0, 0(sp)          # destination
                addi sp, sp, 8
                beqz t1, skip_16   # if condition is 0, skip jump
                j L_16           # jump to destination
            skip_16:
            

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, None        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_dup1 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_revert t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            
L_1a:

            li a0, 3         # gas cost
            jal check_gas
        

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_pop t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_caller t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, None        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 1461501637330902918203684832716283019655932542975        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                ld t1, 0(sp)          # second operand
                addi sp, sp, 8
                ld t0, 0(sp)          # first operand
                addi sp, sp, 8
                and t0, t0, t1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_dup2 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 1461501637330902918203684832716283019655932542975        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                ld t1, 0(sp)          # second operand
                addi sp, sp, 8
                ld t0, 0(sp)          # first operand
                addi sp, sp, 8
                and t0, t0, t1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld t1, 0(sp)          # second operand
                addi sp, sp, 8
                ld t0, 0(sp)          # first operand
                addi sp, sp, 8
                sub t0, t0, t1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 140        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                # Conditional jump
                ld t1, 0(sp)          # condition
                addi sp, sp, 8
                ld t0, 0(sp)          # destination
                addi sp, sp, 8
                beqz t1, skip_4f   # if condition is 0, skip jump
                j L_4f           # jump to destination
            skip_4f:
            

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, None        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 64        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                ld a0, 0(sp)          # offset
                addi sp, sp, 8
                jal mload_impl
                addi sp, sp, -8
                sd a0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                dup0 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        
    # Unknown opcode at 55: UNKNOWN_0x1e

            li a0, 3         # gas cost
            jal check_gas
        
    # Unknown opcode at 56: UNKNOWN_0x4f

            li a0, 3         # gas cost
            jal check_gas
        
    # Unknown opcode at 57: UNKNOWN_0xbd

            li a0, 3         # gas cost
            jal check_gas
        
    # Unknown opcode at 58: UNKNOWN_0xf7

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                nop t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                nop t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                nop t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                nop t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                nop t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                nop t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                nop t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                nop t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                nop t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                nop t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                nop t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                nop t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                nop t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                nop t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                nop t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                nop t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                nop t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                nop t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                nop t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                nop t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                nop t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                nop t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                nop t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                nop t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                nop t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                nop t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                nop t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                nop t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_dup2 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # value
                addi sp, sp, 8
                ld a0, 0(sp)          # offset
                addi sp, sp, 8
                jal mstore_impl
            

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 4        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                ld t1, 0(sp)          # second operand
                addi sp, sp, 8
                ld t0, 0(sp)          # first operand
                addi sp, sp, 8
                add t0, t0, t1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 131        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_swap2 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_swap1 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 424        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                # Unconditional jump
                ld t0, 0(sp)          # destination
                addi sp, sp, 8
                j L_{t0:x}           # jump to destination
            
L_83:

            li a0, 3         # gas cost
            jal check_gas
        

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 64        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                ld a0, 0(sp)          # offset
                addi sp, sp, 8
                jal mload_impl
                addi sp, sp, -8
                sd a0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_dup1 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_swap2 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld t1, 0(sp)          # second operand
                addi sp, sp, 8
                ld t0, 0(sp)          # first operand
                addi sp, sp, 8
                sub t0, t0, t1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_swap1 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_revert t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            
L_8c:

            li a0, 3         # gas cost
            jal check_gas
        

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 155        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_dup2 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 168        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 32        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                ld t1, 0(sp)          # second operand
                addi sp, sp, 8
                ld t0, 0(sp)          # first operand
                addi sp, sp, 8
                sll t0, t0, t1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 32        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                ld t1, 0(sp)          # second operand
                addi sp, sp, 8
                ld t0, 0(sp)          # first operand
                addi sp, sp, 8
                srl t0, t0, t1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                # Unconditional jump
                ld t0, 0(sp)          # destination
                addi sp, sp, 8
                j L_{t0:x}           # jump to destination
            
L_9b:

            li a0, 3         # gas cost
            jal check_gas
        

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_pop t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 1        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_dup1 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_dup2 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_swap1 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # value
                addi sp, sp, 8
                ld a0, 0(sp)          # key
                addi sp, sp, 8
                jal sstore_impl
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_pop t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 449        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                # Unconditional jump
                ld t0, 0(sp)          # destination
                addi sp, sp, 8
                j L_{t0:x}           # jump to destination
            
L_a8:

            li a0, 3         # gas cost
            jal check_gas
        

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, None        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_dup1 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, None        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_swap1 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a0, 0(sp)          # key
                addi sp, sp, 8
                jal sload_impl
                addi sp, sp, -8
                sd a0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_swap1 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 256        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_exp t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_swap1 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld t1, 0(sp)          # second operand
                addi sp, sp, 8
                ld t0, 0(sp)          # first operand
                addi sp, sp, 8
                div t0, t0, t1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 1461501637330902918203684832716283019655932542975        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                ld t1, 0(sp)          # second operand
                addi sp, sp, 8
                ld t0, 0(sp)          # first operand
                addi sp, sp, 8
                and t0, t0, t1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_swap1 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_pop t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_dup2 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, None        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_dup1 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 256        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_exp t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_dup2 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a0, 0(sp)          # key
                addi sp, sp, 8
                jal sload_impl
                addi sp, sp, -8
                sd a0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_dup2 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 1461501637330902918203684832716283019655932542975        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                ld t1, 0(sp)          # second operand
                addi sp, sp, 8
                ld t0, 0(sp)          # first operand
                addi sp, sp, 8
                mul t0, t0, t1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_not t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld t1, 0(sp)          # second operand
                addi sp, sp, 8
                ld t0, 0(sp)          # first operand
                addi sp, sp, 8
                and t0, t0, t1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_swap1 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_dup4 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 1461501637330902918203684832716283019655932542975        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                ld t1, 0(sp)          # second operand
                addi sp, sp, 8
                ld t0, 0(sp)          # first operand
                addi sp, sp, 8
                and t0, t0, t1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld t1, 0(sp)          # second operand
                addi sp, sp, 8
                ld t0, 0(sp)          # first operand
                addi sp, sp, 8
                mul t0, t0, t1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld t1, 0(sp)          # second operand
                addi sp, sp, 8
                ld t0, 0(sp)          # first operand
                addi sp, sp, 8
                or t0, t0, t1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_swap1 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # value
                addi sp, sp, 8
                ld a0, 0(sp)          # key
                addi sp, sp, 8
                jal sstore_impl
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_pop t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_dup2 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 1461501637330902918203684832716283019655932542975        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                ld t1, 0(sp)          # second operand
                addi sp, sp, 8
                ld t0, 0(sp)          # first operand
                addi sp, sp, 8
                and t0, t0, t1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_dup2 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 1461501637330902918203684832716283019655932542975        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                ld t1, 0(sp)          # second operand
                addi sp, sp, 8
                ld t0, 0(sp)          # first operand
                addi sp, sp, 8
                and t0, t0, t1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                dup0 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_dup12 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        
    # Unknown opcode at 13c: UNKNOWN_0xe0

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                rem t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_swap13 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_mstore8 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld t1, 0(sp)          # second operand
                addi sp, sp, 8
                ld t0, 0(sp)          # first operand
                addi sp, sp, 8
                and t0, t0, t1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                msize t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld t1, 0(sp)          # second operand
                addi sp, sp, 8
                ld t0, 0(sp)          # first operand
                addi sp, sp, 8
                sub t0, zero, t0; seqz t0, t0 t0, t0, t1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                sgt t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_difficulty t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        
    # Unknown opcode at 145: UNKNOWN_0xcd

            li a0, 3         # gas cost
            jal check_gas
        
    # Unknown opcode at 146: UNKNOWN_0x1f

            li a0, 3         # gas cost
            jal check_gas
        
    # Unknown opcode at 147: UNKNOWN_0xd0

            li a0, 3         # gas cost
            jal check_gas
        

            # LOG4 operation
            mv a2, 4       # number of topics
            ld a1, 0(sp)         # size
            addi sp, sp, 8
            ld a0, 0(sp)         # offset
            addi sp, sp, 8
            jal log_impl         # call log implementation
        

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                callcode t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_dup5 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_not t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        
    # Unknown opcode at 14c: UNKNOWN_0x49

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                dup0 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_swap8 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        
    # Unknown opcode at 14f: UNKNOWN_0x22

            li a0, 3         # gas cost
            jal check_gas
        

            # LOG3 operation
            mv a2, 3       # number of topics
            ld a1, 0(sp)         # size
            addi sp, sp, 8
            ld a0, 0(sp)         # offset
            addi sp, sp, 8
            jal log_impl         # call log implementation
        

            li a0, 3         # gas cost
            jal check_gas
        
    # Unknown opcode at 151: UNKNOWN_0xda

            li a0, 3         # gas cost
            jal check_gas
        
    # Unknown opcode at 152: UNKNOWN_0xaf

            li a0, 3         # gas cost
            jal check_gas
        
    # Unknown opcode at 153: UNKNOWN_0xe3

            li a0, 3         # gas cost
            jal check_gas
        
    # Unknown opcode at 154: UNKNOWN_0xb4

            li a0, 3         # gas cost
            jal check_gas
        

                ld t1, 0(sp)          # second operand
                addi sp, sp, 8
                ld t0, 0(sp)          # first operand
                addi sp, sp, 8
                xor t0, t0, t1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 142748407581371718536610542681624453968        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_pop t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                # Unconditional jump
                ld t0, 0(sp)          # destination
                addi sp, sp, 8
                j L_{t0:x}           # jump to destination
            
L_169:

            li a0, 3         # gas cost
            jal check_gas
        

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, None        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 1461501637330902918203684832716283019655932542975        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_dup3 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld t1, 0(sp)          # second operand
                addi sp, sp, 8
                ld t0, 0(sp)          # first operand
                addi sp, sp, 8
                and t0, t0, t1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_swap1 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_pop t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_swap2 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_swap1 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_pop t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                # Unconditional jump
                ld t0, 0(sp)          # destination
                addi sp, sp, 8
                j L_{t0:x}           # jump to destination
            
L_188:

            li a0, 3         # gas cost
            jal check_gas
        

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, None        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 402        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_dup3 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 361        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                # Unconditional jump
                ld t0, 0(sp)          # destination
                addi sp, sp, 8
                j L_{t0:x}           # jump to destination
            
L_192:

            li a0, 3         # gas cost
            jal check_gas
        

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_swap1 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_pop t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_swap2 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_swap1 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_pop t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                # Unconditional jump
                ld t0, 0(sp)          # destination
                addi sp, sp, 8
                j L_{t0:x}           # jump to destination
            
L_199:

            li a0, 3         # gas cost
            jal check_gas
        

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 418        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_dup2 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 392        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                # Unconditional jump
                ld t0, 0(sp)          # destination
                addi sp, sp, 8
                j L_{t0:x}           # jump to destination
            
L_1a2:

            li a0, 3         # gas cost
            jal check_gas
        

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_dup3 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # value
                addi sp, sp, 8
                ld a0, 0(sp)          # offset
                addi sp, sp, 8
                jal mstore_impl
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_pop t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_pop t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                # Unconditional jump
                ld t0, 0(sp)          # destination
                addi sp, sp, 8
                j L_{t0:x}           # jump to destination
            
L_1a8:

            li a0, 3         # gas cost
            jal check_gas
        

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, None        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 32        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_dup3 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld t1, 0(sp)          # second operand
                addi sp, sp, 8
                ld t0, 0(sp)          # first operand
                addi sp, sp, 8
                add t0, t0, t1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_swap1 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_pop t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 443        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, None        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_dup4 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld t1, 0(sp)          # second operand
                addi sp, sp, 8
                ld t0, 0(sp)          # first operand
                addi sp, sp, 8
                add t0, t0, t1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_dup5 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 409        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                # Unconditional jump
                ld t0, 0(sp)          # destination
                addi sp, sp, 8
                j L_{t0:x}           # jump to destination
            
L_1bb:

            li a0, 3         # gas cost
            jal check_gas
        

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_swap3 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_swap2 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_pop t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_pop t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                # Unconditional jump
                ld t0, 0(sp)          # destination
                addi sp, sp, 8
                j L_{t0:x}           # jump to destination
            
L_1c1:

            li a0, 3         # gas cost
            jal check_gas
        

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 5616        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_dup1 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 462        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, None        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_codecopy t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, None        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_return t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                invalid t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 128        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 64        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # value
                addi sp, sp, 8
                ld a0, 0(sp)          # offset
                addi sp, sp, 8
                jal mstore_impl
            

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 4        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_calldatasize t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld t1, 0(sp)          # second operand
                addi sp, sp, 8
                ld t0, 0(sp)          # first operand
                addi sp, sp, 8
                slt t0, t0, t1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 137        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                # Conditional jump
                ld t1, 0(sp)          # condition
                addi sp, sp, 8
                ld t0, 0(sp)          # destination
                addi sp, sp, 8
                beqz t1, skip_1da   # if condition is 0, skip jump
                j L_1da           # jump to destination
            skip_1da:
            

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, None        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_calldataload t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 224        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                ld t1, 0(sp)          # second operand
                addi sp, sp, 8
                ld t0, 0(sp)          # first operand
                addi sp, sp, 8
                srl t0, t0, t1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_dup1 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 2254197106        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                ld t1, 0(sp)          # second operand
                addi sp, sp, 8
                ld t0, 0(sp)          # first operand
                addi sp, sp, 8
                sgt t0, t0, t1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 88        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                # Conditional jump
                ld t1, 0(sp)          # condition
                addi sp, sp, 8
                ld t0, 0(sp)          # destination
                addi sp, sp, 8
                beqz t1, skip_1ea   # if condition is 0, skip jump
                j L_1ea           # jump to destination
            skip_1ea:
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_dup1 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 2254197106        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                ld t1, 0(sp)          # second operand
                addi sp, sp, 8
                ld t0, 0(sp)          # first operand
                addi sp, sp, 8
                sub t0, zero, t0; seqz t0, t0 t0, t0, t1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 258        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                # Conditional jump
                ld t1, 0(sp)          # condition
                addi sp, sp, 8
                ld t0, 0(sp)          # destination
                addi sp, sp, 8
                beqz t1, skip_1f5   # if condition is 0, skip jump
                j L_1f5           # jump to destination
            skip_1f5:
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_dup1 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 2282502784        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                ld t1, 0(sp)          # second operand
                addi sp, sp, 8
                ld t0, 0(sp)          # first operand
                addi sp, sp, 8
                sub t0, zero, t0; seqz t0, t0 t0, t0, t1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 300        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                # Conditional jump
                ld t1, 0(sp)          # condition
                addi sp, sp, 8
                ld t0, 0(sp)          # destination
                addi sp, sp, 8
                beqz t1, skip_200   # if condition is 0, skip jump
                j L_200           # jump to destination
            skip_200:
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_dup1 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 2376452955        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                ld t1, 0(sp)          # second operand
                addi sp, sp, 8
                ld t0, 0(sp)          # first operand
                addi sp, sp, 8
                sub t0, zero, t0; seqz t0, t0 t0, t0, t1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 342        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                # Conditional jump
                ld t1, 0(sp)          # condition
                addi sp, sp, 8
                ld t0, 0(sp)          # destination
                addi sp, sp, 8
                beqz t1, skip_20b   # if condition is 0, skip jump
                j L_20b           # jump to destination
            skip_20b:
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_dup1 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 3727612051        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                ld t1, 0(sp)          # second operand
                addi sp, sp, 8
                ld t0, 0(sp)          # first operand
                addi sp, sp, 8
                sub t0, zero, t0; seqz t0, t0 t0, t0, t1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 384        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                # Conditional jump
                ld t1, 0(sp)          # condition
                addi sp, sp, 8
                ld t0, 0(sp)          # destination
                addi sp, sp, 8
                beqz t1, skip_216   # if condition is 0, skip jump
                j L_216           # jump to destination
            skip_216:
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_dup1 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 4076725131        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                ld t1, 0(sp)          # second operand
                addi sp, sp, 8
                ld t0, 0(sp)          # first operand
                addi sp, sp, 8
                sub t0, zero, t0; seqz t0, t0 t0, t0, t1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 426        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                # Conditional jump
                ld t1, 0(sp)          # condition
                addi sp, sp, 8
                ld t0, 0(sp)          # destination
                addi sp, sp, 8
                beqz t1, skip_221   # if condition is 0, skip jump
                j L_221           # jump to destination
            skip_221:
            

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 144        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                # Unconditional jump
                ld t0, 0(sp)          # destination
                addi sp, sp, 8
                j L_{t0:x}           # jump to destination
            
L_226:

            li a0, 3         # gas cost
            jal check_gas
        

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_dup1 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 541198049        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                ld t1, 0(sp)          # second operand
                addi sp, sp, 8
                ld t0, 0(sp)          # first operand
                addi sp, sp, 8
                sub t0, zero, t0; seqz t0, t0 t0, t0, t1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 146        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                # Conditional jump
                ld t1, 0(sp)          # condition
                addi sp, sp, 8
                ld t0, 0(sp)          # destination
                addi sp, sp, 8
                beqz t1, skip_231   # if condition is 0, skip jump
                j L_231           # jump to destination
            skip_231:
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_dup1 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 610275267        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                ld t1, 0(sp)          # second operand
                addi sp, sp, 8
                ld t0, 0(sp)          # first operand
                addi sp, sp, 8
                sub t0, zero, t0; seqz t0, t0 t0, t0, t1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 174        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                # Conditional jump
                ld t1, 0(sp)          # condition
                addi sp, sp, 8
                ld t0, 0(sp)          # destination
                addi sp, sp, 8
                beqz t1, skip_23c   # if condition is 0, skip jump
                j L_23c           # jump to destination
            skip_23c:
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_dup1 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 1901074598        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                ld t1, 0(sp)          # second operand
                addi sp, sp, 8
                ld t0, 0(sp)          # first operand
                addi sp, sp, 8
                sub t0, zero, t0; seqz t0, t0 t0, t0, t1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 196        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                # Conditional jump
                ld t1, 0(sp)          # condition
                addi sp, sp, 8
                ld t0, 0(sp)          # destination
                addi sp, sp, 8
                beqz t1, skip_247   # if condition is 0, skip jump
                j L_247           # jump to destination
            skip_247:
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_dup1 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 2119695961        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                ld t1, 0(sp)          # second operand
                addi sp, sp, 8
                ld t0, 0(sp)          # first operand
                addi sp, sp, 8
                sub t0, zero, t0; seqz t0, t0 t0, t0, t1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 218        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                # Conditional jump
                ld t1, 0(sp)          # condition
                addi sp, sp, 8
                ld t0, 0(sp)          # destination
                addi sp, sp, 8
                beqz t1, skip_252   # if condition is 0, skip jump
                j L_252           # jump to destination
            skip_252:
            

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 144        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                # Unconditional jump
                ld t0, 0(sp)          # destination
                addi sp, sp, 8
                j L_{t0:x}           # jump to destination
            
L_257:

            li a0, 3         # gas cost
            jal check_gas
        

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_calldatasize t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 144        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                # Conditional jump
                ld t1, 0(sp)          # condition
                addi sp, sp, 8
                ld t0, 0(sp)          # destination
                addi sp, sp, 8
                beqz t1, skip_25c   # if condition is 0, skip jump
                j L_25c           # jump to destination
            skip_25c:
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                nop t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            
L_25e:

            li a0, 3         # gas cost
            jal check_gas
        

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                nop t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            
L_260:

            li a0, 3         # gas cost
            jal check_gas
        

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 172        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 4        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_dup1 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_calldatasize t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld t1, 0(sp)          # second operand
                addi sp, sp, 8
                ld t0, 0(sp)          # first operand
                addi sp, sp, 8
                sub t0, t0, t1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_dup2 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld t1, 0(sp)          # second operand
                addi sp, sp, 8
                ld t0, 0(sp)          # first operand
                addi sp, sp, 8
                add t0, t0, t1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_swap1 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 167        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_swap2 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_swap1 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 2900        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                # Unconditional jump
                ld t0, 0(sp)          # destination
                addi sp, sp, 8
                j L_{t0:x}           # jump to destination
            
L_275:

            li a0, 3         # gas cost
            jal check_gas
        

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 466        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                # Unconditional jump
                ld t0, 0(sp)          # destination
                addi sp, sp, 8
                j L_{t0:x}           # jump to destination
            
L_27a:

            li a0, 3         # gas cost
            jal check_gas
        

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                nop t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            
L_27c:

            li a0, 3         # gas cost
            jal check_gas
        

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_callvalue t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_dup1 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_iszero t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 185        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                # Conditional jump
                ld t1, 0(sp)          # condition
                addi sp, sp, 8
                ld t0, 0(sp)          # destination
                addi sp, sp, 8
                beqz t1, skip_283   # if condition is 0, skip jump
                j L_283           # jump to destination
            skip_283:
            

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, None        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_dup1 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_revert t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            
L_287:

            li a0, 3         # gas cost
            jal check_gas
        

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_pop t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 194        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 1056        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                # Unconditional jump
                ld t0, 0(sp)          # destination
                addi sp, sp, 8
                j L_{t0:x}           # jump to destination
            
L_290:

            li a0, 3         # gas cost
            jal check_gas
        

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                nop t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            
L_292:

            li a0, 3         # gas cost
            jal check_gas
        

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_callvalue t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_dup1 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_iszero t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 207        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                # Conditional jump
                ld t1, 0(sp)          # condition
                addi sp, sp, 8
                ld t0, 0(sp)          # destination
                addi sp, sp, 8
                beqz t1, skip_299   # if condition is 0, skip jump
                j L_299           # jump to destination
            skip_299:
            

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, None        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_dup1 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_revert t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            
L_29d:

            li a0, 3         # gas cost
            jal check_gas
        

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_pop t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 216        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 1329        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                # Unconditional jump
                ld t0, 0(sp)          # destination
                addi sp, sp, 8
                j L_{t0:x}           # jump to destination
            
L_2a6:

            li a0, 3         # gas cost
            jal check_gas
        

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                nop t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            
L_2a8:

            li a0, 3         # gas cost
            jal check_gas
        

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_callvalue t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_dup1 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_iszero t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 229        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                # Conditional jump
                ld t1, 0(sp)          # condition
                addi sp, sp, 8
                ld t0, 0(sp)          # destination
                addi sp, sp, 8
                beqz t1, skip_2af   # if condition is 0, skip jump
                j L_2af           # jump to destination
            skip_2af:
            

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, None        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_dup1 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_revert t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            
L_2b3:

            li a0, 3         # gas cost
            jal check_gas
        

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_pop t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 256        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 4        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_dup1 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_calldatasize t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld t1, 0(sp)          # second operand
                addi sp, sp, 8
                ld t0, 0(sp)          # first operand
                addi sp, sp, 8
                sub t0, t0, t1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_dup2 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld t1, 0(sp)          # second operand
                addi sp, sp, 8
                ld t0, 0(sp)          # first operand
                addi sp, sp, 8
                add t0, t0, t1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_swap1 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 251        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_swap2 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_swap1 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 3069        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                # Unconditional jump
                ld t0, 0(sp)          # destination
                addi sp, sp, 8
                j L_{t0:x}           # jump to destination
            
L_2c9:

            li a0, 3         # gas cost
            jal check_gas
        

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 1348        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                # Unconditional jump
                ld t0, 0(sp)          # destination
                addi sp, sp, 8
                j L_{t0:x}           # jump to destination
            
L_2ce:

            li a0, 3         # gas cost
            jal check_gas
        

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                nop t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            
L_2d0:

            li a0, 3         # gas cost
            jal check_gas
        

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_callvalue t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_dup1 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_iszero t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 269        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                # Conditional jump
                ld t1, 0(sp)          # condition
                addi sp, sp, 8
                ld t0, 0(sp)          # destination
                addi sp, sp, 8
                beqz t1, skip_2d7   # if condition is 0, skip jump
                j L_2d7           # jump to destination
            skip_2d7:
            

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, None        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_dup1 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_revert t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            
L_2db:

            li a0, 3         # gas cost
            jal check_gas
        

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_pop t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 278        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 1487        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                # Unconditional jump
                ld t0, 0(sp)          # destination
                addi sp, sp, 8
                j L_{t0:x}           # jump to destination
            
L_2e4:

            li a0, 3         # gas cost
            jal check_gas
        

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 64        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                ld a0, 0(sp)          # offset
                addi sp, sp, 8
                jal mload_impl
                addi sp, sp, -8
                sd a0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 291        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_swap2 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_swap1 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 3576        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                # Unconditional jump
                ld t0, 0(sp)          # destination
                addi sp, sp, 8
                j L_{t0:x}           # jump to destination
            
L_2f1:

            li a0, 3         # gas cost
            jal check_gas
        

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 64        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                ld a0, 0(sp)          # offset
                addi sp, sp, 8
                jal mload_impl
                addi sp, sp, -8
                sd a0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_dup1 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_swap2 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld t1, 0(sp)          # second operand
                addi sp, sp, 8
                ld t0, 0(sp)          # first operand
                addi sp, sp, 8
                sub t0, t0, t1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_swap1 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_return t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            
L_2fa:

            li a0, 3         # gas cost
            jal check_gas
        

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_callvalue t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_dup1 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_iszero t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 311        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                # Conditional jump
                ld t1, 0(sp)          # condition
                addi sp, sp, 8
                ld t0, 0(sp)          # destination
                addi sp, sp, 8
                beqz t1, skip_301   # if condition is 0, skip jump
                j L_301           # jump to destination
            skip_301:
            

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, None        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_dup1 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_revert t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            
L_305:

            li a0, 3         # gas cost
            jal check_gas
        

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_pop t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 320        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 1961        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                # Unconditional jump
                ld t0, 0(sp)          # destination
                addi sp, sp, 8
                j L_{t0:x}           # jump to destination
            
L_30e:

            li a0, 3         # gas cost
            jal check_gas
        

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 64        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                ld a0, 0(sp)          # offset
                addi sp, sp, 8
                jal mload_impl
                addi sp, sp, -8
                sd a0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 333        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_swap2 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_swap1 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 3623        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                # Unconditional jump
                ld t0, 0(sp)          # destination
                addi sp, sp, 8
                j L_{t0:x}           # jump to destination
            
L_31b:

            li a0, 3         # gas cost
            jal check_gas
        

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 64        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                ld a0, 0(sp)          # offset
                addi sp, sp, 8
                jal mload_impl
                addi sp, sp, -8
                sd a0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_dup1 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_swap2 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld t1, 0(sp)          # second operand
                addi sp, sp, 8
                ld t0, 0(sp)          # first operand
                addi sp, sp, 8
                sub t0, t0, t1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_swap1 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_return t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            
L_324:

            li a0, 3         # gas cost
            jal check_gas
        

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_callvalue t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_dup1 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_iszero t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 353        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                # Conditional jump
                ld t1, 0(sp)          # condition
                addi sp, sp, 8
                ld t0, 0(sp)          # destination
                addi sp, sp, 8
                beqz t1, skip_32b   # if condition is 0, skip jump
                j L_32b           # jump to destination
            skip_32b:
            

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, None        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_dup1 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_revert t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            
L_32f:

            li a0, 3         # gas cost
            jal check_gas
        

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_pop t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 362        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 1967        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                # Unconditional jump
                ld t0, 0(sp)          # destination
                addi sp, sp, 8
                j L_{t0:x}           # jump to destination
            
L_338:

            li a0, 3         # gas cost
            jal check_gas
        

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 64        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                ld a0, 0(sp)          # offset
                addi sp, sp, 8
                jal mload_impl
                addi sp, sp, -8
                sd a0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 375        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_swap2 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_swap1 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 3663        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                # Unconditional jump
                ld t0, 0(sp)          # destination
                addi sp, sp, 8
                j L_{t0:x}           # jump to destination
            
L_345:

            li a0, 3         # gas cost
            jal check_gas
        

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 64        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                ld a0, 0(sp)          # offset
                addi sp, sp, 8
                jal mload_impl
                addi sp, sp, -8
                sd a0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_dup1 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_swap2 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld t1, 0(sp)          # second operand
                addi sp, sp, 8
                ld t0, 0(sp)          # first operand
                addi sp, sp, 8
                sub t0, t0, t1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_swap1 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_return t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            
L_34e:

            li a0, 3         # gas cost
            jal check_gas
        

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_callvalue t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_dup1 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_iszero t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 395        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                # Conditional jump
                ld t1, 0(sp)          # condition
                addi sp, sp, 8
                ld t0, 0(sp)          # destination
                addi sp, sp, 8
                beqz t1, skip_355   # if condition is 0, skip jump
                j L_355           # jump to destination
            skip_355:
            

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, None        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_dup1 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_revert t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            
L_359:

            li a0, 3         # gas cost
            jal check_gas
        

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_pop t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 404        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 2006        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                # Unconditional jump
                ld t0, 0(sp)          # destination
                addi sp, sp, 8
                j L_{t0:x}           # jump to destination
            
L_362:

            li a0, 3         # gas cost
            jal check_gas
        

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 64        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                ld a0, 0(sp)          # offset
                addi sp, sp, 8
                jal mload_impl
                addi sp, sp, -8
                sd a0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 417        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_swap2 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_swap1 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 3623        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                # Unconditional jump
                ld t0, 0(sp)          # destination
                addi sp, sp, 8
                j L_{t0:x}           # jump to destination
            
L_36f:

            li a0, 3         # gas cost
            jal check_gas
        

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 64        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                ld a0, 0(sp)          # offset
                addi sp, sp, 8
                jal mload_impl
                addi sp, sp, -8
                sd a0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_dup1 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_swap2 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld t1, 0(sp)          # second operand
                addi sp, sp, 8
                ld t0, 0(sp)          # first operand
                addi sp, sp, 8
                sub t0, t0, t1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_swap1 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_return t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            
L_378:

            li a0, 3         # gas cost
            jal check_gas
        

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_callvalue t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_dup1 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_iszero t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 437        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                # Conditional jump
                ld t1, 0(sp)          # condition
                addi sp, sp, 8
                ld t0, 0(sp)          # destination
                addi sp, sp, 8
                beqz t1, skip_37f   # if condition is 0, skip jump
                j L_37f           # jump to destination
            skip_37f:
            

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, None        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_dup1 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_revert t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            
L_383:

            li a0, 3         # gas cost
            jal check_gas
        

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_pop t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 464        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 4        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_dup1 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_calldatasize t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld t1, 0(sp)          # second operand
                addi sp, sp, 8
                ld t0, 0(sp)          # first operand
                addi sp, sp, 8
                sub t0, t0, t1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_dup2 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld t1, 0(sp)          # second operand
                addi sp, sp, 8
                ld t0, 0(sp)          # first operand
                addi sp, sp, 8
                add t0, t0, t1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_swap1 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 459        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_swap2 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_swap1 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 3730        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                # Unconditional jump
                ld t0, 0(sp)          # destination
                addi sp, sp, 8
                j L_{t0:x}           # jump to destination
            
L_399:

            li a0, 3         # gas cost
            jal check_gas
        

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 2012        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                # Unconditional jump
                ld t0, 0(sp)          # destination
                addi sp, sp, 8
                j L_{t0:x}           # jump to destination
            
L_39e:

            li a0, 3         # gas cost
            jal check_gas
        

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                nop t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            
L_3a0:

            li a0, 3         # gas cost
            jal check_gas
        

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 474        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 2144        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                # Unconditional jump
                ld t0, 0(sp)          # destination
                addi sp, sp, 8
                j L_{t0:x}           # jump to destination
            
L_3a8:

            li a0, 3         # gas cost
            jal check_gas
        

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 3        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                ld a0, 0(sp)          # key
                addi sp, sp, 8
                jal sload_impl
                addi sp, sp, -8
                sd a0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_callvalue t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld t1, 0(sp)          # second operand
                addi sp, sp, 8
                ld t0, 0(sp)          # first operand
                addi sp, sp, 8
                slt t0, t0, t1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_iszero t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 543        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                # Conditional jump
                ld t1, 0(sp)          # condition
                addi sp, sp, 8
                ld t0, 0(sp)          # destination
                addi sp, sp, 8
                beqz t1, skip_3b2   # if condition is 0, skip jump
                j L_3b2           # jump to destination
            skip_3b2:
            

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 64        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                ld a0, 0(sp)          # offset
                addi sp, sp, 8
                jal mload_impl
                addi sp, sp, -8
                sd a0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                dup0 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_addmod t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        
    # Unknown opcode at 3b8: UNKNOWN_0xc3

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 257110087081438444086713934774586016403552479005246853648220160        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                nop t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                nop t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                nop t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_dup2 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # value
                addi sp, sp, 8
                ld a0, 0(sp)          # offset
                addi sp, sp, 8
                jal mstore_impl
            

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 4        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                ld t1, 0(sp)          # second operand
                addi sp, sp, 8
                ld t0, 0(sp)          # first operand
                addi sp, sp, 8
                add t0, t0, t1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 534        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_swap1 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 3901        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                # Unconditional jump
                ld t0, 0(sp)          # destination
                addi sp, sp, 8
                j L_{t0:x}           # jump to destination
            
L_3e4:

            li a0, 3         # gas cost
            jal check_gas
        

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 64        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                ld a0, 0(sp)          # offset
                addi sp, sp, 8
                jal mload_impl
                addi sp, sp, -8
                sd a0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_dup1 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_swap2 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld t1, 0(sp)          # second operand
                addi sp, sp, 8
                ld t0, 0(sp)          # first operand
                addi sp, sp, 8
                sub t0, t0, t1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_swap1 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_revert t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            
L_3ed:

            li a0, 3         # gas cost
            jal check_gas
        

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 2        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 64        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                ld a0, 0(sp)          # offset
                addi sp, sp, 8
                jal mload_impl
                addi sp, sp, -8
                sd a0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_dup1 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 128        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                ld t1, 0(sp)          # second operand
                addi sp, sp, 8
                ld t0, 0(sp)          # first operand
                addi sp, sp, 8
                add t0, t0, t1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 64        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # value
                addi sp, sp, 8
                ld a0, 0(sp)          # offset
                addi sp, sp, 8
                jal mstore_impl
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_dup1 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_dup5 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_dup2 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # value
                addi sp, sp, 8
                ld a0, 0(sp)          # offset
                addi sp, sp, 8
                jal mstore_impl
            

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 32        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                ld t1, 0(sp)          # second operand
                addi sp, sp, 8
                ld t0, 0(sp)          # first operand
                addi sp, sp, 8
                add t0, t0, t1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_dup4 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_dup2 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # value
                addi sp, sp, 8
                ld a0, 0(sp)          # offset
                addi sp, sp, 8
                jal mstore_impl
            

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 32        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                ld t1, 0(sp)          # second operand
                addi sp, sp, 8
                ld t0, 0(sp)          # first operand
                addi sp, sp, 8
                add t0, t0, t1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_timestamp t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_dup2 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # value
                addi sp, sp, 8
                ld a0, 0(sp)          # offset
                addi sp, sp, 8
                jal mstore_impl
            

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 32        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                ld t1, 0(sp)          # second operand
                addi sp, sp, 8
                ld t0, 0(sp)          # first operand
                addi sp, sp, 8
                add t0, t0, t1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_caller t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 1461501637330902918203684832716283019655932542975        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                ld t1, 0(sp)          # second operand
                addi sp, sp, 8
                ld t0, 0(sp)          # first operand
                addi sp, sp, 8
                and t0, t0, t1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_dup2 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # value
                addi sp, sp, 8
                ld a0, 0(sp)          # offset
                addi sp, sp, 8
                jal mstore_impl
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_pop t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_swap1 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_dup1 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 1        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_dup2 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a0, 0(sp)          # key
                addi sp, sp, 8
                jal sload_impl
                addi sp, sp, -8
                sd a0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld t1, 0(sp)          # second operand
                addi sp, sp, 8
                ld t0, 0(sp)          # first operand
                addi sp, sp, 8
                add t0, t0, t1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_dup1 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_dup3 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # value
                addi sp, sp, 8
                ld a0, 0(sp)          # key
                addi sp, sp, 8
                jal sstore_impl
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_dup1 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_swap2 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_pop t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_pop t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 1        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_swap1 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld t1, 0(sp)          # second operand
                addi sp, sp, 8
                ld t0, 0(sp)          # first operand
                addi sp, sp, 8
                sub t0, t0, t1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_swap1 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, None        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # value
                addi sp, sp, 8
                ld a0, 0(sp)          # offset
                addi sp, sp, 8
                jal mstore_impl
            

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 32        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, None        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

            ld a1, 0(sp)          # size
            addi sp, sp, 8
            ld a0, 0(sp)          # offset
            addi sp, sp, 8
            jal ra, sha3_impl     # call SHA3 implementation
            addi sp, sp, -8
            sd a0, 0(sp)          # push result
        

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_swap1 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 4        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                ld t1, 0(sp)          # second operand
                addi sp, sp, 8
                ld t0, 0(sp)          # first operand
                addi sp, sp, 8
                mul t0, t0, t1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld t1, 0(sp)          # second operand
                addi sp, sp, 8
                ld t0, 0(sp)          # first operand
                addi sp, sp, 8
                add t0, t0, t1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, None        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_swap1 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_swap2 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_swap1 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_swap2 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_swap1 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_swap2 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_pop t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, None        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_dup3 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld t1, 0(sp)          # second operand
                addi sp, sp, 8
                ld t0, 0(sp)          # first operand
                addi sp, sp, 8
                add t0, t0, t1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a0, 0(sp)          # offset
                addi sp, sp, 8
                jal mload_impl
                addi sp, sp, -8
                sd a0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_dup2 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, None        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                ld t1, 0(sp)          # second operand
                addi sp, sp, 8
                ld t0, 0(sp)          # first operand
                addi sp, sp, 8
                add t0, t0, t1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_swap1 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_dup2 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 657        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_swap2 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_swap1 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 4437        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                # Unconditional jump
                ld t0, 0(sp)          # destination
                addi sp, sp, 8
                j L_{t0:x}           # jump to destination
            
L_45f:

            li a0, 3         # gas cost
            jal check_gas
        

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_pop t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 32        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_dup3 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld t1, 0(sp)          # second operand
                addi sp, sp, 8
                ld t0, 0(sp)          # first operand
                addi sp, sp, 8
                add t0, t0, t1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a0, 0(sp)          # offset
                addi sp, sp, 8
                jal mload_impl
                addi sp, sp, -8
                sd a0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_dup2 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 1        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                ld t1, 0(sp)          # second operand
                addi sp, sp, 8
                ld t0, 0(sp)          # first operand
                addi sp, sp, 8
                add t0, t0, t1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_swap1 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_dup2 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 679        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_swap2 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_swap1 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 4437        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                # Unconditional jump
                ld t0, 0(sp)          # destination
                addi sp, sp, 8
                j L_{t0:x}           # jump to destination
            
L_475:

            li a0, 3         # gas cost
            jal check_gas
        

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_pop t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 64        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_dup3 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld t1, 0(sp)          # second operand
                addi sp, sp, 8
                ld t0, 0(sp)          # first operand
                addi sp, sp, 8
                add t0, t0, t1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a0, 0(sp)          # offset
                addi sp, sp, 8
                jal mload_impl
                addi sp, sp, -8
                sd a0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_dup2 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 2        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                ld t1, 0(sp)          # second operand
                addi sp, sp, 8
                ld t0, 0(sp)          # first operand
                addi sp, sp, 8
                add t0, t0, t1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # value
                addi sp, sp, 8
                ld a0, 0(sp)          # key
                addi sp, sp, 8
                jal sstore_impl
            

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 96        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_dup3 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld t1, 0(sp)          # second operand
                addi sp, sp, 8
                ld t0, 0(sp)          # first operand
                addi sp, sp, 8
                add t0, t0, t1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a0, 0(sp)          # offset
                addi sp, sp, 8
                jal mload_impl
                addi sp, sp, -8
                sd a0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_dup2 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 3        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                ld t1, 0(sp)          # second operand
                addi sp, sp, 8
                ld t0, 0(sp)          # first operand
                addi sp, sp, 8
                add t0, t0, t1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, None        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 256        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_exp t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_dup2 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a0, 0(sp)          # key
                addi sp, sp, 8
                jal sload_impl
                addi sp, sp, -8
                sd a0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_dup2 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 1461501637330902918203684832716283019655932542975        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                ld t1, 0(sp)          # second operand
                addi sp, sp, 8
                ld t0, 0(sp)          # first operand
                addi sp, sp, 8
                mul t0, t0, t1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_not t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld t1, 0(sp)          # second operand
                addi sp, sp, 8
                ld t0, 0(sp)          # first operand
                addi sp, sp, 8
                and t0, t0, t1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_swap1 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_dup4 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 1461501637330902918203684832716283019655932542975        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                ld t1, 0(sp)          # second operand
                addi sp, sp, 8
                ld t0, 0(sp)          # first operand
                addi sp, sp, 8
                and t0, t0, t1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld t1, 0(sp)          # second operand
                addi sp, sp, 8
                ld t0, 0(sp)          # first operand
                addi sp, sp, 8
                mul t0, t0, t1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld t1, 0(sp)          # second operand
                addi sp, sp, 8
                ld t0, 0(sp)          # first operand
                addi sp, sp, 8
                or t0, t0, t1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_swap1 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # value
                addi sp, sp, 8
                ld a0, 0(sp)          # key
                addi sp, sp, 8
                jal sstore_impl
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_pop t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_pop t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_pop t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_callvalue t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 4        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, None        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_dup3 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_dup3 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a0, 0(sp)          # key
                addi sp, sp, 8
                jal sload_impl
                addi sp, sp, -8
                sd a0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 779        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_swap2 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_swap1 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 4689        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                # Unconditional jump
                ld t0, 0(sp)          # destination
                addi sp, sp, 8
                j L_{t0:x}           # jump to destination
            
L_4d9:

            li a0, 3         # gas cost
            jal check_gas
        

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_swap3 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_pop t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_pop t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_dup2 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_swap1 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # value
                addi sp, sp, 8
                ld a0, 0(sp)          # key
                addi sp, sp, 8
                jal sstore_impl
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_pop t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, None        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 795        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 1967        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                # Unconditional jump
                ld t0, 0(sp)          # destination
                addi sp, sp, 8
                j L_{t0:x}           # jump to destination
            
L_4e9:

            li a0, 3         # gas cost
            jal check_gas
        

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 1461501637330902918203684832716283019655932542975        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                ld t1, 0(sp)          # second operand
                addi sp, sp, 8
                ld t0, 0(sp)          # first operand
                addi sp, sp, 8
                and t0, t0, t1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_callvalue t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 64        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                ld a0, 0(sp)          # offset
                addi sp, sp, 8
                jal mload_impl
                addi sp, sp, -8
                sd a0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 830        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_swap1 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 4785        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                # Unconditional jump
                ld t0, 0(sp)          # destination
                addi sp, sp, 8
                j L_{t0:x}           # jump to destination
            
L_50c:

            li a0, 3         # gas cost
            jal check_gas
        

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, None        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 64        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                ld a0, 0(sp)          # offset
                addi sp, sp, 8
                jal mload_impl
                addi sp, sp, -8
                sd a0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_dup1 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_dup4 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld t1, 0(sp)          # second operand
                addi sp, sp, 8
                ld t0, 0(sp)          # first operand
                addi sp, sp, 8
                sub t0, t0, t1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_dup2 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_dup6 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_dup8 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                gas t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_call t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_swap3 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_pop t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_pop t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_pop t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                returndatasize t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_dup1 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, None        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_dup2 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld t1, 0(sp)          # second operand
                addi sp, sp, 8
                ld t0, 0(sp)          # first operand
                addi sp, sp, 8
                sub t0, zero, t0; seqz t0, t0 t0, t0, t1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 888        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                # Conditional jump
                ld t1, 0(sp)          # condition
                addi sp, sp, 8
                ld t0, 0(sp)          # destination
                addi sp, sp, 8
                beqz t1, skip_525   # if condition is 0, skip jump
                j L_525           # jump to destination
            skip_525:
            

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 64        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                ld a0, 0(sp)          # offset
                addi sp, sp, 8
                jal mload_impl
                addi sp, sp, -8
                sd a0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_swap2 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_pop t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 31        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_not t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 63        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                returndatasize t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld t1, 0(sp)          # second operand
                addi sp, sp, 8
                ld t0, 0(sp)          # first operand
                addi sp, sp, 8
                add t0, t0, t1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld t1, 0(sp)          # second operand
                addi sp, sp, 8
                ld t0, 0(sp)          # first operand
                addi sp, sp, 8
                and t0, t0, t1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_dup3 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld t1, 0(sp)          # second operand
                addi sp, sp, 8
                ld t0, 0(sp)          # first operand
                addi sp, sp, 8
                add t0, t0, t1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 64        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # value
                addi sp, sp, 8
                ld a0, 0(sp)          # offset
                addi sp, sp, 8
                jal mstore_impl
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                returndatasize t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_dup3 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # value
                addi sp, sp, 8
                ld a0, 0(sp)          # offset
                addi sp, sp, 8
                jal mstore_impl
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                returndatasize t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, None        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 32        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_dup5 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld t1, 0(sp)          # second operand
                addi sp, sp, 8
                ld t0, 0(sp)          # first operand
                addi sp, sp, 8
                add t0, t0, t1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                returndatacopy t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 893        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                # Unconditional jump
                ld t0, 0(sp)          # destination
                addi sp, sp, 8
                j L_{t0:x}           # jump to destination
            
L_546:

            li a0, 3         # gas cost
            jal check_gas
        

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 96        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_swap2 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_pop t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            
L_54b:

            li a0, 3         # gas cost
            jal check_gas
        

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_pop t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_pop t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_swap1 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_pop t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_dup1 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 961        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                # Conditional jump
                ld t1, 0(sp)          # condition
                addi sp, sp, 8
                ld t0, 0(sp)          # destination
                addi sp, sp, 8
                beqz t1, skip_554   # if condition is 0, skip jump
                j L_554           # jump to destination
            skip_554:
            

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 64        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                ld a0, 0(sp)          # offset
                addi sp, sp, 8
                jal mload_impl
                addi sp, sp, -8
                sd a0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                dup0 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_addmod t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        
    # Unknown opcode at 55a: UNKNOWN_0xc3

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 257110087081438444086713934774586016403552479005246853648220160        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                nop t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                nop t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                nop t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_dup2 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # value
                addi sp, sp, 8
                ld a0, 0(sp)          # offset
                addi sp, sp, 8
                jal mstore_impl
            

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 4        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                ld t1, 0(sp)          # second operand
                addi sp, sp, 8
                ld t0, 0(sp)          # first operand
                addi sp, sp, 8
                add t0, t0, t1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 952        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_swap1 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 4917        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                # Unconditional jump
                ld t0, 0(sp)          # destination
                addi sp, sp, 8
                j L_{t0:x}           # jump to destination
            
L_586:

            li a0, 3         # gas cost
            jal check_gas
        

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 64        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                ld a0, 0(sp)          # offset
                addi sp, sp, 8
                jal mload_impl
                addi sp, sp, -8
                sd a0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_dup1 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_swap2 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld t1, 0(sp)          # second operand
                addi sp, sp, 8
                ld t0, 0(sp)          # first operand
                addi sp, sp, 8
                sub t0, t0, t1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_swap1 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_revert t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            
L_58f:

            li a0, 3         # gas cost
            jal check_gas
        

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_caller t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 1461501637330902918203684832716283019655932542975        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                ld t1, 0(sp)          # second operand
                addi sp, sp, 8
                ld t0, 0(sp)          # first operand
                addi sp, sp, 8
                and t0, t0, t1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                dup0 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld t1, 0(sp)          # second operand
                addi sp, sp, 8
                ld t0, 0(sp)          # first operand
                addi sp, sp, 8
                mul t0, t0, t1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                returndatacopy t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, None        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_dup2 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        
    # Unknown opcode at 5ac: UNKNOWN_0xce

            li a0, 3         # gas cost
            jal check_gas
        
    # Unknown opcode at 5ad: UNKNOWN_0xfc

            li a0, 3         # gas cost
            jal check_gas
        

            # LOG1 operation
            mv a2, 1       # number of topics
            ld a1, 0(sp)         # size
            addi sp, sp, 8
            ld a0, 0(sp)         # offset
            addi sp, sp, 8
            jal log_impl         # call log implementation
        

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 18698974928826747555095181523477018721132329        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 198933741277277197475515965715133476369992856732619622590726225        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_dup1 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_swap2 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld t1, 0(sp)          # second operand
                addi sp, sp, 8
                ld t0, 0(sp)          # first operand
                addi sp, sp, 8
                sub t0, t0, t1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_swap1 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

            # LOG2 operation
            mv a2, 2       # number of topics
            ld a1, 0(sp)         # size
            addi sp, sp, 8
            ld a0, 0(sp)         # offset
            addi sp, sp, 8
            jal log_impl         # call log implementation
        

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_pop t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 1052        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 2223        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                # Unconditional jump
                ld t0, 0(sp)          # destination
                addi sp, sp, 8
                j L_{t0:x}           # jump to destination
            
L_5ea:

            li a0, 3         # gas cost
            jal check_gas
        

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_pop t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_pop t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                # Unconditional jump
                ld t0, 0(sp)          # destination
                addi sp, sp, 8
                j L_{t0:x}           # jump to destination
            
L_5ee:

            li a0, 3         # gas cost
            jal check_gas
        

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 1064        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 2232        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                # Unconditional jump
                ld t0, 0(sp)          # destination
                addi sp, sp, 8
                j L_{t0:x}           # jump to destination
            
L_5f6:

            li a0, 3         # gas cost
            jal check_gas
        

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 1072        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 2144        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                # Unconditional jump
                ld t0, 0(sp)          # destination
                addi sp, sp, 8
                j L_{t0:x}           # jump to destination
            
L_5fe:

            li a0, 3         # gas cost
            jal check_gas
        

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, None        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                selfbalance t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_swap1 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_pop t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, None        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_dup2 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld t1, 0(sp)          # second operand
                addi sp, sp, 8
                ld t0, 0(sp)          # first operand
                addi sp, sp, 8
                sgt t0, t0, t1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 1142        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                # Conditional jump
                ld t1, 0(sp)          # condition
                addi sp, sp, 8
                ld t0, 0(sp)          # destination
                addi sp, sp, 8
                beqz t1, skip_609   # if condition is 0, skip jump
                j L_609           # jump to destination
            skip_609:
            

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 64        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                ld a0, 0(sp)          # offset
                addi sp, sp, 8
                jal mload_impl
                addi sp, sp, -8
                sd a0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                dup0 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_addmod t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        
    # Unknown opcode at 60f: UNKNOWN_0xc3

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 257110087081438444086713934774586016403552479005246853648220160        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                nop t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                nop t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                nop t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_dup2 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # value
                addi sp, sp, 8
                ld a0, 0(sp)          # offset
                addi sp, sp, 8
                jal mstore_impl
            

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 4        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                ld t1, 0(sp)          # second operand
                addi sp, sp, 8
                ld t0, 0(sp)          # first operand
                addi sp, sp, 8
                add t0, t0, t1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 1133        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_swap1 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 5182        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                # Unconditional jump
                ld t0, 0(sp)          # destination
                addi sp, sp, 8
                j L_{t0:x}           # jump to destination
            
L_63b:

            li a0, 3         # gas cost
            jal check_gas
        

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 64        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                ld a0, 0(sp)          # offset
                addi sp, sp, 8
                jal mload_impl
                addi sp, sp, -8
                sd a0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_dup1 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_swap2 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld t1, 0(sp)          # second operand
                addi sp, sp, 8
                ld t0, 0(sp)          # first operand
                addi sp, sp, 8
                sub t0, t0, t1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_swap1 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_revert t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            
L_644:

            li a0, 3         # gas cost
            jal check_gas
        

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, None        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 1151        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 1967        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                # Unconditional jump
                ld t0, 0(sp)          # destination
                addi sp, sp, 8
                j L_{t0:x}           # jump to destination
            
L_64d:

            li a0, 3         # gas cost
            jal check_gas
        

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 1461501637330902918203684832716283019655932542975        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                ld t1, 0(sp)          # second operand
                addi sp, sp, 8
                ld t0, 0(sp)          # first operand
                addi sp, sp, 8
                and t0, t0, t1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_dup3 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 64        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                ld a0, 0(sp)          # offset
                addi sp, sp, 8
                jal mload_impl
                addi sp, sp, -8
                sd a0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 1186        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_swap1 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 4785        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                # Unconditional jump
                ld t0, 0(sp)          # destination
                addi sp, sp, 8
                j L_{t0:x}           # jump to destination
            
L_670:

            li a0, 3         # gas cost
            jal check_gas
        

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, None        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 64        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                ld a0, 0(sp)          # offset
                addi sp, sp, 8
                jal mload_impl
                addi sp, sp, -8
                sd a0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_dup1 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_dup4 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld t1, 0(sp)          # second operand
                addi sp, sp, 8
                ld t0, 0(sp)          # first operand
                addi sp, sp, 8
                sub t0, t0, t1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_dup2 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_dup6 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_dup8 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                gas t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_call t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_swap3 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_pop t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_pop t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_pop t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                returndatasize t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_dup1 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, None        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_dup2 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld t1, 0(sp)          # second operand
                addi sp, sp, 8
                ld t0, 0(sp)          # first operand
                addi sp, sp, 8
                sub t0, zero, t0; seqz t0, t0 t0, t0, t1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 1244        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                # Conditional jump
                ld t1, 0(sp)          # condition
                addi sp, sp, 8
                ld t0, 0(sp)          # destination
                addi sp, sp, 8
                beqz t1, skip_689   # if condition is 0, skip jump
                j L_689           # jump to destination
            skip_689:
            

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 64        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                ld a0, 0(sp)          # offset
                addi sp, sp, 8
                jal mload_impl
                addi sp, sp, -8
                sd a0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_swap2 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_pop t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 31        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_not t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 63        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                returndatasize t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld t1, 0(sp)          # second operand
                addi sp, sp, 8
                ld t0, 0(sp)          # first operand
                addi sp, sp, 8
                add t0, t0, t1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld t1, 0(sp)          # second operand
                addi sp, sp, 8
                ld t0, 0(sp)          # first operand
                addi sp, sp, 8
                and t0, t0, t1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_dup3 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld t1, 0(sp)          # second operand
                addi sp, sp, 8
                ld t0, 0(sp)          # first operand
                addi sp, sp, 8
                add t0, t0, t1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 64        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # value
                addi sp, sp, 8
                ld a0, 0(sp)          # offset
                addi sp, sp, 8
                jal mstore_impl
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                returndatasize t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_dup3 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # value
                addi sp, sp, 8
                ld a0, 0(sp)          # offset
                addi sp, sp, 8
                jal mstore_impl
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                returndatasize t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, None        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 32        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_dup5 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld t1, 0(sp)          # second operand
                addi sp, sp, 8
                ld t0, 0(sp)          # first operand
                addi sp, sp, 8
                add t0, t0, t1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                returndatacopy t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 1249        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                # Unconditional jump
                ld t0, 0(sp)          # destination
                addi sp, sp, 8
                j L_{t0:x}           # jump to destination
            
L_6aa:

            li a0, 3         # gas cost
            jal check_gas
        

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 96        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_swap2 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_pop t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            
L_6af:

            li a0, 3         # gas cost
            jal check_gas
        

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_pop t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_pop t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_swap1 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_pop t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_dup1 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 1317        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                # Conditional jump
                ld t1, 0(sp)          # condition
                addi sp, sp, 8
                ld t0, 0(sp)          # destination
                addi sp, sp, 8
                beqz t1, skip_6b8   # if condition is 0, skip jump
                j L_6b8           # jump to destination
            skip_6b8:
            

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 64        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                ld a0, 0(sp)          # offset
                addi sp, sp, 8
                jal mload_impl
                addi sp, sp, -8
                sd a0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                dup0 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_addmod t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        
    # Unknown opcode at 6be: UNKNOWN_0xc3

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 257110087081438444086713934774586016403552479005246853648220160        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                nop t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                nop t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                nop t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_dup2 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # value
                addi sp, sp, 8
                ld a0, 0(sp)          # offset
                addi sp, sp, 8
                jal mstore_impl
            

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 4        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                ld t1, 0(sp)          # second operand
                addi sp, sp, 8
                ld t0, 0(sp)          # first operand
                addi sp, sp, 8
                add t0, t0, t1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 1308        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_swap1 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 5286        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                # Unconditional jump
                ld t0, 0(sp)          # destination
                addi sp, sp, 8
                j L_{t0:x}           # jump to destination
            
L_6ea:

            li a0, 3         # gas cost
            jal check_gas
        

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 64        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                ld a0, 0(sp)          # offset
                addi sp, sp, 8
                jal mload_impl
                addi sp, sp, -8
                sd a0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_dup1 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_swap2 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld t1, 0(sp)          # second operand
                addi sp, sp, 8
                ld t0, 0(sp)          # first operand
                addi sp, sp, 8
                sub t0, t0, t1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_swap1 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_revert t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            
L_6f3:

            li a0, 3         # gas cost
            jal check_gas
        

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_pop t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_pop t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 1327        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 2223        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                # Unconditional jump
                ld t0, 0(sp)          # destination
                addi sp, sp, 8
                j L_{t0:x}           # jump to destination
            
L_6fd:

            li a0, 3         # gas cost
            jal check_gas
        

            li a0, 3         # gas cost
            jal check_gas
        

                # Unconditional jump
                ld t0, 0(sp)          # destination
                addi sp, sp, 8
                j L_{t0:x}           # jump to destination
            
L_6ff:

            li a0, 3         # gas cost
            jal check_gas
        

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 1337        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 2232        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                # Unconditional jump
                ld t0, 0(sp)          # destination
                addi sp, sp, 8
                j L_{t0:x}           # jump to destination
            
L_707:

            li a0, 3         # gas cost
            jal check_gas
        

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 1346        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, None        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 2367        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                # Unconditional jump
                ld t0, 0(sp)          # destination
                addi sp, sp, 8
                j L_{t0:x}           # jump to destination
            
L_710:

            li a0, 3         # gas cost
            jal check_gas
        

            li a0, 3         # gas cost
            jal check_gas
        

                # Unconditional jump
                ld t0, 0(sp)          # destination
                addi sp, sp, 8
                j L_{t0:x}           # jump to destination
            
L_712:

            li a0, 3         # gas cost
            jal check_gas
        

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 1356        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 2232        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                # Unconditional jump
                ld t0, 0(sp)          # destination
                addi sp, sp, 8
                j L_{t0:x}           # jump to destination
            
L_71a:

            li a0, 3         # gas cost
            jal check_gas
        

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, None        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_dup2 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld t1, 0(sp)          # second operand
                addi sp, sp, 8
                ld t0, 0(sp)          # first operand
                addi sp, sp, 8
                sgt t0, t0, t1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 1422        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                # Conditional jump
                ld t1, 0(sp)          # condition
                addi sp, sp, 8
                ld t0, 0(sp)          # destination
                addi sp, sp, 8
                beqz t1, skip_721   # if condition is 0, skip jump
                j L_721           # jump to destination
            skip_721:
            

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 64        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                ld a0, 0(sp)          # offset
                addi sp, sp, 8
                jal mload_impl
                addi sp, sp, -8
                sd a0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                dup0 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_addmod t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        
    # Unknown opcode at 727: UNKNOWN_0xc3

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 257110087081438444086713934774586016403552479005246853648220160        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                nop t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                nop t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                nop t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_dup2 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # value
                addi sp, sp, 8
                ld a0, 0(sp)          # offset
                addi sp, sp, 8
                jal mstore_impl
            

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 4        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                ld t1, 0(sp)          # second operand
                addi sp, sp, 8
                ld t0, 0(sp)          # first operand
                addi sp, sp, 8
                add t0, t0, t1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 1413        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_swap1 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 5428        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                # Unconditional jump
                ld t0, 0(sp)          # destination
                addi sp, sp, 8
                j L_{t0:x}           # jump to destination
            
L_753:

            li a0, 3         # gas cost
            jal check_gas
        

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 64        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                ld a0, 0(sp)          # offset
                addi sp, sp, 8
                jal mload_impl
                addi sp, sp, -8
                sd a0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_dup1 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_swap2 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld t1, 0(sp)          # second operand
                addi sp, sp, 8
                ld t0, 0(sp)          # first operand
                addi sp, sp, 8
                sub t0, t0, t1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_swap1 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_revert t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            
L_75c:

            li a0, 3         # gas cost
            jal check_gas
        

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_dup1 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 3        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_dup2 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_swap1 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # value
                addi sp, sp, 8
                ld a0, 0(sp)          # key
                addi sp, sp, 8
                jal sstore_impl
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_pop t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                dup0 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                returndatacopy t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        
    # Unknown opcode at 766: UNKNOWN_0x26

            li a0, 3         # gas cost
            jal check_gas
        
    # Unknown opcode at 767: UNKNOWN_0x23

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 373031450714013168598201        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_exp t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_addmod t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 16508697212771974337268042442067568893190208        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                ld a0, 0(sp)          # offset
                addi sp, sp, 8
                jal mload_impl
                addi sp, sp, -8
                sd a0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 1476        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_swap2 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_swap1 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 3623        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                # Unconditional jump
                ld t0, 0(sp)          # destination
                addi sp, sp, 8
                j L_{t0:x}           # jump to destination
            
L_792:

            li a0, 3         # gas cost
            jal check_gas
        

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 64        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                ld a0, 0(sp)          # offset
                addi sp, sp, 8
                jal mload_impl
                addi sp, sp, -8
                sd a0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_dup1 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_swap2 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld t1, 0(sp)          # second operand
                addi sp, sp, 8
                ld t0, 0(sp)          # first operand
                addi sp, sp, 8
                sub t0, t0, t1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_swap1 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

            # LOG1 operation
            mv a2, 1       # number of topics
            ld a1, 0(sp)         # size
            addi sp, sp, 8
            ld a0, 0(sp)         # offset
            addi sp, sp, 8
            jal log_impl         # call log implementation
        

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_pop t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                # Unconditional jump
                ld t0, 0(sp)          # destination
                addi sp, sp, 8
                j L_{t0:x}           # jump to destination
            
L_79d:

            li a0, 3         # gas cost
            jal check_gas
        

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 96        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 2        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_dup1 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a0, 0(sp)          # key
                addi sp, sp, 8
                jal sload_impl
                addi sp, sp, -8
                sd a0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_dup1 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 32        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                ld t1, 0(sp)          # second operand
                addi sp, sp, 8
                ld t0, 0(sp)          # first operand
                addi sp, sp, 8
                mul t0, t0, t1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 32        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                ld t1, 0(sp)          # second operand
                addi sp, sp, 8
                ld t0, 0(sp)          # first operand
                addi sp, sp, 8
                add t0, t0, t1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 64        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                ld a0, 0(sp)          # offset
                addi sp, sp, 8
                jal mload_impl
                addi sp, sp, -8
                sd a0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_swap1 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_dup2 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld t1, 0(sp)          # second operand
                addi sp, sp, 8
                ld t0, 0(sp)          # first operand
                addi sp, sp, 8
                add t0, t0, t1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 64        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # value
                addi sp, sp, 8
                ld a0, 0(sp)          # offset
                addi sp, sp, 8
                jal mstore_impl
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_dup1 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_swap3 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_swap2 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_swap1 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_dup2 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_dup2 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # value
                addi sp, sp, 8
                ld a0, 0(sp)          # offset
                addi sp, sp, 8
                jal mstore_impl
            

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 32        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                ld t1, 0(sp)          # second operand
                addi sp, sp, 8
                ld t0, 0(sp)          # first operand
                addi sp, sp, 8
                add t0, t0, t1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, None        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_swap1 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            
L_7c0:

            li a0, 3         # gas cost
            jal check_gas
        

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_dup3 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_dup3 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld t1, 0(sp)          # second operand
                addi sp, sp, 8
                ld t0, 0(sp)          # first operand
                addi sp, sp, 8
                slt t0, t0, t1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_iszero t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 1952        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                # Conditional jump
                ld t1, 0(sp)          # condition
                addi sp, sp, 8
                ld t0, 0(sp)          # destination
                addi sp, sp, 8
                beqz t1, skip_7c8   # if condition is 0, skip jump
                j L_7c8           # jump to destination
            skip_7c8:
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_dup4 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_dup3 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_swap1 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, None        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # value
                addi sp, sp, 8
                ld a0, 0(sp)          # offset
                addi sp, sp, 8
                jal mstore_impl
            

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 32        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, None        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

            ld a1, 0(sp)          # size
            addi sp, sp, 8
            ld a0, 0(sp)          # offset
            addi sp, sp, 8
            jal ra, sha3_impl     # call SHA3 implementation
            addi sp, sp, -8
            sd a0, 0(sp)          # push result
        

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_swap1 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 4        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                ld t1, 0(sp)          # second operand
                addi sp, sp, 8
                ld t0, 0(sp)          # first operand
                addi sp, sp, 8
                mul t0, t0, t1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld t1, 0(sp)          # second operand
                addi sp, sp, 8
                ld t0, 0(sp)          # first operand
                addi sp, sp, 8
                add t0, t0, t1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 64        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                ld a0, 0(sp)          # offset
                addi sp, sp, 8
                jal mload_impl
                addi sp, sp, -8
                sd a0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_dup1 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 128        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                ld t1, 0(sp)          # second operand
                addi sp, sp, 8
                ld t0, 0(sp)          # first operand
                addi sp, sp, 8
                add t0, t0, t1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 64        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # value
                addi sp, sp, 8
                ld a0, 0(sp)          # offset
                addi sp, sp, 8
                jal mstore_impl
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_swap1 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_dup2 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, None        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_dup3 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld t1, 0(sp)          # second operand
                addi sp, sp, 8
                ld t0, 0(sp)          # first operand
                addi sp, sp, 8
                add t0, t0, t1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_dup1 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a0, 0(sp)          # key
                addi sp, sp, 8
                jal sload_impl
                addi sp, sp, -8
                sd a0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 1570        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_swap1 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 3976        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                # Unconditional jump
                ld t0, 0(sp)          # destination
                addi sp, sp, 8
                j L_{t0:x}           # jump to destination
            
L_7f0:

            li a0, 3         # gas cost
            jal check_gas
        

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_dup1 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 31        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                ld t1, 0(sp)          # second operand
                addi sp, sp, 8
                ld t0, 0(sp)          # first operand
                addi sp, sp, 8
                add t0, t0, t1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 32        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_dup1 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_swap2 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld t1, 0(sp)          # second operand
                addi sp, sp, 8
                ld t0, 0(sp)          # first operand
                addi sp, sp, 8
                div t0, t0, t1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld t1, 0(sp)          # second operand
                addi sp, sp, 8
                ld t0, 0(sp)          # first operand
                addi sp, sp, 8
                mul t0, t0, t1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 32        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                ld t1, 0(sp)          # second operand
                addi sp, sp, 8
                ld t0, 0(sp)          # first operand
                addi sp, sp, 8
                add t0, t0, t1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 64        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                ld a0, 0(sp)          # offset
                addi sp, sp, 8
                jal mload_impl
                addi sp, sp, -8
                sd a0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_swap1 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_dup2 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld t1, 0(sp)          # second operand
                addi sp, sp, 8
                ld t0, 0(sp)          # first operand
                addi sp, sp, 8
                add t0, t0, t1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 64        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # value
                addi sp, sp, 8
                ld a0, 0(sp)          # offset
                addi sp, sp, 8
                jal mstore_impl
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_dup1 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_swap3 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_swap2 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_swap1 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_dup2 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_dup2 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # value
                addi sp, sp, 8
                ld a0, 0(sp)          # offset
                addi sp, sp, 8
                jal mstore_impl
            

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 32        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                ld t1, 0(sp)          # second operand
                addi sp, sp, 8
                ld t0, 0(sp)          # first operand
                addi sp, sp, 8
                add t0, t0, t1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_dup3 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_dup1 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a0, 0(sp)          # key
                addi sp, sp, 8
                jal sload_impl
                addi sp, sp, -8
                sd a0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 1614        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_swap1 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 3976        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                # Unconditional jump
                ld t0, 0(sp)          # destination
                addi sp, sp, 8
                j L_{t0:x}           # jump to destination
            
L_81c:

            li a0, 3         # gas cost
            jal check_gas
        

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_dup1 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_iszero t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 1689        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                # Conditional jump
                ld t1, 0(sp)          # condition
                addi sp, sp, 8
                ld t0, 0(sp)          # destination
                addi sp, sp, 8
                beqz t1, skip_822   # if condition is 0, skip jump
                j L_822           # jump to destination
            skip_822:
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_dup1 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 31        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                ld t1, 0(sp)          # second operand
                addi sp, sp, 8
                ld t0, 0(sp)          # first operand
                addi sp, sp, 8
                slt t0, t0, t1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 1648        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                # Conditional jump
                ld t1, 0(sp)          # condition
                addi sp, sp, 8
                ld t0, 0(sp)          # destination
                addi sp, sp, 8
                beqz t1, skip_82a   # if condition is 0, skip jump
                j L_82a           # jump to destination
            skip_82a:
            

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 256        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_dup1 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_dup4 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a0, 0(sp)          # key
                addi sp, sp, 8
                jal sload_impl
                addi sp, sp, -8
                sd a0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld t1, 0(sp)          # second operand
                addi sp, sp, 8
                ld t0, 0(sp)          # first operand
                addi sp, sp, 8
                div t0, t0, t1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld t1, 0(sp)          # second operand
                addi sp, sp, 8
                ld t0, 0(sp)          # first operand
                addi sp, sp, 8
                mul t0, t0, t1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_dup4 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # value
                addi sp, sp, 8
                ld a0, 0(sp)          # offset
                addi sp, sp, 8
                jal mstore_impl
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_swap2 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 32        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                ld t1, 0(sp)          # second operand
                addi sp, sp, 8
                ld t0, 0(sp)          # first operand
                addi sp, sp, 8
                add t0, t0, t1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_swap2 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 1689        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                # Unconditional jump
                ld t0, 0(sp)          # destination
                addi sp, sp, 8
                j L_{t0:x}           # jump to destination
            
L_83e:

            li a0, 3         # gas cost
            jal check_gas
        

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_dup3 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld t1, 0(sp)          # second operand
                addi sp, sp, 8
                ld t0, 0(sp)          # first operand
                addi sp, sp, 8
                add t0, t0, t1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_swap2 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_swap1 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, None        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # value
                addi sp, sp, 8
                ld a0, 0(sp)          # offset
                addi sp, sp, 8
                jal mstore_impl
            

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 32        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, None        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

            ld a1, 0(sp)          # size
            addi sp, sp, 8
            ld a0, 0(sp)          # offset
            addi sp, sp, 8
            jal ra, sha3_impl     # call SHA3 implementation
            addi sp, sp, -8
            sd a0, 0(sp)          # push result
        

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_swap1 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            
L_84a:

            li a0, 3         # gas cost
            jal check_gas
        

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_dup2 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a0, 0(sp)          # key
                addi sp, sp, 8
                jal sload_impl
                addi sp, sp, -8
                sd a0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_dup2 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # value
                addi sp, sp, 8
                ld a0, 0(sp)          # offset
                addi sp, sp, 8
                jal mstore_impl
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_swap1 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 1        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                ld t1, 0(sp)          # second operand
                addi sp, sp, 8
                ld t0, 0(sp)          # first operand
                addi sp, sp, 8
                add t0, t0, t1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_swap1 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 32        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                ld t1, 0(sp)          # second operand
                addi sp, sp, 8
                ld t0, 0(sp)          # first operand
                addi sp, sp, 8
                add t0, t0, t1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_dup1 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_dup4 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld t1, 0(sp)          # second operand
                addi sp, sp, 8
                ld t0, 0(sp)          # first operand
                addi sp, sp, 8
                sgt t0, t0, t1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 1660        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                # Conditional jump
                ld t1, 0(sp)          # condition
                addi sp, sp, 8
                ld t0, 0(sp)          # destination
                addi sp, sp, 8
                beqz t1, skip_85d   # if condition is 0, skip jump
                j L_85d           # jump to destination
            skip_85d:
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_dup3 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_swap1 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld t1, 0(sp)          # second operand
                addi sp, sp, 8
                ld t0, 0(sp)          # first operand
                addi sp, sp, 8
                sub t0, t0, t1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 31        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                ld t1, 0(sp)          # second operand
                addi sp, sp, 8
                ld t0, 0(sp)          # first operand
                addi sp, sp, 8
                and t0, t0, t1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_dup3 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld t1, 0(sp)          # second operand
                addi sp, sp, 8
                ld t0, 0(sp)          # first operand
                addi sp, sp, 8
                add t0, t0, t1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_swap2 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            
L_867:

            li a0, 3         # gas cost
            jal check_gas
        

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_pop t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_pop t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_pop t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_pop t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_pop t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_dup2 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # value
                addi sp, sp, 8
                ld a0, 0(sp)          # offset
                addi sp, sp, 8
                jal mstore_impl
            

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 32        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                ld t1, 0(sp)          # second operand
                addi sp, sp, 8
                ld t0, 0(sp)          # first operand
                addi sp, sp, 8
                add t0, t0, t1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 1        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_dup3 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld t1, 0(sp)          # second operand
                addi sp, sp, 8
                ld t0, 0(sp)          # first operand
                addi sp, sp, 8
                add t0, t0, t1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_dup1 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a0, 0(sp)          # key
                addi sp, sp, 8
                jal sload_impl
                addi sp, sp, -8
                sd a0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 1714        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_swap1 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 3976        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                # Unconditional jump
                ld t0, 0(sp)          # destination
                addi sp, sp, 8
                j L_{t0:x}           # jump to destination
            
L_880:

            li a0, 3         # gas cost
            jal check_gas
        

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_dup1 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 31        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                ld t1, 0(sp)          # second operand
                addi sp, sp, 8
                ld t0, 0(sp)          # first operand
                addi sp, sp, 8
                add t0, t0, t1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 32        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_dup1 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_swap2 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld t1, 0(sp)          # second operand
                addi sp, sp, 8
                ld t0, 0(sp)          # first operand
                addi sp, sp, 8
                div t0, t0, t1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld t1, 0(sp)          # second operand
                addi sp, sp, 8
                ld t0, 0(sp)          # first operand
                addi sp, sp, 8
                mul t0, t0, t1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 32        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                ld t1, 0(sp)          # second operand
                addi sp, sp, 8
                ld t0, 0(sp)          # first operand
                addi sp, sp, 8
                add t0, t0, t1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 64        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                ld a0, 0(sp)          # offset
                addi sp, sp, 8
                jal mload_impl
                addi sp, sp, -8
                sd a0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_swap1 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_dup2 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld t1, 0(sp)          # second operand
                addi sp, sp, 8
                ld t0, 0(sp)          # first operand
                addi sp, sp, 8
                add t0, t0, t1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 64        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # value
                addi sp, sp, 8
                ld a0, 0(sp)          # offset
                addi sp, sp, 8
                jal mstore_impl
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_dup1 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_swap3 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_swap2 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_swap1 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_dup2 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_dup2 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # value
                addi sp, sp, 8
                ld a0, 0(sp)          # offset
                addi sp, sp, 8
                jal mstore_impl
            

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 32        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                ld t1, 0(sp)          # second operand
                addi sp, sp, 8
                ld t0, 0(sp)          # first operand
                addi sp, sp, 8
                add t0, t0, t1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_dup3 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_dup1 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a0, 0(sp)          # key
                addi sp, sp, 8
                jal sload_impl
                addi sp, sp, -8
                sd a0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 1758        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_swap1 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 3976        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                # Unconditional jump
                ld t0, 0(sp)          # destination
                addi sp, sp, 8
                j L_{t0:x}           # jump to destination
            
L_8ac:

            li a0, 3         # gas cost
            jal check_gas
        

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_dup1 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_iszero t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 1833        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                # Conditional jump
                ld t1, 0(sp)          # condition
                addi sp, sp, 8
                ld t0, 0(sp)          # destination
                addi sp, sp, 8
                beqz t1, skip_8b2   # if condition is 0, skip jump
                j L_8b2           # jump to destination
            skip_8b2:
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_dup1 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 31        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                ld t1, 0(sp)          # second operand
                addi sp, sp, 8
                ld t0, 0(sp)          # first operand
                addi sp, sp, 8
                slt t0, t0, t1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 1792        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                # Conditional jump
                ld t1, 0(sp)          # condition
                addi sp, sp, 8
                ld t0, 0(sp)          # destination
                addi sp, sp, 8
                beqz t1, skip_8ba   # if condition is 0, skip jump
                j L_8ba           # jump to destination
            skip_8ba:
            

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 256        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_dup1 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_dup4 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a0, 0(sp)          # key
                addi sp, sp, 8
                jal sload_impl
                addi sp, sp, -8
                sd a0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld t1, 0(sp)          # second operand
                addi sp, sp, 8
                ld t0, 0(sp)          # first operand
                addi sp, sp, 8
                div t0, t0, t1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld t1, 0(sp)          # second operand
                addi sp, sp, 8
                ld t0, 0(sp)          # first operand
                addi sp, sp, 8
                mul t0, t0, t1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_dup4 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # value
                addi sp, sp, 8
                ld a0, 0(sp)          # offset
                addi sp, sp, 8
                jal mstore_impl
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_swap2 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 32        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                ld t1, 0(sp)          # second operand
                addi sp, sp, 8
                ld t0, 0(sp)          # first operand
                addi sp, sp, 8
                add t0, t0, t1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_swap2 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 1833        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                # Unconditional jump
                ld t0, 0(sp)          # destination
                addi sp, sp, 8
                j L_{t0:x}           # jump to destination
            
L_8ce:

            li a0, 3         # gas cost
            jal check_gas
        

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_dup3 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld t1, 0(sp)          # second operand
                addi sp, sp, 8
                ld t0, 0(sp)          # first operand
                addi sp, sp, 8
                add t0, t0, t1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_swap2 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_swap1 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, None        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # value
                addi sp, sp, 8
                ld a0, 0(sp)          # offset
                addi sp, sp, 8
                jal mstore_impl
            

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 32        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, None        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

            ld a1, 0(sp)          # size
            addi sp, sp, 8
            ld a0, 0(sp)          # offset
            addi sp, sp, 8
            jal ra, sha3_impl     # call SHA3 implementation
            addi sp, sp, -8
            sd a0, 0(sp)          # push result
        

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_swap1 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            
L_8da:

            li a0, 3         # gas cost
            jal check_gas
        

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_dup2 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a0, 0(sp)          # key
                addi sp, sp, 8
                jal sload_impl
                addi sp, sp, -8
                sd a0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_dup2 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # value
                addi sp, sp, 8
                ld a0, 0(sp)          # offset
                addi sp, sp, 8
                jal mstore_impl
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_swap1 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 1        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                ld t1, 0(sp)          # second operand
                addi sp, sp, 8
                ld t0, 0(sp)          # first operand
                addi sp, sp, 8
                add t0, t0, t1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_swap1 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 32        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                ld t1, 0(sp)          # second operand
                addi sp, sp, 8
                ld t0, 0(sp)          # first operand
                addi sp, sp, 8
                add t0, t0, t1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_dup1 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_dup4 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld t1, 0(sp)          # second operand
                addi sp, sp, 8
                ld t0, 0(sp)          # first operand
                addi sp, sp, 8
                sgt t0, t0, t1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 1804        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                # Conditional jump
                ld t1, 0(sp)          # condition
                addi sp, sp, 8
                ld t0, 0(sp)          # destination
                addi sp, sp, 8
                beqz t1, skip_8ed   # if condition is 0, skip jump
                j L_8ed           # jump to destination
            skip_8ed:
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_dup3 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_swap1 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld t1, 0(sp)          # second operand
                addi sp, sp, 8
                ld t0, 0(sp)          # first operand
                addi sp, sp, 8
                sub t0, t0, t1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 31        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                ld t1, 0(sp)          # second operand
                addi sp, sp, 8
                ld t0, 0(sp)          # first operand
                addi sp, sp, 8
                and t0, t0, t1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_dup3 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld t1, 0(sp)          # second operand
                addi sp, sp, 8
                ld t0, 0(sp)          # first operand
                addi sp, sp, 8
                add t0, t0, t1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_swap2 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            
L_8f7:

            li a0, 3         # gas cost
            jal check_gas
        

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_pop t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_pop t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_pop t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_pop t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_pop t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_dup2 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # value
                addi sp, sp, 8
                ld a0, 0(sp)          # offset
                addi sp, sp, 8
                jal mstore_impl
            

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 32        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                ld t1, 0(sp)          # second operand
                addi sp, sp, 8
                ld t0, 0(sp)          # first operand
                addi sp, sp, 8
                add t0, t0, t1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 2        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_dup3 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld t1, 0(sp)          # second operand
                addi sp, sp, 8
                ld t0, 0(sp)          # first operand
                addi sp, sp, 8
                add t0, t0, t1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a0, 0(sp)          # key
                addi sp, sp, 8
                jal sload_impl
                addi sp, sp, -8
                sd a0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_dup2 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # value
                addi sp, sp, 8
                ld a0, 0(sp)          # offset
                addi sp, sp, 8
                jal mstore_impl
            

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 32        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                ld t1, 0(sp)          # second operand
                addi sp, sp, 8
                ld t0, 0(sp)          # first operand
                addi sp, sp, 8
                add t0, t0, t1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 3        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_dup3 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld t1, 0(sp)          # second operand
                addi sp, sp, 8
                ld t0, 0(sp)          # first operand
                addi sp, sp, 8
                add t0, t0, t1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, None        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_swap1 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a0, 0(sp)          # key
                addi sp, sp, 8
                jal sload_impl
                addi sp, sp, -8
                sd a0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_swap1 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 256        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_exp t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_swap1 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld t1, 0(sp)          # second operand
                addi sp, sp, 8
                ld t0, 0(sp)          # first operand
                addi sp, sp, 8
                div t0, t0, t1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 1461501637330902918203684832716283019655932542975        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                ld t1, 0(sp)          # second operand
                addi sp, sp, 8
                ld t0, 0(sp)          # first operand
                addi sp, sp, 8
                and t0, t0, t1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 1461501637330902918203684832716283019655932542975        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                ld t1, 0(sp)          # second operand
                addi sp, sp, 8
                ld t0, 0(sp)          # first operand
                addi sp, sp, 8
                and t0, t0, t1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 1461501637330902918203684832716283019655932542975        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                ld t1, 0(sp)          # second operand
                addi sp, sp, 8
                ld t0, 0(sp)          # first operand
                addi sp, sp, 8
                and t0, t0, t1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_dup2 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # value
                addi sp, sp, 8
                ld a0, 0(sp)          # offset
                addi sp, sp, 8
                jal mstore_impl
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_pop t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_pop t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_dup2 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # value
                addi sp, sp, 8
                ld a0, 0(sp)          # offset
                addi sp, sp, 8
                jal mstore_impl
            

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 32        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                ld t1, 0(sp)          # second operand
                addi sp, sp, 8
                ld t0, 0(sp)          # first operand
                addi sp, sp, 8
                add t0, t0, t1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_swap1 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 1        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                ld t1, 0(sp)          # second operand
                addi sp, sp, 8
                ld t0, 0(sp)          # first operand
                addi sp, sp, 8
                add t0, t0, t1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_swap1 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 1522        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                # Unconditional jump
                ld t0, 0(sp)          # destination
                addi sp, sp, 8
                j L_{t0:x}           # jump to destination
            
L_96e:

            li a0, 3         # gas cost
            jal check_gas
        

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_pop t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_pop t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_pop t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_pop t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_swap1 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_pop t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_swap1 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                # Unconditional jump
                ld t0, 0(sp)          # destination
                addi sp, sp, 8
                j L_{t0:x}           # jump to destination
            
L_977:

            li a0, 3         # gas cost
            jal check_gas
        

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 3        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                ld a0, 0(sp)          # key
                addi sp, sp, 8
                jal sload_impl
                addi sp, sp, -8
                sd a0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_dup2 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                # Unconditional jump
                ld t0, 0(sp)          # destination
                addi sp, sp, 8
                j L_{t0:x}           # jump to destination
            
L_97d:

            li a0, 3         # gas cost
            jal check_gas
        

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, None        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_dup1 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, None        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_swap1 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a0, 0(sp)          # key
                addi sp, sp, 8
                jal sload_impl
                addi sp, sp, -8
                sd a0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_swap1 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 256        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_exp t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_swap1 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld t1, 0(sp)          # second operand
                addi sp, sp, 8
                ld t0, 0(sp)          # first operand
                addi sp, sp, 8
                div t0, t0, t1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 1461501637330902918203684832716283019655932542975        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                ld t1, 0(sp)          # second operand
                addi sp, sp, 8
                ld t0, 0(sp)          # first operand
                addi sp, sp, 8
                and t0, t0, t1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_swap1 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_pop t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_swap1 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                # Unconditional jump
                ld t0, 0(sp)          # destination
                addi sp, sp, 8
                j L_{t0:x}           # jump to destination
            
L_9a4:

            li a0, 3         # gas cost
            jal check_gas
        

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 4        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                ld a0, 0(sp)          # key
                addi sp, sp, 8
                jal sload_impl
                addi sp, sp, -8
                sd a0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_dup2 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                # Unconditional jump
                ld t0, 0(sp)          # destination
                addi sp, sp, 8
                j L_{t0:x}           # jump to destination
            
L_9aa:

            li a0, 3         # gas cost
            jal check_gas
        

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 2020        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 2232        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                # Unconditional jump
                ld t0, 0(sp)          # destination
                addi sp, sp, 8
                j L_{t0:x}           # jump to destination
            
L_9b2:

            li a0, 3         # gas cost
            jal check_gas
        

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, None        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 1461501637330902918203684832716283019655932542975        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                ld t1, 0(sp)          # second operand
                addi sp, sp, 8
                ld t0, 0(sp)          # first operand
                addi sp, sp, 8
                and t0, t0, t1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_dup2 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 1461501637330902918203684832716283019655932542975        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                ld t1, 0(sp)          # second operand
                addi sp, sp, 8
                ld t0, 0(sp)          # first operand
                addi sp, sp, 8
                and t0, t0, t1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld t1, 0(sp)          # second operand
                addi sp, sp, 8
                ld t0, 0(sp)          # first operand
                addi sp, sp, 8
                sub t0, t0, t1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 2132        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                # Conditional jump
                ld t1, 0(sp)          # condition
                addi sp, sp, 8
                ld t0, 0(sp)          # destination
                addi sp, sp, 8
                beqz t1, skip_9e5   # if condition is 0, skip jump
                j L_9e5           # jump to destination
            skip_9e5:
            

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, None        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 64        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                ld a0, 0(sp)          # offset
                addi sp, sp, 8
                jal mload_impl
                addi sp, sp, -8
                sd a0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                dup0 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        
    # Unknown opcode at 9eb: UNKNOWN_0x1e

            li a0, 3         # gas cost
            jal check_gas
        
    # Unknown opcode at 9ec: UNKNOWN_0x4f

            li a0, 3         # gas cost
            jal check_gas
        
    # Unknown opcode at 9ed: UNKNOWN_0xbd

            li a0, 3         # gas cost
            jal check_gas
        
    # Unknown opcode at 9ee: UNKNOWN_0xf7

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                nop t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                nop t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                nop t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                nop t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                nop t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                nop t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                nop t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                nop t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                nop t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                nop t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                nop t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                nop t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                nop t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                nop t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                nop t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                nop t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                nop t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                nop t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                nop t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                nop t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                nop t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                nop t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                nop t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                nop t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                nop t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                nop t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                nop t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                nop t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_dup2 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # value
                addi sp, sp, 8
                ld a0, 0(sp)          # offset
                addi sp, sp, 8
                jal mstore_impl
            

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 4        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                ld t1, 0(sp)          # second operand
                addi sp, sp, 8
                ld t0, 0(sp)          # first operand
                addi sp, sp, 8
                add t0, t0, t1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 2123        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_swap2 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_swap1 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 3663        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                # Unconditional jump
                ld t0, 0(sp)          # destination
                addi sp, sp, 8
                j L_{t0:x}           # jump to destination
            
L_a19:

            li a0, 3         # gas cost
            jal check_gas
        

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 64        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                ld a0, 0(sp)          # offset
                addi sp, sp, 8
                jal mload_impl
                addi sp, sp, -8
                sd a0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_dup1 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_swap2 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld t1, 0(sp)          # second operand
                addi sp, sp, 8
                ld t0, 0(sp)          # first operand
                addi sp, sp, 8
                sub t0, t0, t1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_swap1 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_revert t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            
L_a22:

            li a0, 3         # gas cost
            jal check_gas
        

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 2141        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_dup2 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 2367        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                # Unconditional jump
                ld t0, 0(sp)          # destination
                addi sp, sp, 8
                j L_{t0:x}           # jump to destination
            
L_a2b:

            li a0, 3         # gas cost
            jal check_gas
        

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_pop t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                # Unconditional jump
                ld t0, 0(sp)          # destination
                addi sp, sp, 8
                j L_{t0:x}           # jump to destination
            
L_a2e:

            li a0, 3         # gas cost
            jal check_gas
        

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 2        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 1        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                ld a0, 0(sp)          # key
                addi sp, sp, 8
                jal sload_impl
                addi sp, sp, -8
                sd a0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld t1, 0(sp)          # second operand
                addi sp, sp, 8
                ld t0, 0(sp)          # first operand
                addi sp, sp, 8
                sub t0, t0, t1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 2213        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                # Conditional jump
                ld t1, 0(sp)          # condition
                addi sp, sp, 8
                ld t0, 0(sp)          # destination
                addi sp, sp, 8
                beqz t1, skip_a38   # if condition is 0, skip jump
                j L_a38           # jump to destination
            skip_a38:
            

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 64        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                ld a0, 0(sp)          # offset
                addi sp, sp, 8
                jal mload_impl
                addi sp, sp, -8
                sd a0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                dup0 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_addmod t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        
    # Unknown opcode at a3e: UNKNOWN_0xc3

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 257110087081438444086713934774586016403552479005246853648220160        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                nop t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                nop t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                nop t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_dup2 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # value
                addi sp, sp, 8
                ld a0, 0(sp)          # offset
                addi sp, sp, 8
                jal mstore_impl
            

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 4        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                ld t1, 0(sp)          # second operand
                addi sp, sp, 8
                ld t0, 0(sp)          # first operand
                addi sp, sp, 8
                add t0, t0, t1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 2204        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_swap1 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 5532        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                # Unconditional jump
                ld t0, 0(sp)          # destination
                addi sp, sp, 8
                j L_{t0:x}           # jump to destination
            
L_a6a:

            li a0, 3         # gas cost
            jal check_gas
        

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 64        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                ld a0, 0(sp)          # offset
                addi sp, sp, 8
                jal mload_impl
                addi sp, sp, -8
                sd a0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_dup1 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_swap2 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld t1, 0(sp)          # second operand
                addi sp, sp, 8
                ld t0, 0(sp)          # first operand
                addi sp, sp, 8
                sub t0, t0, t1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_swap1 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_revert t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            
L_a73:

            li a0, 3         # gas cost
            jal check_gas
        

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 2        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 1        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_dup2 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_swap1 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # value
                addi sp, sp, 8
                ld a0, 0(sp)          # key
                addi sp, sp, 8
                jal sstore_impl
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_pop t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                # Unconditional jump
                ld t0, 0(sp)          # destination
                addi sp, sp, 8
                j L_{t0:x}           # jump to destination
            
L_a7d:

            li a0, 3         # gas cost
            jal check_gas
        

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 1        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_dup1 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_dup2 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_swap1 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # value
                addi sp, sp, 8
                ld a0, 0(sp)          # key
                addi sp, sp, 8
                jal sstore_impl
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_pop t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                # Unconditional jump
                ld t0, 0(sp)          # destination
                addi sp, sp, 8
                j L_{t0:x}           # jump to destination
            
L_a86:

            li a0, 3         # gas cost
            jal check_gas
        

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 2240        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 2560        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                # Unconditional jump
                ld t0, 0(sp)          # destination
                addi sp, sp, 8
                j L_{t0:x}           # jump to destination
            
L_a8e:

            li a0, 3         # gas cost
            jal check_gas
        

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 1461501637330902918203684832716283019655932542975        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                ld t1, 0(sp)          # second operand
                addi sp, sp, 8
                ld t0, 0(sp)          # first operand
                addi sp, sp, 8
                and t0, t0, t1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 2270        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 1967        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                # Unconditional jump
                ld t0, 0(sp)          # destination
                addi sp, sp, 8
                j L_{t0:x}           # jump to destination
            
L_aac:

            li a0, 3         # gas cost
            jal check_gas
        

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 1461501637330902918203684832716283019655932542975        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                ld t1, 0(sp)          # second operand
                addi sp, sp, 8
                ld t0, 0(sp)          # first operand
                addi sp, sp, 8
                and t0, t0, t1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld t1, 0(sp)          # second operand
                addi sp, sp, 8
                ld t0, 0(sp)          # first operand
                addi sp, sp, 8
                sub t0, zero, t0; seqz t0, t0 t0, t0, t1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 2365        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                # Conditional jump
                ld t1, 0(sp)          # condition
                addi sp, sp, 8
                ld t0, 0(sp)          # destination
                addi sp, sp, 8
                beqz t1, skip_ac7   # if condition is 0, skip jump
                j L_ac7           # jump to destination
            skip_ac7:
            

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 2305        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 2560        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                # Unconditional jump
                ld t0, 0(sp)          # destination
                addi sp, sp, 8
                j L_{t0:x}           # jump to destination
            
L_acf:

            li a0, 3         # gas cost
            jal check_gas
        

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 64        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                ld a0, 0(sp)          # offset
                addi sp, sp, 8
                jal mload_impl
                addi sp, sp, -8
                sd a0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                dup0 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld t1, 0(sp)          # second operand
                addi sp, sp, 8
                ld t0, 0(sp)          # first operand
                addi sp, sp, 8
                sgt t0, t0, t1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_dup13 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        
    # Unknown opcode at ad6: UNKNOWN_0xda

            li a0, 3         # gas cost
            jal check_gas
        
    # Unknown opcode at ad7: UNKNOWN_0xa7

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                nop t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                nop t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                nop t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                nop t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                nop t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                nop t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                nop t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                nop t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                nop t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                nop t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                nop t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                nop t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                nop t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                nop t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                nop t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                nop t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                nop t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                nop t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                nop t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                nop t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                nop t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                nop t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                nop t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                nop t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                nop t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                nop t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                nop t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                nop t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_dup2 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # value
                addi sp, sp, 8
                ld a0, 0(sp)          # offset
                addi sp, sp, 8
                jal mstore_impl
            

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 4        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                ld t1, 0(sp)          # second operand
                addi sp, sp, 8
                ld t0, 0(sp)          # first operand
                addi sp, sp, 8
                add t0, t0, t1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 2356        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_swap2 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_swap1 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 3663        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                # Unconditional jump
                ld t0, 0(sp)          # destination
                addi sp, sp, 8
                j L_{t0:x}           # jump to destination
            
L_b02:

            li a0, 3         # gas cost
            jal check_gas
        

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 64        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                ld a0, 0(sp)          # offset
                addi sp, sp, 8
                jal mload_impl
                addi sp, sp, -8
                sd a0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_dup1 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_swap2 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld t1, 0(sp)          # second operand
                addi sp, sp, 8
                ld t0, 0(sp)          # first operand
                addi sp, sp, 8
                sub t0, t0, t1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_swap1 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_revert t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            
L_b0b:

            li a0, 3         # gas cost
            jal check_gas
        

            li a0, 3         # gas cost
            jal check_gas
        

                # Unconditional jump
                ld t0, 0(sp)          # destination
                addi sp, sp, 8
                j L_{t0:x}           # jump to destination
            
L_b0d:

            li a0, 3         # gas cost
            jal check_gas
        

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, None        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_dup1 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, None        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_swap1 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a0, 0(sp)          # key
                addi sp, sp, 8
                jal sload_impl
                addi sp, sp, -8
                sd a0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_swap1 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 256        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_exp t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_swap1 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld t1, 0(sp)          # second operand
                addi sp, sp, 8
                ld t0, 0(sp)          # first operand
                addi sp, sp, 8
                div t0, t0, t1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 1461501637330902918203684832716283019655932542975        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                ld t1, 0(sp)          # second operand
                addi sp, sp, 8
                ld t0, 0(sp)          # first operand
                addi sp, sp, 8
                and t0, t0, t1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_swap1 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_pop t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_dup2 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, None        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_dup1 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 256        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_exp t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_dup2 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a0, 0(sp)          # key
                addi sp, sp, 8
                jal sload_impl
                addi sp, sp, -8
                sd a0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_dup2 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 1461501637330902918203684832716283019655932542975        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                ld t1, 0(sp)          # second operand
                addi sp, sp, 8
                ld t0, 0(sp)          # first operand
                addi sp, sp, 8
                mul t0, t0, t1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_not t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld t1, 0(sp)          # second operand
                addi sp, sp, 8
                ld t0, 0(sp)          # first operand
                addi sp, sp, 8
                and t0, t0, t1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_swap1 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_dup4 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 1461501637330902918203684832716283019655932542975        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                ld t1, 0(sp)          # second operand
                addi sp, sp, 8
                ld t0, 0(sp)          # first operand
                addi sp, sp, 8
                and t0, t0, t1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld t1, 0(sp)          # second operand
                addi sp, sp, 8
                ld t0, 0(sp)          # first operand
                addi sp, sp, 8
                mul t0, t0, t1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld t1, 0(sp)          # second operand
                addi sp, sp, 8
                ld t0, 0(sp)          # first operand
                addi sp, sp, 8
                or t0, t0, t1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_swap1 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # value
                addi sp, sp, 8
                ld a0, 0(sp)          # key
                addi sp, sp, 8
                jal sstore_impl
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_pop t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_dup2 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 1461501637330902918203684832716283019655932542975        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                ld t1, 0(sp)          # second operand
                addi sp, sp, 8
                ld t0, 0(sp)          # first operand
                addi sp, sp, 8
                and t0, t0, t1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_dup2 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 1461501637330902918203684832716283019655932542975        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                ld t1, 0(sp)          # second operand
                addi sp, sp, 8
                ld t0, 0(sp)          # first operand
                addi sp, sp, 8
                and t0, t0, t1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                dup0 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_dup12 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        
    # Unknown opcode at ba1: UNKNOWN_0xe0

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                rem t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_swap13 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_mstore8 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld t1, 0(sp)          # second operand
                addi sp, sp, 8
                ld t0, 0(sp)          # first operand
                addi sp, sp, 8
                and t0, t0, t1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                msize t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld t1, 0(sp)          # second operand
                addi sp, sp, 8
                ld t0, 0(sp)          # first operand
                addi sp, sp, 8
                sub t0, zero, t0; seqz t0, t0 t0, t0, t1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                sgt t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_difficulty t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        
    # Unknown opcode at baa: UNKNOWN_0xcd

            li a0, 3         # gas cost
            jal check_gas
        
    # Unknown opcode at bab: UNKNOWN_0x1f

            li a0, 3         # gas cost
            jal check_gas
        
    # Unknown opcode at bac: UNKNOWN_0xd0

            li a0, 3         # gas cost
            jal check_gas
        

            # LOG4 operation
            mv a2, 4       # number of topics
            ld a1, 0(sp)         # size
            addi sp, sp, 8
            ld a0, 0(sp)         # offset
            addi sp, sp, 8
            jal log_impl         # call log implementation
        

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                callcode t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_dup5 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_not t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        
    # Unknown opcode at bb1: UNKNOWN_0x49

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                dup0 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_swap8 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        
    # Unknown opcode at bb4: UNKNOWN_0x22

            li a0, 3         # gas cost
            jal check_gas
        

            # LOG3 operation
            mv a2, 3       # number of topics
            ld a1, 0(sp)         # size
            addi sp, sp, 8
            ld a0, 0(sp)         # offset
            addi sp, sp, 8
            jal log_impl         # call log implementation
        

            li a0, 3         # gas cost
            jal check_gas
        
    # Unknown opcode at bb6: UNKNOWN_0xda

            li a0, 3         # gas cost
            jal check_gas
        
    # Unknown opcode at bb7: UNKNOWN_0xaf

            li a0, 3         # gas cost
            jal check_gas
        
    # Unknown opcode at bb8: UNKNOWN_0xe3

            li a0, 3         # gas cost
            jal check_gas
        
    # Unknown opcode at bb9: UNKNOWN_0xb4

            li a0, 3         # gas cost
            jal check_gas
        

                ld t1, 0(sp)          # second operand
                addi sp, sp, 8
                ld t0, 0(sp)          # first operand
                addi sp, sp, 8
                xor t0, t0, t1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 142748407581371718536610542681624453968        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_pop t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                # Unconditional jump
                ld t0, 0(sp)          # destination
                addi sp, sp, 8
                j L_{t0:x}           # jump to destination
            
L_bce:

            li a0, 3         # gas cost
            jal check_gas
        

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, None        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_caller t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_swap1 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_pop t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_swap1 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                # Unconditional jump
                ld t0, 0(sp)          # destination
                addi sp, sp, 8
                j L_{t0:x}           # jump to destination
            
L_bd5:

            li a0, 3         # gas cost
            jal check_gas
        

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, None        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 64        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                ld a0, 0(sp)          # offset
                addi sp, sp, 8
                jal mload_impl
                addi sp, sp, -8
                sd a0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_swap1 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_pop t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_swap1 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                # Unconditional jump
                ld t0, 0(sp)          # destination
                addi sp, sp, 8
                j L_{t0:x}           # jump to destination
            
L_bde:

            li a0, 3         # gas cost
            jal check_gas
        

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, None        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_dup1 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_revert t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            
L_be2:

            li a0, 3         # gas cost
            jal check_gas
        

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, None        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_dup1 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_revert t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            
L_be6:

            li a0, 3         # gas cost
            jal check_gas
        

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, None        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_dup1 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_revert t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            
L_bea:

            li a0, 3         # gas cost
            jal check_gas
        

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, None        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_dup1 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_revert t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            
L_bee:

            li a0, 3         # gas cost
            jal check_gas
        

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, None        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 31        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_not t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 31        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_dup4 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld t1, 0(sp)          # second operand
                addi sp, sp, 8
                ld t0, 0(sp)          # first operand
                addi sp, sp, 8
                add t0, t0, t1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld t1, 0(sp)          # second operand
                addi sp, sp, 8
                ld t0, 0(sp)          # first operand
                addi sp, sp, 8
                and t0, t0, t1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_swap1 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_pop t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_swap2 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_swap1 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_pop t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                # Unconditional jump
                ld t0, 0(sp)          # destination
                addi sp, sp, 8
                j L_{t0:x}           # jump to destination
            
L_bfe:

            li a0, 3         # gas cost
            jal check_gas
        

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                dup0 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        
    # Unknown opcode at c00: UNKNOWN_0x4e

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                basefee t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 11900288958546962096864737128254758852035145780262049571737140461568        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                nop t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, None        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # value
                addi sp, sp, 8
                ld a0, 0(sp)          # offset
                addi sp, sp, 8
                jal mstore_impl
            

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 65        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 4        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # value
                addi sp, sp, 8
                ld a0, 0(sp)          # offset
                addi sp, sp, 8
                jal mstore_impl
            

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 36        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, None        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_revert t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            
L_c2b:

            li a0, 3         # gas cost
            jal check_gas
        

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 2662        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_dup3 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 2592        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                # Unconditional jump
                ld t0, 0(sp)          # destination
                addi sp, sp, 8
                j L_{t0:x}           # jump to destination
            
L_c34:

            li a0, 3         # gas cost
            jal check_gas
        

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_dup2 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld t1, 0(sp)          # second operand
                addi sp, sp, 8
                ld t0, 0(sp)          # first operand
                addi sp, sp, 8
                add t0, t0, t1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_dup2 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_dup2 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld t1, 0(sp)          # second operand
                addi sp, sp, 8
                ld t0, 0(sp)          # first operand
                addi sp, sp, 8
                slt t0, t0, t1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 18446744073709551615        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_dup3 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld t1, 0(sp)          # second operand
                addi sp, sp, 8
                ld t0, 0(sp)          # first operand
                addi sp, sp, 8
                sgt t0, t0, t1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld t1, 0(sp)          # second operand
                addi sp, sp, 8
                ld t0, 0(sp)          # first operand
                addi sp, sp, 8
                or t0, t0, t1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_iszero t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 2693        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                # Conditional jump
                ld t1, 0(sp)          # condition
                addi sp, sp, 8
                ld t0, 0(sp)          # destination
                addi sp, sp, 8
                beqz t1, skip_c4a   # if condition is 0, skip jump
                j L_c4a           # jump to destination
            skip_c4a:
            

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 2692        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 2608        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                # Unconditional jump
                ld t0, 0(sp)          # destination
                addi sp, sp, 8
                j L_{t0:x}           # jump to destination
            
L_c52:

            li a0, 3         # gas cost
            jal check_gas
        
L_c53:

            li a0, 3         # gas cost
            jal check_gas
        

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_dup1 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 64        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # value
                addi sp, sp, 8
                ld a0, 0(sp)          # offset
                addi sp, sp, 8
                jal mstore_impl
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_pop t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_pop t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_pop t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                # Unconditional jump
                ld t0, 0(sp)          # destination
                addi sp, sp, 8
                j L_{t0:x}           # jump to destination
            
L_c5c:

            li a0, 3         # gas cost
            jal check_gas
        

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, None        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 2711        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 2567        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                # Unconditional jump
                ld t0, 0(sp)          # destination
                addi sp, sp, 8
                j L_{t0:x}           # jump to destination
            
L_c65:

            li a0, 3         # gas cost
            jal check_gas
        

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_swap1 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_pop t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 2723        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_dup3 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_dup3 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 2653        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                # Unconditional jump
                ld t0, 0(sp)          # destination
                addi sp, sp, 8
                j L_{t0:x}           # jump to destination
            
L_c71:

            li a0, 3         # gas cost
            jal check_gas
        

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_swap2 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_swap1 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_pop t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                # Unconditional jump
                ld t0, 0(sp)          # destination
                addi sp, sp, 8
                j L_{t0:x}           # jump to destination
            
L_c76:

            li a0, 3         # gas cost
            jal check_gas
        

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, None        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 18446744073709551615        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_dup3 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld t1, 0(sp)          # second operand
                addi sp, sp, 8
                ld t0, 0(sp)          # first operand
                addi sp, sp, 8
                sgt t0, t0, t1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_iszero t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 2754        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                # Conditional jump
                ld t1, 0(sp)          # condition
                addi sp, sp, 8
                ld t0, 0(sp)          # destination
                addi sp, sp, 8
                beqz t1, skip_c87   # if condition is 0, skip jump
                j L_c87           # jump to destination
            skip_c87:
            

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 2753        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 2608        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                # Unconditional jump
                ld t0, 0(sp)          # destination
                addi sp, sp, 8
                j L_{t0:x}           # jump to destination
            
L_c8f:

            li a0, 3         # gas cost
            jal check_gas
        
L_c90:

            li a0, 3         # gas cost
            jal check_gas
        

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 2763        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_dup3 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 2592        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                # Unconditional jump
                ld t0, 0(sp)          # destination
                addi sp, sp, 8
                j L_{t0:x}           # jump to destination
            
L_c99:

            li a0, 3         # gas cost
            jal check_gas
        

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_swap1 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_pop t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 32        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_dup2 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld t1, 0(sp)          # second operand
                addi sp, sp, 8
                ld t0, 0(sp)          # first operand
                addi sp, sp, 8
                add t0, t0, t1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_swap1 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_pop t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_swap2 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_swap1 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_pop t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                # Unconditional jump
                ld t0, 0(sp)          # destination
                addi sp, sp, 8
                j L_{t0:x}           # jump to destination
            
L_ca6:

            li a0, 3         # gas cost
            jal check_gas
        

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_dup3 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_dup2 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_dup4 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                # Unsupported opcode: CALLDATACOPY t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, None        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_dup4 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_dup4 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld t1, 0(sp)          # second operand
                addi sp, sp, 8
                ld t0, 0(sp)          # first operand
                addi sp, sp, 8
                add t0, t0, t1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # value
                addi sp, sp, 8
                ld a0, 0(sp)          # offset
                addi sp, sp, 8
                jal mstore_impl
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_pop t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_pop t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_pop t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                # Unconditional jump
                ld t0, 0(sp)          # destination
                addi sp, sp, 8
                j L_{t0:x}           # jump to destination
            
L_cb4:

            li a0, 3         # gas cost
            jal check_gas
        

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, None        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 2808        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 2803        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_dup5 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 2728        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                # Unconditional jump
                ld t0, 0(sp)          # destination
                addi sp, sp, 8
                j L_{t0:x}           # jump to destination
            
L_cc1:

            li a0, 3         # gas cost
            jal check_gas
        

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 2702        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                # Unconditional jump
                ld t0, 0(sp)          # destination
                addi sp, sp, 8
                j L_{t0:x}           # jump to destination
            
L_cc6:

            li a0, 3         # gas cost
            jal check_gas
        

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_swap1 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_pop t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_dup3 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_dup2 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # value
                addi sp, sp, 8
                ld a0, 0(sp)          # offset
                addi sp, sp, 8
                jal mstore_impl
            

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 32        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_dup2 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld t1, 0(sp)          # second operand
                addi sp, sp, 8
                ld t0, 0(sp)          # first operand
                addi sp, sp, 8
                add t0, t0, t1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_dup5 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_dup5 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_dup5 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld t1, 0(sp)          # second operand
                addi sp, sp, 8
                ld t0, 0(sp)          # first operand
                addi sp, sp, 8
                add t0, t0, t1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld t1, 0(sp)          # second operand
                addi sp, sp, 8
                ld t0, 0(sp)          # first operand
                addi sp, sp, 8
                sgt t0, t0, t1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_iszero t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 2836        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                # Conditional jump
                ld t1, 0(sp)          # condition
                addi sp, sp, 8
                ld t0, 0(sp)          # destination
                addi sp, sp, 8
                beqz t1, skip_cd9   # if condition is 0, skip jump
                j L_cd9           # jump to destination
            skip_cd9:
            

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 2835        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 2588        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                # Unconditional jump
                ld t0, 0(sp)          # destination
                addi sp, sp, 8
                j L_{t0:x}           # jump to destination
            
L_ce1:

            li a0, 3         # gas cost
            jal check_gas
        
L_ce2:

            li a0, 3         # gas cost
            jal check_gas
        

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 2847        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_dup5 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_dup3 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_dup6 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 2776        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                # Unconditional jump
                ld t0, 0(sp)          # destination
                addi sp, sp, 8
                j L_{t0:x}           # jump to destination
            
L_ced:

            li a0, 3         # gas cost
            jal check_gas
        

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_pop t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_swap4 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_swap3 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_pop t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_pop t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_pop t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                # Unconditional jump
                ld t0, 0(sp)          # destination
                addi sp, sp, 8
                j L_{t0:x}           # jump to destination
            
L_cf5:

            li a0, 3         # gas cost
            jal check_gas
        

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, None        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_dup3 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 31        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_dup4 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld t1, 0(sp)          # second operand
                addi sp, sp, 8
                ld t0, 0(sp)          # first operand
                addi sp, sp, 8
                add t0, t0, t1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                slt t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 2875        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                # Conditional jump
                ld t1, 0(sp)          # condition
                addi sp, sp, 8
                ld t0, 0(sp)          # destination
                addi sp, sp, 8
                beqz t1, skip_d00   # if condition is 0, skip jump
                j L_d00           # jump to destination
            skip_d00:
            

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 2874        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 2584        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                # Unconditional jump
                ld t0, 0(sp)          # destination
                addi sp, sp, 8
                j L_{t0:x}           # jump to destination
            
L_d08:

            li a0, 3         # gas cost
            jal check_gas
        
L_d09:

            li a0, 3         # gas cost
            jal check_gas
        

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_dup2 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_calldataload t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 2891        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_dup5 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_dup3 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 32        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_dup7 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld t1, 0(sp)          # second operand
                addi sp, sp, 8
                ld t0, 0(sp)          # first operand
                addi sp, sp, 8
                add t0, t0, t1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 2790        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                # Unconditional jump
                ld t0, 0(sp)          # destination
                addi sp, sp, 8
                j L_{t0:x}           # jump to destination
            
L_d19:

            li a0, 3         # gas cost
            jal check_gas
        

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_swap2 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_pop t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_pop t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_swap3 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_swap2 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_pop t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_pop t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                # Unconditional jump
                ld t0, 0(sp)          # destination
                addi sp, sp, 8
                j L_{t0:x}           # jump to destination
            
L_d22:

            li a0, 3         # gas cost
            jal check_gas
        

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, None        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_dup1 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 64        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_dup4 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_dup6 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld t1, 0(sp)          # second operand
                addi sp, sp, 8
                ld t0, 0(sp)          # first operand
                addi sp, sp, 8
                sub t0, t0, t1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                slt t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_iszero t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 2922        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                # Conditional jump
                ld t1, 0(sp)          # condition
                addi sp, sp, 8
                ld t0, 0(sp)          # destination
                addi sp, sp, 8
                beqz t1, skip_d2f   # if condition is 0, skip jump
                j L_d2f           # jump to destination
            skip_d2f:
            

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 2921        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 2576        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                # Unconditional jump
                ld t0, 0(sp)          # destination
                addi sp, sp, 8
                j L_{t0:x}           # jump to destination
            
L_d37:

            li a0, 3         # gas cost
            jal check_gas
        
L_d38:

            li a0, 3         # gas cost
            jal check_gas
        

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, None        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_dup4 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld t1, 0(sp)          # second operand
                addi sp, sp, 8
                ld t0, 0(sp)          # first operand
                addi sp, sp, 8
                add t0, t0, t1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_calldataload t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 18446744073709551615        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_dup2 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld t1, 0(sp)          # second operand
                addi sp, sp, 8
                ld t0, 0(sp)          # first operand
                addi sp, sp, 8
                sgt t0, t0, t1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_iszero t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 2951        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                # Conditional jump
                ld t1, 0(sp)          # condition
                addi sp, sp, 8
                ld t0, 0(sp)          # destination
                addi sp, sp, 8
                beqz t1, skip_d4c   # if condition is 0, skip jump
                j L_d4c           # jump to destination
            skip_d4c:
            

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 2950        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 2580        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                # Unconditional jump
                ld t0, 0(sp)          # destination
                addi sp, sp, 8
                j L_{t0:x}           # jump to destination
            
L_d54:

            li a0, 3         # gas cost
            jal check_gas
        
L_d55:

            li a0, 3         # gas cost
            jal check_gas
        

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 2963        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_dup6 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_dup3 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_dup7 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld t1, 0(sp)          # second operand
                addi sp, sp, 8
                ld t0, 0(sp)          # first operand
                addi sp, sp, 8
                add t0, t0, t1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 2855        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                # Unconditional jump
                ld t0, 0(sp)          # destination
                addi sp, sp, 8
                j L_{t0:x}           # jump to destination
            
L_d61:

            li a0, 3         # gas cost
            jal check_gas
        

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_swap3 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_pop t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_pop t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 32        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_dup4 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld t1, 0(sp)          # second operand
                addi sp, sp, 8
                ld t0, 0(sp)          # first operand
                addi sp, sp, 8
                add t0, t0, t1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_calldataload t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 18446744073709551615        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_dup2 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld t1, 0(sp)          # second operand
                addi sp, sp, 8
                ld t0, 0(sp)          # first operand
                addi sp, sp, 8
                sgt t0, t0, t1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_iszero t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 2996        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                # Conditional jump
                ld t1, 0(sp)          # condition
                addi sp, sp, 8
                ld t0, 0(sp)          # destination
                addi sp, sp, 8
                beqz t1, skip_d79   # if condition is 0, skip jump
                j L_d79           # jump to destination
            skip_d79:
            

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 2995        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 2580        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                # Unconditional jump
                ld t0, 0(sp)          # destination
                addi sp, sp, 8
                j L_{t0:x}           # jump to destination
            
L_d81:

            li a0, 3         # gas cost
            jal check_gas
        
L_d82:

            li a0, 3         # gas cost
            jal check_gas
        

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 3008        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_dup6 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_dup3 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_dup7 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld t1, 0(sp)          # second operand
                addi sp, sp, 8
                ld t0, 0(sp)          # first operand
                addi sp, sp, 8
                add t0, t0, t1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 2855        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                # Unconditional jump
                ld t0, 0(sp)          # destination
                addi sp, sp, 8
                j L_{t0:x}           # jump to destination
            
L_d8e:

            li a0, 3         # gas cost
            jal check_gas
        

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_swap2 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_pop t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_pop t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_swap3 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_pop t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_swap3 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_swap1 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_pop t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                # Unconditional jump
                ld t0, 0(sp)          # destination
                addi sp, sp, 8
                j L_{t0:x}           # jump to destination
            
L_d98:

            li a0, 3         # gas cost
            jal check_gas
        

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, None        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_dup2 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_swap1 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_pop t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_swap2 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_swap1 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_pop t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                # Unconditional jump
                ld t0, 0(sp)          # destination
                addi sp, sp, 8
                j L_{t0:x}           # jump to destination
            
L_da1:

            li a0, 3         # gas cost
            jal check_gas
        

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 3036        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_dup2 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 3018        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                # Unconditional jump
                ld t0, 0(sp)          # destination
                addi sp, sp, 8
                j L_{t0:x}           # jump to destination
            
L_daa:

            li a0, 3         # gas cost
            jal check_gas
        

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_dup2 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld t1, 0(sp)          # second operand
                addi sp, sp, 8
                ld t0, 0(sp)          # first operand
                addi sp, sp, 8
                sub t0, zero, t0; seqz t0, t0 t0, t0, t1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 3046        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                # Conditional jump
                ld t1, 0(sp)          # condition
                addi sp, sp, 8
                ld t0, 0(sp)          # destination
                addi sp, sp, 8
                beqz t1, skip_db0   # if condition is 0, skip jump
                j L_db0           # jump to destination
            skip_db0:
            

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, None        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_dup1 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_revert t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            
L_db4:

            li a0, 3         # gas cost
            jal check_gas
        

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_pop t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                # Unconditional jump
                ld t0, 0(sp)          # destination
                addi sp, sp, 8
                j L_{t0:x}           # jump to destination
            
L_db7:

            li a0, 3         # gas cost
            jal check_gas
        

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, None        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_dup2 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_calldataload t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_swap1 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_pop t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 3063        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_dup2 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 3027        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                # Unconditional jump
                ld t0, 0(sp)          # destination
                addi sp, sp, 8
                j L_{t0:x}           # jump to destination
            
L_dc5:

            li a0, 3         # gas cost
            jal check_gas
        

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_swap3 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_swap2 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_pop t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_pop t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                # Unconditional jump
                ld t0, 0(sp)          # destination
                addi sp, sp, 8
                j L_{t0:x}           # jump to destination
            
L_dcb:

            li a0, 3         # gas cost
            jal check_gas
        

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, None        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 32        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_dup3 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_dup5 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld t1, 0(sp)          # second operand
                addi sp, sp, 8
                ld t0, 0(sp)          # first operand
                addi sp, sp, 8
                sub t0, t0, t1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                slt t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_iszero t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 3090        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                # Conditional jump
                ld t1, 0(sp)          # condition
                addi sp, sp, 8
                ld t0, 0(sp)          # destination
                addi sp, sp, 8
                beqz t1, skip_dd7   # if condition is 0, skip jump
                j L_dd7           # jump to destination
            skip_dd7:
            

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 3089        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 2576        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                # Unconditional jump
                ld t0, 0(sp)          # destination
                addi sp, sp, 8
                j L_{t0:x}           # jump to destination
            
L_ddf:

            li a0, 3         # gas cost
            jal check_gas
        
L_de0:

            li a0, 3         # gas cost
            jal check_gas
        

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, None        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 3103        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_dup5 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_dup3 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_dup6 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld t1, 0(sp)          # second operand
                addi sp, sp, 8
                ld t0, 0(sp)          # first operand
                addi sp, sp, 8
                add t0, t0, t1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 3049        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                # Unconditional jump
                ld t0, 0(sp)          # destination
                addi sp, sp, 8
                j L_{t0:x}           # jump to destination
            
L_ded:

            li a0, 3         # gas cost
            jal check_gas
        

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_swap2 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_pop t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_pop t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_swap3 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_swap2 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_pop t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_pop t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                # Unconditional jump
                ld t0, 0(sp)          # destination
                addi sp, sp, 8
                j L_{t0:x}           # jump to destination
            
L_df6:

            li a0, 3         # gas cost
            jal check_gas
        

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, None        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_dup2 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a0, 0(sp)          # offset
                addi sp, sp, 8
                jal mload_impl
                addi sp, sp, -8
                sd a0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_swap1 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_pop t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_swap2 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_swap1 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_pop t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                # Unconditional jump
                ld t0, 0(sp)          # destination
                addi sp, sp, 8
                j L_{t0:x}           # jump to destination
            
L_e00:

            li a0, 3         # gas cost
            jal check_gas
        

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, None        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_dup3 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_dup3 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # value
                addi sp, sp, 8
                ld a0, 0(sp)          # offset
                addi sp, sp, 8
                jal mstore_impl
            

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 32        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_dup3 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld t1, 0(sp)          # second operand
                addi sp, sp, 8
                ld t0, 0(sp)          # first operand
                addi sp, sp, 8
                add t0, t0, t1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_swap1 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_pop t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_swap3 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_swap2 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_pop t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_pop t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                # Unconditional jump
                ld t0, 0(sp)          # destination
                addi sp, sp, 8
                j L_{t0:x}           # jump to destination
            
L_e10:

            li a0, 3         # gas cost
            jal check_gas
        

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, None        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_dup2 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_swap1 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_pop t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 32        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_dup3 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld t1, 0(sp)          # second operand
                addi sp, sp, 8
                ld t0, 0(sp)          # first operand
                addi sp, sp, 8
                add t0, t0, t1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_swap1 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_pop t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_swap2 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_swap1 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_pop t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                # Unconditional jump
                ld t0, 0(sp)          # destination
                addi sp, sp, 8
                j L_{t0:x}           # jump to destination
            
L_e1f:

            li a0, 3         # gas cost
            jal check_gas
        

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, None        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_dup2 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a0, 0(sp)          # offset
                addi sp, sp, 8
                jal mload_impl
                addi sp, sp, -8
                sd a0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_swap1 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_pop t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_swap2 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_swap1 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_pop t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                # Unconditional jump
                ld t0, 0(sp)          # destination
                addi sp, sp, 8
                j L_{t0:x}           # jump to destination
            
L_e29:

            li a0, 3         # gas cost
            jal check_gas
        

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, None        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_dup3 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_dup3 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # value
                addi sp, sp, 8
                ld a0, 0(sp)          # offset
                addi sp, sp, 8
                jal mstore_impl
            

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 32        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_dup3 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld t1, 0(sp)          # second operand
                addi sp, sp, 8
                ld t0, 0(sp)          # first operand
                addi sp, sp, 8
                add t0, t0, t1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_swap1 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_pop t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_swap3 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_swap2 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_pop t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_pop t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                # Unconditional jump
                ld t0, 0(sp)          # destination
                addi sp, sp, 8
                j L_{t0:x}           # jump to destination
            
L_e39:

            li a0, 3         # gas cost
            jal check_gas
        

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_dup3 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_dup2 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_dup4 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        
    # Unknown opcode at e3d: UNKNOWN_0x5e

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, None        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_dup4 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_dup4 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld t1, 0(sp)          # second operand
                addi sp, sp, 8
                ld t0, 0(sp)          # first operand
                addi sp, sp, 8
                add t0, t0, t1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # value
                addi sp, sp, 8
                ld a0, 0(sp)          # offset
                addi sp, sp, 8
                jal mstore_impl
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_pop t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_pop t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_pop t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                # Unconditional jump
                ld t0, 0(sp)          # destination
                addi sp, sp, 8
                j L_{t0:x}           # jump to destination
            
L_e47:

            li a0, 3         # gas cost
            jal check_gas
        

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, None        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 3203        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_dup3 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 3153        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                # Unconditional jump
                ld t0, 0(sp)          # destination
                addi sp, sp, 8
                j L_{t0:x}           # jump to destination
            
L_e51:

            li a0, 3         # gas cost
            jal check_gas
        

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 3213        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_dup2 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_dup6 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 3163        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                # Unconditional jump
                ld t0, 0(sp)          # destination
                addi sp, sp, 8
                j L_{t0:x}           # jump to destination
            
L_e5b:

            li a0, 3         # gas cost
            jal check_gas
        

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_swap4 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_pop t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 3229        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_dup2 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_dup6 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 32        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_dup7 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld t1, 0(sp)          # second operand
                addi sp, sp, 8
                ld t0, 0(sp)          # first operand
                addi sp, sp, 8
                add t0, t0, t1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 3179        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                # Unconditional jump
                ld t0, 0(sp)          # destination
                addi sp, sp, 8
                j L_{t0:x}           # jump to destination
            
L_e6b:

            li a0, 3         # gas cost
            jal check_gas
        

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 3238        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_dup2 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 2592        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                # Unconditional jump
                ld t0, 0(sp)          # destination
                addi sp, sp, 8
                j L_{t0:x}           # jump to destination
            
L_e74:

            li a0, 3         # gas cost
            jal check_gas
        

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_dup5 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld t1, 0(sp)          # second operand
                addi sp, sp, 8
                ld t0, 0(sp)          # first operand
                addi sp, sp, 8
                add t0, t0, t1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_swap2 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_pop t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_pop t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_swap3 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_swap2 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_pop t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_pop t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                # Unconditional jump
                ld t0, 0(sp)          # destination
                addi sp, sp, 8
                j L_{t0:x}           # jump to destination
            
L_e7f:

            li a0, 3         # gas cost
            jal check_gas
        

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 3258        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_dup2 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 3018        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                # Unconditional jump
                ld t0, 0(sp)          # destination
                addi sp, sp, 8
                j L_{t0:x}           # jump to destination
            
L_e88:

            li a0, 3         # gas cost
            jal check_gas
        

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_dup3 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # value
                addi sp, sp, 8
                ld a0, 0(sp)          # offset
                addi sp, sp, 8
                jal mstore_impl
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_pop t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_pop t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                # Unconditional jump
                ld t0, 0(sp)          # destination
                addi sp, sp, 8
                j L_{t0:x}           # jump to destination
            
L_e8e:

            li a0, 3         # gas cost
            jal check_gas
        

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, None        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 1461501637330902918203684832716283019655932542975        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_dup3 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld t1, 0(sp)          # second operand
                addi sp, sp, 8
                ld t0, 0(sp)          # first operand
                addi sp, sp, 8
                and t0, t0, t1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_swap1 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_pop t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_swap2 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_swap1 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_pop t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                # Unconditional jump
                ld t0, 0(sp)          # destination
                addi sp, sp, 8
                j L_{t0:x}           # jump to destination
            
L_ead:

            li a0, 3         # gas cost
            jal check_gas
        

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, None        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 3305        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_dup3 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 3264        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                # Unconditional jump
                ld t0, 0(sp)          # destination
                addi sp, sp, 8
                j L_{t0:x}           # jump to destination
            
L_eb7:

            li a0, 3         # gas cost
            jal check_gas
        

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_swap1 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_pop t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_swap2 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_swap1 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_pop t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                # Unconditional jump
                ld t0, 0(sp)          # destination
                addi sp, sp, 8
                j L_{t0:x}           # jump to destination
            
L_ebe:

            li a0, 3         # gas cost
            jal check_gas
        

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 3321        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_dup2 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 3295        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                # Unconditional jump
                ld t0, 0(sp)          # destination
                addi sp, sp, 8
                j L_{t0:x}           # jump to destination
            
L_ec7:

            li a0, 3         # gas cost
            jal check_gas
        

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_dup3 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # value
                addi sp, sp, 8
                ld a0, 0(sp)          # offset
                addi sp, sp, 8
                jal mstore_impl
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_pop t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_pop t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                # Unconditional jump
                ld t0, 0(sp)          # destination
                addi sp, sp, 8
                j L_{t0:x}           # jump to destination
            
L_ecd:

            li a0, 3         # gas cost
            jal check_gas
        

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, None        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 128        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_dup4 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld t1, 0(sp)          # second operand
                addi sp, sp, 8
                ld t0, 0(sp)          # first operand
                addi sp, sp, 8
                add t0, t0, t1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, None        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_dup4 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld t1, 0(sp)          # second operand
                addi sp, sp, 8
                ld t0, 0(sp)          # first operand
                addi sp, sp, 8
                add t0, t0, t1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a0, 0(sp)          # offset
                addi sp, sp, 8
                jal mload_impl
                addi sp, sp, -8
                sd a0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_dup5 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_dup3 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld t1, 0(sp)          # second operand
                addi sp, sp, 8
                ld t0, 0(sp)          # first operand
                addi sp, sp, 8
                sub t0, t0, t1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, None        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_dup7 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld t1, 0(sp)          # second operand
                addi sp, sp, 8
                ld t0, 0(sp)          # first operand
                addi sp, sp, 8
                add t0, t0, t1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # value
                addi sp, sp, 8
                ld a0, 0(sp)          # offset
                addi sp, sp, 8
                jal mstore_impl
            

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 3353        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_dup3 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_dup3 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 3193        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                # Unconditional jump
                ld t0, 0(sp)          # destination
                addi sp, sp, 8
                j L_{t0:x}           # jump to destination
            
L_ee7:

            li a0, 3         # gas cost
            jal check_gas
        

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_swap2 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_pop t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_pop t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 32        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_dup4 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld t1, 0(sp)          # second operand
                addi sp, sp, 8
                ld t0, 0(sp)          # first operand
                addi sp, sp, 8
                add t0, t0, t1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a0, 0(sp)          # offset
                addi sp, sp, 8
                jal mload_impl
                addi sp, sp, -8
                sd a0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_dup5 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_dup3 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld t1, 0(sp)          # second operand
                addi sp, sp, 8
                ld t0, 0(sp)          # first operand
                addi sp, sp, 8
                sub t0, t0, t1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 32        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_dup7 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld t1, 0(sp)          # second operand
                addi sp, sp, 8
                ld t0, 0(sp)          # first operand
                addi sp, sp, 8
                add t0, t0, t1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # value
                addi sp, sp, 8
                ld a0, 0(sp)          # offset
                addi sp, sp, 8
                jal mstore_impl
            

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 3379        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_dup3 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_dup3 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 3193        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                # Unconditional jump
                ld t0, 0(sp)          # destination
                addi sp, sp, 8
                j L_{t0:x}           # jump to destination
            
L_f01:

            li a0, 3         # gas cost
            jal check_gas
        

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_swap2 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_pop t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_pop t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 64        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_dup4 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld t1, 0(sp)          # second operand
                addi sp, sp, 8
                ld t0, 0(sp)          # first operand
                addi sp, sp, 8
                add t0, t0, t1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a0, 0(sp)          # offset
                addi sp, sp, 8
                jal mload_impl
                addi sp, sp, -8
                sd a0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 3400        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 64        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_dup7 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld t1, 0(sp)          # second operand
                addi sp, sp, 8
                ld t0, 0(sp)          # first operand
                addi sp, sp, 8
                add t0, t0, t1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_dup3 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 3249        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                # Unconditional jump
                ld t0, 0(sp)          # destination
                addi sp, sp, 8
                j L_{t0:x}           # jump to destination
            
L_f16:

            li a0, 3         # gas cost
            jal check_gas
        

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_pop t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 96        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_dup4 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld t1, 0(sp)          # second operand
                addi sp, sp, 8
                ld t0, 0(sp)          # first operand
                addi sp, sp, 8
                add t0, t0, t1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a0, 0(sp)          # offset
                addi sp, sp, 8
                jal mload_impl
                addi sp, sp, -8
                sd a0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 3419        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 96        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_dup7 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld t1, 0(sp)          # second operand
                addi sp, sp, 8
                ld t0, 0(sp)          # first operand
                addi sp, sp, 8
                add t0, t0, t1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_dup3 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 3312        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                # Unconditional jump
                ld t0, 0(sp)          # destination
                addi sp, sp, 8
                j L_{t0:x}           # jump to destination
            
L_f29:

            li a0, 3         # gas cost
            jal check_gas
        

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_pop t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_dup1 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_swap2 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_pop t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_pop t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_swap3 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_swap2 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_pop t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_pop t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                # Unconditional jump
                ld t0, 0(sp)          # destination
                addi sp, sp, 8
                j L_{t0:x}           # jump to destination
            
L_f34:

            li a0, 3         # gas cost
            jal check_gas
        

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, None        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 3441        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_dup4 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_dup4 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 3327        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                # Unconditional jump
                ld t0, 0(sp)          # destination
                addi sp, sp, 8
                j L_{t0:x}           # jump to destination
            
L_f3f:

            li a0, 3         # gas cost
            jal check_gas
        

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_swap1 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_pop t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_swap3 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_swap2 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_pop t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_pop t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                # Unconditional jump
                ld t0, 0(sp)          # destination
                addi sp, sp, 8
                j L_{t0:x}           # jump to destination
            
L_f47:

            li a0, 3         # gas cost
            jal check_gas
        

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, None        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 32        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_dup3 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld t1, 0(sp)          # second operand
                addi sp, sp, 8
                ld t0, 0(sp)          # first operand
                addi sp, sp, 8
                add t0, t0, t1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_swap1 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_pop t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_swap2 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_swap1 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_pop t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                # Unconditional jump
                ld t0, 0(sp)          # destination
                addi sp, sp, 8
                j L_{t0:x}           # jump to destination
            
L_f53:

            li a0, 3         # gas cost
            jal check_gas
        

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, None        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 3471        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_dup3 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 3112        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                # Unconditional jump
                ld t0, 0(sp)          # destination
                addi sp, sp, 8
                j L_{t0:x}           # jump to destination
            
L_f5d:

            li a0, 3         # gas cost
            jal check_gas
        

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 3481        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_dup2 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_dup6 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 3122        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                # Unconditional jump
                ld t0, 0(sp)          # destination
                addi sp, sp, 8
                j L_{t0:x}           # jump to destination
            
L_f67:

            li a0, 3         # gas cost
            jal check_gas
        

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_swap4 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_pop t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_dup4 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 32        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_dup3 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld t1, 0(sp)          # second operand
                addi sp, sp, 8
                ld t0, 0(sp)          # first operand
                addi sp, sp, 8
                mul t0, t0, t1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_dup6 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld t1, 0(sp)          # second operand
                addi sp, sp, 8
                ld t0, 0(sp)          # first operand
                addi sp, sp, 8
                add t0, t0, t1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 3499        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_dup6 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 3138        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                # Unconditional jump
                ld t0, 0(sp)          # destination
                addi sp, sp, 8
                j L_{t0:x}           # jump to destination
            
L_f79:

            li a0, 3         # gas cost
            jal check_gas
        

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_dup1 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, None        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        
L_f7c:

            li a0, 3         # gas cost
            jal check_gas
        

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_dup6 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_dup2 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld t1, 0(sp)          # second operand
                addi sp, sp, 8
                ld t0, 0(sp)          # first operand
                addi sp, sp, 8
                slt t0, t0, t1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_iszero t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 3558        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                # Conditional jump
                ld t1, 0(sp)          # condition
                addi sp, sp, 8
                ld t0, 0(sp)          # destination
                addi sp, sp, 8
                beqz t1, skip_f84   # if condition is 0, skip jump
                j L_f84           # jump to destination
            skip_f84:
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_dup5 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_dup5 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld t1, 0(sp)          # second operand
                addi sp, sp, 8
                ld t0, 0(sp)          # first operand
                addi sp, sp, 8
                sub t0, t0, t1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_dup10 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # value
                addi sp, sp, 8
                ld a0, 0(sp)          # offset
                addi sp, sp, 8
                jal mstore_impl
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_dup2 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a0, 0(sp)          # offset
                addi sp, sp, 8
                jal mload_impl
                addi sp, sp, -8
                sd a0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 3527        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_dup6 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_dup3 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 3430        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                # Unconditional jump
                ld t0, 0(sp)          # destination
                addi sp, sp, 8
                j L_{t0:x}           # jump to destination
            
L_f95:

            li a0, 3         # gas cost
            jal check_gas
        

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_swap5 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_pop t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 3538        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_dup4 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 3449        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                # Unconditional jump
                ld t0, 0(sp)          # destination
                addi sp, sp, 8
                j L_{t0:x}           # jump to destination
            
L_fa0:

            li a0, 3         # gas cost
            jal check_gas
        

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_swap3 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_pop t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 32        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_dup11 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld t1, 0(sp)          # second operand
                addi sp, sp, 8
                ld t0, 0(sp)          # first operand
                addi sp, sp, 8
                add t0, t0, t1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_swap10 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_pop t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_pop t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 1        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_dup2 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld t1, 0(sp)          # second operand
                addi sp, sp, 8
                ld t0, 0(sp)          # first operand
                addi sp, sp, 8
                add t0, t0, t1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_swap1 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_pop t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 3502        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                # Unconditional jump
                ld t0, 0(sp)          # destination
                addi sp, sp, 8
                j L_{t0:x}           # jump to destination
            
L_fb4:

            li a0, 3         # gas cost
            jal check_gas
        

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_pop t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_dup3 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_swap8 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_pop t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_dup8 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_swap6 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_pop t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_pop t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_pop t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_pop t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_pop t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_pop t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_swap3 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_swap2 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_pop t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_pop t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                # Unconditional jump
                ld t0, 0(sp)          # destination
                addi sp, sp, 8
                j L_{t0:x}           # jump to destination
            
L_fc6:

            li a0, 3         # gas cost
            jal check_gas
        

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, None        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 32        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_dup3 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld t1, 0(sp)          # second operand
                addi sp, sp, 8
                ld t0, 0(sp)          # first operand
                addi sp, sp, 8
                add t0, t0, t1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_swap1 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_pop t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_dup2 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_dup2 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld t1, 0(sp)          # second operand
                addi sp, sp, 8
                ld t0, 0(sp)          # first operand
                addi sp, sp, 8
                sub t0, t0, t1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, None        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_dup4 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld t1, 0(sp)          # second operand
                addi sp, sp, 8
                ld t0, 0(sp)          # first operand
                addi sp, sp, 8
                add t0, t0, t1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # value
                addi sp, sp, 8
                ld a0, 0(sp)          # offset
                addi sp, sp, 8
                jal mstore_impl
            

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 3600        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_dup2 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_dup5 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 3461        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                # Unconditional jump
                ld t0, 0(sp)          # destination
                addi sp, sp, 8
                j L_{t0:x}           # jump to destination
            
L_fde:

            li a0, 3         # gas cost
            jal check_gas
        

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_swap1 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_pop t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_swap3 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_swap2 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_pop t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_pop t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                # Unconditional jump
                ld t0, 0(sp)          # destination
                addi sp, sp, 8
                j L_{t0:x}           # jump to destination
            
L_fe6:

            li a0, 3         # gas cost
            jal check_gas
        

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 3617        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_dup2 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 3018        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                # Unconditional jump
                ld t0, 0(sp)          # destination
                addi sp, sp, 8
                j L_{t0:x}           # jump to destination
            
L_fef:

            li a0, 3         # gas cost
            jal check_gas
        

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_dup3 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # value
                addi sp, sp, 8
                ld a0, 0(sp)          # offset
                addi sp, sp, 8
                jal mstore_impl
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_pop t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_pop t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                # Unconditional jump
                ld t0, 0(sp)          # destination
                addi sp, sp, 8
                j L_{t0:x}           # jump to destination
            
L_ff5:

            li a0, 3         # gas cost
            jal check_gas
        

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, None        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 32        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_dup3 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld t1, 0(sp)          # second operand
                addi sp, sp, 8
                ld t0, 0(sp)          # first operand
                addi sp, sp, 8
                add t0, t0, t1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_swap1 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_pop t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 3642        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, None        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_dup4 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld t1, 0(sp)          # second operand
                addi sp, sp, 8
                ld t0, 0(sp)          # first operand
                addi sp, sp, 8
                add t0, t0, t1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_dup5 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 3608        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                # Unconditional jump
                ld t0, 0(sp)          # destination
                addi sp, sp, 8
                j L_{t0:x}           # jump to destination
            
L_1008:

            li a0, 3         # gas cost
            jal check_gas
        

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_swap3 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_swap2 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_pop t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_pop t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                # Unconditional jump
                ld t0, 0(sp)          # destination
                addi sp, sp, 8
                j L_{t0:x}           # jump to destination
            
L_100e:

            li a0, 3         # gas cost
            jal check_gas
        

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 3657        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_dup2 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 3295        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                # Unconditional jump
                ld t0, 0(sp)          # destination
                addi sp, sp, 8
                j L_{t0:x}           # jump to destination
            
L_1017:

            li a0, 3         # gas cost
            jal check_gas
        

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_dup3 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # value
                addi sp, sp, 8
                ld a0, 0(sp)          # offset
                addi sp, sp, 8
                jal mstore_impl
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_pop t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_pop t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                # Unconditional jump
                ld t0, 0(sp)          # destination
                addi sp, sp, 8
                j L_{t0:x}           # jump to destination
            
L_101d:

            li a0, 3         # gas cost
            jal check_gas
        

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, None        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 32        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_dup3 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld t1, 0(sp)          # second operand
                addi sp, sp, 8
                ld t0, 0(sp)          # first operand
                addi sp, sp, 8
                add t0, t0, t1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_swap1 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_pop t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 3682        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, None        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_dup4 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld t1, 0(sp)          # second operand
                addi sp, sp, 8
                ld t0, 0(sp)          # first operand
                addi sp, sp, 8
                add t0, t0, t1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_dup5 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 3648        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                # Unconditional jump
                ld t0, 0(sp)          # destination
                addi sp, sp, 8
                j L_{t0:x}           # jump to destination
            
L_1030:

            li a0, 3         # gas cost
            jal check_gas
        

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_swap3 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_swap2 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_pop t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_pop t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                # Unconditional jump
                ld t0, 0(sp)          # destination
                addi sp, sp, 8
                j L_{t0:x}           # jump to destination
            
L_1036:

            li a0, 3         # gas cost
            jal check_gas
        

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 3697        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_dup2 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 3295        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                # Unconditional jump
                ld t0, 0(sp)          # destination
                addi sp, sp, 8
                j L_{t0:x}           # jump to destination
            
L_103f:

            li a0, 3         # gas cost
            jal check_gas
        

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_dup2 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld t1, 0(sp)          # second operand
                addi sp, sp, 8
                ld t0, 0(sp)          # first operand
                addi sp, sp, 8
                sub t0, zero, t0; seqz t0, t0 t0, t0, t1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 3707        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                # Conditional jump
                ld t1, 0(sp)          # condition
                addi sp, sp, 8
                ld t0, 0(sp)          # destination
                addi sp, sp, 8
                beqz t1, skip_1045   # if condition is 0, skip jump
                j L_1045           # jump to destination
            skip_1045:
            

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, None        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_dup1 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_revert t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            
L_1049:

            li a0, 3         # gas cost
            jal check_gas
        

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_pop t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                # Unconditional jump
                ld t0, 0(sp)          # destination
                addi sp, sp, 8
                j L_{t0:x}           # jump to destination
            
L_104c:

            li a0, 3         # gas cost
            jal check_gas
        

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, None        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_dup2 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_calldataload t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_swap1 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_pop t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 3724        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_dup2 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 3688        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                # Unconditional jump
                ld t0, 0(sp)          # destination
                addi sp, sp, 8
                j L_{t0:x}           # jump to destination
            
L_105a:

            li a0, 3         # gas cost
            jal check_gas
        

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_swap3 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_swap2 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_pop t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_pop t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                # Unconditional jump
                ld t0, 0(sp)          # destination
                addi sp, sp, 8
                j L_{t0:x}           # jump to destination
            
L_1060:

            li a0, 3         # gas cost
            jal check_gas
        

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, None        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 32        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_dup3 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_dup5 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld t1, 0(sp)          # second operand
                addi sp, sp, 8
                ld t0, 0(sp)          # first operand
                addi sp, sp, 8
                sub t0, t0, t1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                slt t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_iszero t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 3751        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                # Conditional jump
                ld t1, 0(sp)          # condition
                addi sp, sp, 8
                ld t0, 0(sp)          # destination
                addi sp, sp, 8
                beqz t1, skip_106c   # if condition is 0, skip jump
                j L_106c           # jump to destination
            skip_106c:
            

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 3750        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 2576        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                # Unconditional jump
                ld t0, 0(sp)          # destination
                addi sp, sp, 8
                j L_{t0:x}           # jump to destination
            
L_1074:

            li a0, 3         # gas cost
            jal check_gas
        
L_1075:

            li a0, 3         # gas cost
            jal check_gas
        

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, None        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 3764        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_dup5 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_dup3 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_dup6 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld t1, 0(sp)          # second operand
                addi sp, sp, 8
                ld t0, 0(sp)          # first operand
                addi sp, sp, 8
                add t0, t0, t1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 3710        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                # Unconditional jump
                ld t0, 0(sp)          # destination
                addi sp, sp, 8
                j L_{t0:x}           # jump to destination
            
L_1082:

            li a0, 3         # gas cost
            jal check_gas
        

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_swap2 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_pop t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_pop t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_swap3 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_swap2 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_pop t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_pop t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                # Unconditional jump
                ld t0, 0(sp)          # destination
                addi sp, sp, 8
                j L_{t0:x}           # jump to destination
            
L_108b:

            li a0, 3         # gas cost
            jal check_gas
        

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, None        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_dup3 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_dup3 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # value
                addi sp, sp, 8
                ld a0, 0(sp)          # offset
                addi sp, sp, 8
                jal mstore_impl
            

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 32        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_dup3 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld t1, 0(sp)          # second operand
                addi sp, sp, 8
                ld t0, 0(sp)          # first operand
                addi sp, sp, 8
                add t0, t0, t1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_swap1 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_pop t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_swap3 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_swap2 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_pop t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_pop t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                # Unconditional jump
                ld t0, 0(sp)          # destination
                addi sp, sp, 8
                j L_{t0:x}           # jump to destination
            
L_109b:

            li a0, 3         # gas cost
            jal check_gas
        

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                dup0 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_difficulty t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 146721093444575682734185049383982098803        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

            ld a1, 0(sp)          # size
            addi sp, sp, 8
            ld a0, 0(sp)          # offset
            addi sp, sp, 8
            jal ra, sha3_impl     # call SHA3 implementation
            addi sp, sp, -8
            sd a0, 0(sp)          # push result
        

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 8037774369802479640523691287903        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_dup3 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld t1, 0(sp)          # second operand
                addi sp, sp, 8
                ld t0, 0(sp)          # first operand
                addi sp, sp, 8
                add t0, t0, t1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # value
                addi sp, sp, 8
                ld a0, 0(sp)          # offset
                addi sp, sp, 8
                jal mstore_impl
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                dup0 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

            ld a1, 0(sp)          # size
            addi sp, sp, 8
            ld a0, 0(sp)          # offset
            addi sp, sp, 8
            jal ra, sha3_impl     # call SHA3 implementation
            addi sp, sp, -8
            sd a0, 0(sp)          # push result
        

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 2138400734513469962519024729944677        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 0        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                nop t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                nop t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                nop t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                nop t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                nop t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                nop t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                nop t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                nop t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                nop t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                nop t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 32        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_dup3 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld t1, 0(sp)          # second operand
                addi sp, sp, 8
                ld t0, 0(sp)          # first operand
                addi sp, sp, 8
                add t0, t0, t1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # value
                addi sp, sp, 8
                ld a0, 0(sp)          # offset
                addi sp, sp, 8
                jal mstore_impl
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_pop t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                # Unconditional jump
                ld t0, 0(sp)          # destination
                addi sp, sp, 8
                j L_{t0:x}           # jump to destination
            
L_10e9:

            li a0, 3         # gas cost
            jal check_gas
        

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, None        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 3879        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 49        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_dup4 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 3773        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                # Unconditional jump
                ld t0, 0(sp)          # destination
                addi sp, sp, 8
                j L_{t0:x}           # jump to destination
            
L_10f5:

            li a0, 3         # gas cost
            jal check_gas
        

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_swap2 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_pop t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 3890        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_dup3 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 3789        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                # Unconditional jump
                ld t0, 0(sp)          # destination
                addi sp, sp, 8
                j L_{t0:x}           # jump to destination
            
L_1100:

            li a0, 3         # gas cost
            jal check_gas
        

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 64        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_dup3 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld t1, 0(sp)          # second operand
                addi sp, sp, 8
                ld t0, 0(sp)          # first operand
                addi sp, sp, 8
                add t0, t0, t1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_swap1 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_pop t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_swap2 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_swap1 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_pop t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                # Unconditional jump
                ld t0, 0(sp)          # destination
                addi sp, sp, 8
                j L_{t0:x}           # jump to destination
            
L_110b:

            li a0, 3         # gas cost
            jal check_gas
        

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, None        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 32        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_dup3 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld t1, 0(sp)          # second operand
                addi sp, sp, 8
                ld t0, 0(sp)          # first operand
                addi sp, sp, 8
                add t0, t0, t1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_swap1 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_pop t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_dup2 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_dup2 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld t1, 0(sp)          # second operand
                addi sp, sp, 8
                ld t0, 0(sp)          # first operand
                addi sp, sp, 8
                sub t0, t0, t1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, None        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_dup4 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld t1, 0(sp)          # second operand
                addi sp, sp, 8
                ld t0, 0(sp)          # first operand
                addi sp, sp, 8
                add t0, t0, t1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # value
                addi sp, sp, 8
                ld a0, 0(sp)          # offset
                addi sp, sp, 8
                jal mstore_impl
            

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 3924        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_dup2 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 3867        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                # Unconditional jump
                ld t0, 0(sp)          # destination
                addi sp, sp, 8
                j L_{t0:x}           # jump to destination
            
L_1122:

            li a0, 3         # gas cost
            jal check_gas
        

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_swap1 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_pop t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_swap2 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_swap1 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_pop t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                # Unconditional jump
                ld t0, 0(sp)          # destination
                addi sp, sp, 8
                j L_{t0:x}           # jump to destination
            
L_1129:

            li a0, 3         # gas cost
            jal check_gas
        

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                dup0 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        
    # Unknown opcode at 112b: UNKNOWN_0x4e

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                basefee t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 11900288958546962096864737128254758852035145780262049571737140461568        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                nop t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, None        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # value
                addi sp, sp, 8
                ld a0, 0(sp)          # offset
                addi sp, sp, 8
                jal mstore_impl
            

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 34        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 4        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # value
                addi sp, sp, 8
                ld a0, 0(sp)          # offset
                addi sp, sp, 8
                jal mstore_impl
            

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 36        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, None        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_revert t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            
L_1156:

            li a0, 3         # gas cost
            jal check_gas
        

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, None        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 2        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_dup3 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld t1, 0(sp)          # second operand
                addi sp, sp, 8
                ld t0, 0(sp)          # first operand
                addi sp, sp, 8
                div t0, t0, t1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_swap1 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_pop t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 1        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_dup3 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld t1, 0(sp)          # second operand
                addi sp, sp, 8
                ld t0, 0(sp)          # first operand
                addi sp, sp, 8
                and t0, t0, t1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_dup1 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 3999        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                # Conditional jump
                ld t1, 0(sp)          # condition
                addi sp, sp, 8
                ld t0, 0(sp)          # destination
                addi sp, sp, 8
                beqz t1, skip_1166   # if condition is 0, skip jump
                j L_1166           # jump to destination
            skip_1166:
            

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 127        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_dup3 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld t1, 0(sp)          # second operand
                addi sp, sp, 8
                ld t0, 0(sp)          # first operand
                addi sp, sp, 8
                and t0, t0, t1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_swap2 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_pop t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            
L_116d:

            li a0, 3         # gas cost
            jal check_gas
        

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 32        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_dup3 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld t1, 0(sp)          # second operand
                addi sp, sp, 8
                ld t0, 0(sp)          # first operand
                addi sp, sp, 8
                slt t0, t0, t1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_dup2 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld t1, 0(sp)          # second operand
                addi sp, sp, 8
                ld t0, 0(sp)          # first operand
                addi sp, sp, 8
                sub t0, t0, t1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 4018        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                # Conditional jump
                ld t1, 0(sp)          # condition
                addi sp, sp, 8
                ld t0, 0(sp)          # destination
                addi sp, sp, 8
                beqz t1, skip_1177   # if condition is 0, skip jump
                j L_1177           # jump to destination
            skip_1177:
            

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 4017        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 3931        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                # Unconditional jump
                ld t0, 0(sp)          # destination
                addi sp, sp, 8
                j L_{t0:x}           # jump to destination
            
L_117f:

            li a0, 3         # gas cost
            jal check_gas
        
L_1180:

            li a0, 3         # gas cost
            jal check_gas
        

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_pop t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_swap2 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_swap1 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_pop t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                # Unconditional jump
                ld t0, 0(sp)          # destination
                addi sp, sp, 8
                j L_{t0:x}           # jump to destination
            
L_1186:

            li a0, 3         # gas cost
            jal check_gas
        

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, None        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_dup2 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_swap1 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_pop t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_dup2 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, None        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # value
                addi sp, sp, 8
                ld a0, 0(sp)          # offset
                addi sp, sp, 8
                jal mstore_impl
            

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 32        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, None        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

            ld a1, 0(sp)          # size
            addi sp, sp, 8
            ld a0, 0(sp)          # offset
            addi sp, sp, 8
            jal ra, sha3_impl     # call SHA3 implementation
            addi sp, sp, -8
            sd a0, 0(sp)          # push result
        

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_swap1 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_pop t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_swap2 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_swap1 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_pop t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                # Unconditional jump
                ld t0, 0(sp)          # destination
                addi sp, sp, 8
                j L_{t0:x}           # jump to destination
            
L_1198:

            li a0, 3         # gas cost
            jal check_gas
        

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, None        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 32        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 31        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_dup4 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld t1, 0(sp)          # second operand
                addi sp, sp, 8
                ld t0, 0(sp)          # first operand
                addi sp, sp, 8
                add t0, t0, t1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld t1, 0(sp)          # second operand
                addi sp, sp, 8
                ld t0, 0(sp)          # first operand
                addi sp, sp, 8
                div t0, t0, t1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_swap1 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_pop t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_swap2 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_swap1 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_pop t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                # Unconditional jump
                ld t0, 0(sp)          # destination
                addi sp, sp, 8
                j L_{t0:x}           # jump to destination
            
L_11a7:

            li a0, 3         # gas cost
            jal check_gas
        

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, None        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_dup3 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_dup3 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld t1, 0(sp)          # second operand
                addi sp, sp, 8
                ld t0, 0(sp)          # first operand
                addi sp, sp, 8
                sll t0, t0, t1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_swap1 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_pop t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_swap3 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_swap2 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_pop t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_pop t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                # Unconditional jump
                ld t0, 0(sp)          # destination
                addi sp, sp, 8
                j L_{t0:x}           # jump to destination
            
L_11b3:

            li a0, 3         # gas cost
            jal check_gas
        

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, None        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 8        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_dup4 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld t1, 0(sp)          # second operand
                addi sp, sp, 8
                ld t0, 0(sp)          # first operand
                addi sp, sp, 8
                mul t0, t0, t1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 4116        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                dup0 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_selfdestruct t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_selfdestruct t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_selfdestruct t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_selfdestruct t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_selfdestruct t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_selfdestruct t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_selfdestruct t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_selfdestruct t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_selfdestruct t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_selfdestruct t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_selfdestruct t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_selfdestruct t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_selfdestruct t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_selfdestruct t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_selfdestruct t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_selfdestruct t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_selfdestruct t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_selfdestruct t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_selfdestruct t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_selfdestruct t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_selfdestruct t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_selfdestruct t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_selfdestruct t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_selfdestruct t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_selfdestruct t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_selfdestruct t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_selfdestruct t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_selfdestruct t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_selfdestruct t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_selfdestruct t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_selfdestruct t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_selfdestruct t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_dup3 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 4057        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                # Unconditional jump
                ld t0, 0(sp)          # destination
                addi sp, sp, 8
                j L_{t0:x}           # jump to destination
            
L_11e2:

            li a0, 3         # gas cost
            jal check_gas
        

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 4126        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_dup7 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_dup4 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 4057        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                # Unconditional jump
                ld t0, 0(sp)          # destination
                addi sp, sp, 8
                j L_{t0:x}           # jump to destination
            
L_11ec:

            li a0, 3         # gas cost
            jal check_gas
        

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_swap6 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_pop t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_dup1 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_not t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_dup5 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld t1, 0(sp)          # second operand
                addi sp, sp, 8
                ld t0, 0(sp)          # first operand
                addi sp, sp, 8
                and t0, t0, t1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_swap4 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_pop t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_dup1 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_dup7 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld t1, 0(sp)          # second operand
                addi sp, sp, 8
                ld t0, 0(sp)          # first operand
                addi sp, sp, 8
                and t0, t0, t1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_dup5 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld t1, 0(sp)          # second operand
                addi sp, sp, 8
                ld t0, 0(sp)          # first operand
                addi sp, sp, 8
                or t0, t0, t1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_swap3 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_pop t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_pop t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_pop t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_swap4 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_swap3 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_pop t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_pop t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_pop t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                # Unconditional jump
                ld t0, 0(sp)          # destination
                addi sp, sp, 8
                j L_{t0:x}           # jump to destination
            
L_1204:

            li a0, 3         # gas cost
            jal check_gas
        

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, None        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_dup2 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_swap1 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_pop t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_swap2 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_swap1 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_pop t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                # Unconditional jump
                ld t0, 0(sp)          # destination
                addi sp, sp, 8
                j L_{t0:x}           # jump to destination
            
L_120d:

            li a0, 3         # gas cost
            jal check_gas
        

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, None        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 4185        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 4180        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 4175        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_dup5 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 3018        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                # Unconditional jump
                ld t0, 0(sp)          # destination
                addi sp, sp, 8
                j L_{t0:x}           # jump to destination
            
L_121d:

            li a0, 3         # gas cost
            jal check_gas
        

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 4150        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                # Unconditional jump
                ld t0, 0(sp)          # destination
                addi sp, sp, 8
                j L_{t0:x}           # jump to destination
            
L_1222:

            li a0, 3         # gas cost
            jal check_gas
        

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 3018        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                # Unconditional jump
                ld t0, 0(sp)          # destination
                addi sp, sp, 8
                j L_{t0:x}           # jump to destination
            
L_1227:

            li a0, 3         # gas cost
            jal check_gas
        

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_swap1 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_pop t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_swap2 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_swap1 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_pop t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                # Unconditional jump
                ld t0, 0(sp)          # destination
                addi sp, sp, 8
                j L_{t0:x}           # jump to destination
            
L_122e:

            li a0, 3         # gas cost
            jal check_gas
        

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, None        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_dup2 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_swap1 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_pop t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_swap2 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_swap1 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_pop t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                # Unconditional jump
                ld t0, 0(sp)          # destination
                addi sp, sp, 8
                j L_{t0:x}           # jump to destination
            
L_1237:

            li a0, 3         # gas cost
            jal check_gas
        

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 4210        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_dup4 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 4159        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                # Unconditional jump
                ld t0, 0(sp)          # destination
                addi sp, sp, 8
                j L_{t0:x}           # jump to destination
            
L_1240:

            li a0, 3         # gas cost
            jal check_gas
        

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 4230        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 4222        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_dup3 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 4192        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                # Unconditional jump
                ld t0, 0(sp)          # destination
                addi sp, sp, 8
                j L_{t0:x}           # jump to destination
            
L_124c:

            li a0, 3         # gas cost
            jal check_gas
        

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_dup5 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_dup5 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a0, 0(sp)          # key
                addi sp, sp, 8
                jal sload_impl
                addi sp, sp, -8
                sd a0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 4069        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                # Unconditional jump
                ld t0, 0(sp)          # destination
                addi sp, sp, 8
                j L_{t0:x}           # jump to destination
            
L_1254:

            li a0, 3         # gas cost
            jal check_gas
        

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_dup3 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # value
                addi sp, sp, 8
                ld a0, 0(sp)          # key
                addi sp, sp, 8
                jal sstore_impl
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_pop t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_pop t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_pop t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_pop t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                # Unconditional jump
                ld t0, 0(sp)          # destination
                addi sp, sp, 8
                j L_{t0:x}           # jump to destination
            
L_125c:

            li a0, 3         # gas cost
            jal check_gas
        

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, None        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_swap1 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                # Unconditional jump
                ld t0, 0(sp)          # destination
                addi sp, sp, 8
                j L_{t0:x}           # jump to destination
            
L_1260:

            li a0, 3         # gas cost
            jal check_gas
        

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 4250        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 4238        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                # Unconditional jump
                ld t0, 0(sp)          # destination
                addi sp, sp, 8
                j L_{t0:x}           # jump to destination
            
L_1268:

            li a0, 3         # gas cost
            jal check_gas
        

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 4261        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_dup2 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_dup5 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_dup5 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 4201        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                # Unconditional jump
                ld t0, 0(sp)          # destination
                addi sp, sp, 8
                j L_{t0:x}           # jump to destination
            
L_1273:

            li a0, 3         # gas cost
            jal check_gas
        

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_pop t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_pop t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_pop t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                # Unconditional jump
                ld t0, 0(sp)          # destination
                addi sp, sp, 8
                j L_{t0:x}           # jump to destination
            
L_1278:

            li a0, 3         # gas cost
            jal check_gas
        
L_1279:

            li a0, 3         # gas cost
            jal check_gas
        

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_dup2 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_dup2 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld t1, 0(sp)          # second operand
                addi sp, sp, 8
                ld t0, 0(sp)          # first operand
                addi sp, sp, 8
                slt t0, t0, t1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_iszero t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 4296        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                # Conditional jump
                ld t1, 0(sp)          # condition
                addi sp, sp, 8
                ld t0, 0(sp)          # destination
                addi sp, sp, 8
                beqz t1, skip_1281   # if condition is 0, skip jump
                j L_1281           # jump to destination
            skip_1281:
            

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 4285        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, None        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_dup3 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 4242        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                # Unconditional jump
                ld t0, 0(sp)          # destination
                addi sp, sp, 8
                j L_{t0:x}           # jump to destination
            
L_128b:

            li a0, 3         # gas cost
            jal check_gas
        

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 1        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_dup2 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld t1, 0(sp)          # second operand
                addi sp, sp, 8
                ld t0, 0(sp)          # first operand
                addi sp, sp, 8
                add t0, t0, t1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_swap1 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_pop t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 4267        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                # Unconditional jump
                ld t0, 0(sp)          # destination
                addi sp, sp, 8
                j L_{t0:x}           # jump to destination
            
L_1296:

            li a0, 3         # gas cost
            jal check_gas
        

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_pop t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_pop t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                # Unconditional jump
                ld t0, 0(sp)          # destination
                addi sp, sp, 8
                j L_{t0:x}           # jump to destination
            
L_129a:

            li a0, 3         # gas cost
            jal check_gas
        

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 31        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_dup3 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld t1, 0(sp)          # second operand
                addi sp, sp, 8
                ld t0, 0(sp)          # first operand
                addi sp, sp, 8
                sgt t0, t0, t1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_iszero t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 4365        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                # Conditional jump
                ld t1, 0(sp)          # condition
                addi sp, sp, 8
                ld t0, 0(sp)          # destination
                addi sp, sp, 8
                beqz t1, skip_12a3   # if condition is 0, skip jump
                j L_12a3           # jump to destination
            skip_12a3:
            

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 4318        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_dup2 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 4024        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                # Unconditional jump
                ld t0, 0(sp)          # destination
                addi sp, sp, 8
                j L_{t0:x}           # jump to destination
            
L_12ac:

            li a0, 3         # gas cost
            jal check_gas
        

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 4327        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_dup5 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 4042        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                # Unconditional jump
                ld t0, 0(sp)          # destination
                addi sp, sp, 8
                j L_{t0:x}           # jump to destination
            
L_12b5:

            li a0, 3         # gas cost
            jal check_gas
        

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_dup2 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld t1, 0(sp)          # second operand
                addi sp, sp, 8
                ld t0, 0(sp)          # first operand
                addi sp, sp, 8
                add t0, t0, t1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 32        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_dup6 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld t1, 0(sp)          # second operand
                addi sp, sp, 8
                ld t0, 0(sp)          # first operand
                addi sp, sp, 8
                slt t0, t0, t1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_iszero t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 4342        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                # Conditional jump
                ld t1, 0(sp)          # condition
                addi sp, sp, 8
                ld t0, 0(sp)          # destination
                addi sp, sp, 8
                beqz t1, skip_12c0   # if condition is 0, skip jump
                j L_12c0           # jump to destination
            skip_12c0:
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_dup2 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_swap1 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_pop t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            
L_12c4:

            li a0, 3         # gas cost
            jal check_gas
        

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 4362        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 4354        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_dup6 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 4042        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                # Unconditional jump
                ld t0, 0(sp)          # destination
                addi sp, sp, 8
                j L_{t0:x}           # jump to destination
            
L_12d0:

            li a0, 3         # gas cost
            jal check_gas
        

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_dup4 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld t1, 0(sp)          # second operand
                addi sp, sp, 8
                ld t0, 0(sp)          # first operand
                addi sp, sp, 8
                add t0, t0, t1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_dup3 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 4266        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                # Unconditional jump
                ld t0, 0(sp)          # destination
                addi sp, sp, 8
                j L_{t0:x}           # jump to destination
            
L_12d8:

            li a0, 3         # gas cost
            jal check_gas
        

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_pop t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_pop t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            
L_12db:

            li a0, 3         # gas cost
            jal check_gas
        

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_pop t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_pop t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_pop t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                # Unconditional jump
                ld t0, 0(sp)          # destination
                addi sp, sp, 8
                j L_{t0:x}           # jump to destination
            
L_12e0:

            li a0, 3         # gas cost
            jal check_gas
        

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, None        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_dup3 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_dup3 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld t1, 0(sp)          # second operand
                addi sp, sp, 8
                ld t0, 0(sp)          # first operand
                addi sp, sp, 8
                srl t0, t0, t1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_swap1 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_pop t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_swap3 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_swap2 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_pop t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_pop t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                # Unconditional jump
                ld t0, 0(sp)          # destination
                addi sp, sp, 8
                j L_{t0:x}           # jump to destination
            
L_12ec:

            li a0, 3         # gas cost
            jal check_gas
        

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, None        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 4397        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, None        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_not t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_dup5 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 8        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                ld t1, 0(sp)          # second operand
                addi sp, sp, 8
                ld t0, 0(sp)          # first operand
                addi sp, sp, 8
                mul t0, t0, t1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 4370        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                # Unconditional jump
                ld t0, 0(sp)          # destination
                addi sp, sp, 8
                j L_{t0:x}           # jump to destination
            
L_12fb:

            li a0, 3         # gas cost
            jal check_gas
        

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_not t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_dup1 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_dup4 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld t1, 0(sp)          # second operand
                addi sp, sp, 8
                ld t0, 0(sp)          # first operand
                addi sp, sp, 8
                and t0, t0, t1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_swap2 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_pop t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_pop t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_swap3 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_swap2 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_pop t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_pop t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                # Unconditional jump
                ld t0, 0(sp)          # destination
                addi sp, sp, 8
                j L_{t0:x}           # jump to destination
            
L_1308:

            li a0, 3         # gas cost
            jal check_gas
        

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, None        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 4421        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_dup4 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_dup4 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 4382        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                # Unconditional jump
                ld t0, 0(sp)          # destination
                addi sp, sp, 8
                j L_{t0:x}           # jump to destination
            
L_1313:

            li a0, 3         # gas cost
            jal check_gas
        

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_swap2 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_pop t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_dup3 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 2        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                ld t1, 0(sp)          # second operand
                addi sp, sp, 8
                ld t0, 0(sp)          # first operand
                addi sp, sp, 8
                mul t0, t0, t1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_dup3 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld t1, 0(sp)          # second operand
                addi sp, sp, 8
                ld t0, 0(sp)          # first operand
                addi sp, sp, 8
                or t0, t0, t1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_swap1 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_pop t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_swap3 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_swap2 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_pop t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_pop t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                # Unconditional jump
                ld t0, 0(sp)          # destination
                addi sp, sp, 8
                j L_{t0:x}           # jump to destination
            
L_1323:

            li a0, 3         # gas cost
            jal check_gas
        

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 4446        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_dup3 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 3153        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                # Unconditional jump
                ld t0, 0(sp)          # destination
                addi sp, sp, 8
                j L_{t0:x}           # jump to destination
            
L_132c:

            li a0, 3         # gas cost
            jal check_gas
        

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 18446744073709551615        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_dup2 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld t1, 0(sp)          # second operand
                addi sp, sp, 8
                ld t0, 0(sp)          # first operand
                addi sp, sp, 8
                sgt t0, t0, t1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_iszero t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 4471        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                # Conditional jump
                ld t1, 0(sp)          # condition
                addi sp, sp, 8
                ld t0, 0(sp)          # destination
                addi sp, sp, 8
                beqz t1, skip_133c   # if condition is 0, skip jump
                j L_133c           # jump to destination
            skip_133c:
            

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 4470        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 2608        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                # Unconditional jump
                ld t0, 0(sp)          # destination
                addi sp, sp, 8
                j L_{t0:x}           # jump to destination
            
L_1344:

            li a0, 3         # gas cost
            jal check_gas
        
L_1345:

            li a0, 3         # gas cost
            jal check_gas
        

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 4481        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_dup3 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a0, 0(sp)          # key
                addi sp, sp, 8
                jal sload_impl
                addi sp, sp, -8
                sd a0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 3976        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                # Unconditional jump
                ld t0, 0(sp)          # destination
                addi sp, sp, 8
                j L_{t0:x}           # jump to destination
            
L_134f:

            li a0, 3         # gas cost
            jal check_gas
        

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 4492        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_dup3 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_dup3 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_dup6 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 4300        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                # Unconditional jump
                ld t0, 0(sp)          # destination
                addi sp, sp, 8
                j L_{t0:x}           # jump to destination
            
L_135a:

            li a0, 3         # gas cost
            jal check_gas
        

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, None        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 32        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_swap1 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_pop t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 31        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_dup4 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld t1, 0(sp)          # second operand
                addi sp, sp, 8
                ld t0, 0(sp)          # first operand
                addi sp, sp, 8
                sgt t0, t0, t1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 1        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_dup2 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld t1, 0(sp)          # second operand
                addi sp, sp, 8
                ld t0, 0(sp)          # first operand
                addi sp, sp, 8
                sub t0, zero, t0; seqz t0, t0 t0, t0, t1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 4541        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                # Conditional jump
                ld t1, 0(sp)          # condition
                addi sp, sp, 8
                ld t0, 0(sp)          # destination
                addi sp, sp, 8
                beqz t1, skip_136b   # if condition is 0, skip jump
                j L_136b           # jump to destination
            skip_136b:
            

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, None        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_dup5 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_iszero t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 4523        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                # Conditional jump
                ld t1, 0(sp)          # condition
                addi sp, sp, 8
                ld t0, 0(sp)          # destination
                addi sp, sp, 8
                beqz t1, skip_1372   # if condition is 0, skip jump
                j L_1372           # jump to destination
            skip_1372:
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_dup3 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_dup8 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld t1, 0(sp)          # second operand
                addi sp, sp, 8
                ld t0, 0(sp)          # first operand
                addi sp, sp, 8
                add t0, t0, t1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a0, 0(sp)          # offset
                addi sp, sp, 8
                jal mload_impl
                addi sp, sp, -8
                sd a0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_swap1 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_pop t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            
L_1379:

            li a0, 3         # gas cost
            jal check_gas
        

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 4533        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_dup6 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_dup3 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 4410        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                # Unconditional jump
                ld t0, 0(sp)          # destination
                addi sp, sp, 8
                j L_{t0:x}           # jump to destination
            
L_1383:

            li a0, 3         # gas cost
            jal check_gas
        

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_dup7 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # value
                addi sp, sp, 8
                ld a0, 0(sp)          # key
                addi sp, sp, 8
                jal sstore_impl
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_pop t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 4636        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                # Unconditional jump
                ld t0, 0(sp)          # destination
                addi sp, sp, 8
                j L_{t0:x}           # jump to destination
            
L_138b:

            li a0, 3         # gas cost
            jal check_gas
        

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 31        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_not t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_dup5 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld t1, 0(sp)          # second operand
                addi sp, sp, 8
                ld t0, 0(sp)          # first operand
                addi sp, sp, 8
                and t0, t0, t1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 4555        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_dup7 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 4024        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                # Unconditional jump
                ld t0, 0(sp)          # destination
                addi sp, sp, 8
                j L_{t0:x}           # jump to destination
            
L_1399:

            li a0, 3         # gas cost
            jal check_gas
        

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, None        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        
L_139b:

            li a0, 3         # gas cost
            jal check_gas
        

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_dup3 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_dup2 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld t1, 0(sp)          # second operand
                addi sp, sp, 8
                ld t0, 0(sp)          # first operand
                addi sp, sp, 8
                slt t0, t0, t1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_iszero t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 4594        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                # Conditional jump
                ld t1, 0(sp)          # condition
                addi sp, sp, 8
                ld t0, 0(sp)          # destination
                addi sp, sp, 8
                beqz t1, skip_13a3   # if condition is 0, skip jump
                j L_13a3           # jump to destination
            skip_13a3:
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_dup5 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_dup10 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld t1, 0(sp)          # second operand
                addi sp, sp, 8
                ld t0, 0(sp)          # first operand
                addi sp, sp, 8
                add t0, t0, t1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a0, 0(sp)          # offset
                addi sp, sp, 8
                jal mload_impl
                addi sp, sp, -8
                sd a0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_dup3 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # value
                addi sp, sp, 8
                ld a0, 0(sp)          # key
                addi sp, sp, 8
                jal sstore_impl
            

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 1        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_dup3 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld t1, 0(sp)          # second operand
                addi sp, sp, 8
                ld t0, 0(sp)          # first operand
                addi sp, sp, 8
                add t0, t0, t1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_swap2 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_pop t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 32        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_dup6 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld t1, 0(sp)          # second operand
                addi sp, sp, 8
                ld t0, 0(sp)          # first operand
                addi sp, sp, 8
                add t0, t0, t1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_swap5 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_pop t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 32        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_dup2 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld t1, 0(sp)          # second operand
                addi sp, sp, 8
                ld t0, 0(sp)          # first operand
                addi sp, sp, 8
                add t0, t0, t1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_swap1 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_pop t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 4557        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                # Unconditional jump
                ld t0, 0(sp)          # destination
                addi sp, sp, 8
                j L_{t0:x}           # jump to destination
            
L_13c0:

            li a0, 3         # gas cost
            jal check_gas
        

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_dup7 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_dup4 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld t1, 0(sp)          # second operand
                addi sp, sp, 8
                ld t0, 0(sp)          # first operand
                addi sp, sp, 8
                slt t0, t0, t1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_iszero t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 4623        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                # Conditional jump
                ld t1, 0(sp)          # condition
                addi sp, sp, 8
                ld t0, 0(sp)          # destination
                addi sp, sp, 8
                beqz t1, skip_13c8   # if condition is 0, skip jump
                j L_13c8           # jump to destination
            skip_13c8:
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_dup5 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_dup10 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld t1, 0(sp)          # second operand
                addi sp, sp, 8
                ld t0, 0(sp)          # first operand
                addi sp, sp, 8
                add t0, t0, t1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a0, 0(sp)          # offset
                addi sp, sp, 8
                jal mload_impl
                addi sp, sp, -8
                sd a0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 4619        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 31        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_dup10 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld t1, 0(sp)          # second operand
                addi sp, sp, 8
                ld t0, 0(sp)          # first operand
                addi sp, sp, 8
                and t0, t0, t1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_dup3 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 4382        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                # Unconditional jump
                ld t0, 0(sp)          # destination
                addi sp, sp, 8
                j L_{t0:x}           # jump to destination
            
L_13d9:

            li a0, 3         # gas cost
            jal check_gas
        

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_dup4 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # value
                addi sp, sp, 8
                ld a0, 0(sp)          # key
                addi sp, sp, 8
                jal sstore_impl
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_pop t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            
L_13dd:

            li a0, 3         # gas cost
            jal check_gas
        

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 1        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 2        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_dup9 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld t1, 0(sp)          # second operand
                addi sp, sp, 8
                ld t0, 0(sp)          # first operand
                addi sp, sp, 8
                mul t0, t0, t1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld t1, 0(sp)          # second operand
                addi sp, sp, 8
                ld t0, 0(sp)          # first operand
                addi sp, sp, 8
                add t0, t0, t1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_dup9 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # value
                addi sp, sp, 8
                ld a0, 0(sp)          # key
                addi sp, sp, 8
                jal sstore_impl
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_pop t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_pop t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_pop t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            
L_13ea:

            li a0, 3         # gas cost
            jal check_gas
        

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_pop t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_pop t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_pop t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_pop t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_pop t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_pop t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                # Unconditional jump
                ld t0, 0(sp)          # destination
                addi sp, sp, 8
                j L_{t0:x}           # jump to destination
            
L_13f2:

            li a0, 3         # gas cost
            jal check_gas
        

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                dup0 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        
    # Unknown opcode at 13f4: UNKNOWN_0x4e

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                basefee t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 11900288958546962096864737128254758852035145780262049571737140461568        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                nop t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, None        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # value
                addi sp, sp, 8
                ld a0, 0(sp)          # offset
                addi sp, sp, 8
                jal mstore_impl
            

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 17        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 4        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # value
                addi sp, sp, 8
                ld a0, 0(sp)          # offset
                addi sp, sp, 8
                jal mstore_impl
            

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 36        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, None        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_revert t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            
L_141f:

            li a0, 3         # gas cost
            jal check_gas
        

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, None        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 4699        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_dup3 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 3018        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                # Unconditional jump
                ld t0, 0(sp)          # destination
                addi sp, sp, 8
                j L_{t0:x}           # jump to destination
            
L_1429:

            li a0, 3         # gas cost
            jal check_gas
        

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_swap2 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_pop t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 4710        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_dup4 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 3018        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                # Unconditional jump
                ld t0, 0(sp)          # destination
                addi sp, sp, 8
                j L_{t0:x}           # jump to destination
            
L_1434:

            li a0, 3         # gas cost
            jal check_gas
        

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_swap3 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_pop t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_dup3 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_dup3 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld t1, 0(sp)          # second operand
                addi sp, sp, 8
                ld t0, 0(sp)          # first operand
                addi sp, sp, 8
                add t0, t0, t1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_swap1 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_pop t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_dup1 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_dup3 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld t1, 0(sp)          # second operand
                addi sp, sp, 8
                ld t0, 0(sp)          # first operand
                addi sp, sp, 8
                sgt t0, t0, t1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_iszero t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 4734        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                # Conditional jump
                ld t1, 0(sp)          # condition
                addi sp, sp, 8
                ld t0, 0(sp)          # destination
                addi sp, sp, 8
                beqz t1, skip_1443   # if condition is 0, skip jump
                j L_1443           # jump to destination
            skip_1443:
            

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 4733        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 4644        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                # Unconditional jump
                ld t0, 0(sp)          # destination
                addi sp, sp, 8
                j L_{t0:x}           # jump to destination
            
L_144b:

            li a0, 3         # gas cost
            jal check_gas
        
L_144c:

            li a0, 3         # gas cost
            jal check_gas
        

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_swap3 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_swap2 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_pop t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_pop t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                # Unconditional jump
                ld t0, 0(sp)          # destination
                addi sp, sp, 8
                j L_{t0:x}           # jump to destination
            
L_1452:

            li a0, 3         # gas cost
            jal check_gas
        

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, None        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_dup2 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_swap1 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_pop t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_swap3 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_swap2 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_pop t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_pop t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                # Unconditional jump
                ld t0, 0(sp)          # destination
                addi sp, sp, 8
                j L_{t0:x}           # jump to destination
            
L_145c:

            li a0, 3         # gas cost
            jal check_gas
        

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_pop t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                # Unconditional jump
                ld t0, 0(sp)          # destination
                addi sp, sp, 8
                j L_{t0:x}           # jump to destination
            
L_145f:

            li a0, 3         # gas cost
            jal check_gas
        

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, None        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 4764        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, None        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_dup4 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 4740        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                # Unconditional jump
                ld t0, 0(sp)          # destination
                addi sp, sp, 8
                j L_{t0:x}           # jump to destination
            
L_146a:

            li a0, 3         # gas cost
            jal check_gas
        

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_swap2 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_pop t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 4775        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_dup3 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 4750        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                # Unconditional jump
                ld t0, 0(sp)          # destination
                addi sp, sp, 8
                j L_{t0:x}           # jump to destination
            
L_1475:

            li a0, 3         # gas cost
            jal check_gas
        

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, None        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_dup3 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld t1, 0(sp)          # second operand
                addi sp, sp, 8
                ld t0, 0(sp)          # first operand
                addi sp, sp, 8
                add t0, t0, t1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_swap1 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_pop t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_swap2 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_swap1 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_pop t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                # Unconditional jump
                ld t0, 0(sp)          # destination
                addi sp, sp, 8
                j L_{t0:x}           # jump to destination
            
L_147f:

            li a0, 3         # gas cost
            jal check_gas
        

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, None        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 4795        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_dup3 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 4753        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                # Unconditional jump
                ld t0, 0(sp)          # destination
                addi sp, sp, 8
                j L_{t0:x}           # jump to destination
            
L_1489:

            li a0, 3         # gas cost
            jal check_gas
        

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_swap2 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_pop t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_dup2 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_swap1 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_pop t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_swap2 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_swap1 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_pop t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                # Unconditional jump
                ld t0, 0(sp)          # destination
                addi sp, sp, 8
                j L_{t0:x}           # jump to destination
            
L_1493:

            li a0, 3         # gas cost
            jal check_gas
        

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                dup0 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                chainid t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 26988        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 110090555170931        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 121376317207656        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 125483717959796        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 1865458369492324155905        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # value
                addi sp, sp, 8
                ld a0, 0(sp)          # offset
                addi sp, sp, 8
                jal mstore_impl
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                dup0 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 0        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                nop t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                nop t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                nop t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                nop t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                nop t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                nop t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                nop t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                nop t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                nop t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                nop t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                nop t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                nop t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 32        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_dup3 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld t1, 0(sp)          # second operand
                addi sp, sp, 8
                ld t0, 0(sp)          # first operand
                addi sp, sp, 8
                add t0, t0, t1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # value
                addi sp, sp, 8
                ld a0, 0(sp)          # offset
                addi sp, sp, 8
                jal mstore_impl
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_pop t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                # Unconditional jump
                ld t0, 0(sp)          # destination
                addi sp, sp, 8
                j L_{t0:x}           # jump to destination
            
L_14e1:

            li a0, 3         # gas cost
            jal check_gas
        

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, None        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 4895        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 33        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_dup4 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 3773        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                # Unconditional jump
                ld t0, 0(sp)          # destination
                addi sp, sp, 8
                j L_{t0:x}           # jump to destination
            
L_14ed:

            li a0, 3         # gas cost
            jal check_gas
        

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_swap2 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_pop t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 4906        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_dup3 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 4805        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                # Unconditional jump
                ld t0, 0(sp)          # destination
                addi sp, sp, 8
                j L_{t0:x}           # jump to destination
            
L_14f8:

            li a0, 3         # gas cost
            jal check_gas
        

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 64        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_dup3 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld t1, 0(sp)          # second operand
                addi sp, sp, 8
                ld t0, 0(sp)          # first operand
                addi sp, sp, 8
                add t0, t0, t1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_swap1 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_pop t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_swap2 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_swap1 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_pop t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                # Unconditional jump
                ld t0, 0(sp)          # destination
                addi sp, sp, 8
                j L_{t0:x}           # jump to destination
            
L_1503:

            li a0, 3         # gas cost
            jal check_gas
        

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, None        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 32        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_dup3 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld t1, 0(sp)          # second operand
                addi sp, sp, 8
                ld t0, 0(sp)          # first operand
                addi sp, sp, 8
                add t0, t0, t1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_swap1 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_pop t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_dup2 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_dup2 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld t1, 0(sp)          # second operand
                addi sp, sp, 8
                ld t0, 0(sp)          # first operand
                addi sp, sp, 8
                sub t0, t0, t1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, None        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_dup4 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld t1, 0(sp)          # second operand
                addi sp, sp, 8
                ld t0, 0(sp)          # first operand
                addi sp, sp, 8
                add t0, t0, t1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # value
                addi sp, sp, 8
                ld a0, 0(sp)          # offset
                addi sp, sp, 8
                jal mstore_impl
            

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 4940        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_dup2 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 4883        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                # Unconditional jump
                ld t0, 0(sp)          # destination
                addi sp, sp, 8
                j L_{t0:x}           # jump to destination
            
L_151a:

            li a0, 3         # gas cost
            jal check_gas
        

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_swap1 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_pop t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_swap2 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_swap1 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_pop t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                # Unconditional jump
                ld t0, 0(sp)          # destination
                addi sp, sp, 8
                j L_{t0:x}           # jump to destination
            
L_1521:

            li a0, 3         # gas cost
            jal check_gas
        

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, None        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 4957        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_dup3 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 3153        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                # Unconditional jump
                ld t0, 0(sp)          # destination
                addi sp, sp, 8
                j L_{t0:x}           # jump to destination
            
L_152b:

            li a0, 3         # gas cost
            jal check_gas
        

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 4967        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_dup2 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_dup6 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 3773        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                # Unconditional jump
                ld t0, 0(sp)          # destination
                addi sp, sp, 8
                j L_{t0:x}           # jump to destination
            
L_1535:

            li a0, 3         # gas cost
            jal check_gas
        

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_swap4 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_pop t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 4983        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_dup2 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_dup6 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 32        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_dup7 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld t1, 0(sp)          # second operand
                addi sp, sp, 8
                ld t0, 0(sp)          # first operand
                addi sp, sp, 8
                add t0, t0, t1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 3179        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                # Unconditional jump
                ld t0, 0(sp)          # destination
                addi sp, sp, 8
                j L_{t0:x}           # jump to destination
            
L_1545:

            li a0, 3         # gas cost
            jal check_gas
        

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 4992        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_dup2 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 2592        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                # Unconditional jump
                ld t0, 0(sp)          # destination
                addi sp, sp, 8
                j L_{t0:x}           # jump to destination
            
L_154e:

            li a0, 3         # gas cost
            jal check_gas
        

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_dup5 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld t1, 0(sp)          # second operand
                addi sp, sp, 8
                ld t0, 0(sp)          # first operand
                addi sp, sp, 8
                add t0, t0, t1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_swap2 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_pop t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_pop t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_swap3 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_swap2 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_pop t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_pop t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                # Unconditional jump
                ld t0, 0(sp)          # destination
                addi sp, sp, 8
                j L_{t0:x}           # jump to destination
            
L_1559:

            li a0, 3         # gas cost
            jal check_gas
        

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, None        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 96        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_dup3 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld t1, 0(sp)          # second operand
                addi sp, sp, 8
                ld t0, 0(sp)          # first operand
                addi sp, sp, 8
                add t0, t0, t1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_swap1 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_pop t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_dup2 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_dup2 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld t1, 0(sp)          # second operand
                addi sp, sp, 8
                ld t0, 0(sp)          # first operand
                addi sp, sp, 8
                sub t0, t0, t1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, None        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_dup4 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld t1, 0(sp)          # second operand
                addi sp, sp, 8
                ld t0, 0(sp)          # first operand
                addi sp, sp, 8
                add t0, t0, t1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # value
                addi sp, sp, 8
                ld a0, 0(sp)          # offset
                addi sp, sp, 8
                jal mstore_impl
            

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 5027        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_dup2 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_dup7 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 4947        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                # Unconditional jump
                ld t0, 0(sp)          # destination
                addi sp, sp, 8
                j L_{t0:x}           # jump to destination
            
L_1571:

            li a0, 3         # gas cost
            jal check_gas
        

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_swap1 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_pop t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_dup2 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_dup2 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld t1, 0(sp)          # second operand
                addi sp, sp, 8
                ld t0, 0(sp)          # first operand
                addi sp, sp, 8
                sub t0, t0, t1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 32        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_dup4 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld t1, 0(sp)          # second operand
                addi sp, sp, 8
                ld t0, 0(sp)          # first operand
                addi sp, sp, 8
                add t0, t0, t1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # value
                addi sp, sp, 8
                ld a0, 0(sp)          # offset
                addi sp, sp, 8
                jal mstore_impl
            

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 5047        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_dup2 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_dup6 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 4947        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                # Unconditional jump
                ld t0, 0(sp)          # destination
                addi sp, sp, 8
                j L_{t0:x}           # jump to destination
            
L_1585:

            li a0, 3         # gas cost
            jal check_gas
        

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_swap1 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_pop t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 5062        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 64        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_dup4 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld t1, 0(sp)          # second operand
                addi sp, sp, 8
                ld t0, 0(sp)          # first operand
                addi sp, sp, 8
                add t0, t0, t1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_dup5 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 3608        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                # Unconditional jump
                ld t0, 0(sp)          # destination
                addi sp, sp, 8
                j L_{t0:x}           # jump to destination
            
L_1594:

            li a0, 3         # gas cost
            jal check_gas
        

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_swap5 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_swap4 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_pop t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_pop t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_pop t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_pop t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                # Unconditional jump
                ld t0, 0(sp)          # destination
                addi sp, sp, 8
                j L_{t0:x}           # jump to destination
            
L_159c:

            li a0, 3         # gas cost
            jal check_gas
        

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                dup0 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        
    # Unknown opcode at 159e: UNKNOWN_0x4e

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 43067291932797044530530704962256792677        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

            ld a1, 0(sp)          # size
            addi sp, sp, 8
            ld a0, 0(sp)          # offset
            addi sp, sp, 8
            jal ra, sha3_impl     # call SHA3 implementation
            addi sp, sp, -8
            sd a0, 0(sp)          # push result
        

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 31369206182802536        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 491261485407        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_dup3 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld t1, 0(sp)          # second operand
                addi sp, sp, 8
                ld t0, 0(sp)          # first operand
                addi sp, sp, 8
                add t0, t0, t1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # value
                addi sp, sp, 8
                ld a0, 0(sp)          # offset
                addi sp, sp, 8
                jal mstore_impl
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                dup0 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 0        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                nop t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                nop t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                nop t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                nop t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                nop t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                nop t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                nop t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                nop t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                nop t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                nop t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                nop t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                nop t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                nop t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                nop t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                nop t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                nop t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                nop t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                nop t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 32        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_dup3 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld t1, 0(sp)          # second operand
                addi sp, sp, 8
                ld t0, 0(sp)          # first operand
                addi sp, sp, 8
                add t0, t0, t1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # value
                addi sp, sp, 8
                ld a0, 0(sp)          # offset
                addi sp, sp, 8
                jal mstore_impl
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_pop t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                # Unconditional jump
                ld t0, 0(sp)          # destination
                addi sp, sp, 8
                j L_{t0:x}           # jump to destination
            
L_15ea:

            li a0, 3         # gas cost
            jal check_gas
        

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, None        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 5160        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 33        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_dup4 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 3773        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                # Unconditional jump
                ld t0, 0(sp)          # destination
                addi sp, sp, 8
                j L_{t0:x}           # jump to destination
            
L_15f6:

            li a0, 3         # gas cost
            jal check_gas
        

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_swap2 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_pop t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 5171        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_dup3 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 5070        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                # Unconditional jump
                ld t0, 0(sp)          # destination
                addi sp, sp, 8
                j L_{t0:x}           # jump to destination
            
L_1601:

            li a0, 3         # gas cost
            jal check_gas
        

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 64        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_dup3 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld t1, 0(sp)          # second operand
                addi sp, sp, 8
                ld t0, 0(sp)          # first operand
                addi sp, sp, 8
                add t0, t0, t1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_swap1 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_pop t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_swap2 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_swap1 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_pop t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                # Unconditional jump
                ld t0, 0(sp)          # destination
                addi sp, sp, 8
                j L_{t0:x}           # jump to destination
            
L_160c:

            li a0, 3         # gas cost
            jal check_gas
        

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, None        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 32        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_dup3 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld t1, 0(sp)          # second operand
                addi sp, sp, 8
                ld t0, 0(sp)          # first operand
                addi sp, sp, 8
                add t0, t0, t1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_swap1 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_pop t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_dup2 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_dup2 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld t1, 0(sp)          # second operand
                addi sp, sp, 8
                ld t0, 0(sp)          # first operand
                addi sp, sp, 8
                sub t0, t0, t1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, None        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_dup4 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld t1, 0(sp)          # second operand
                addi sp, sp, 8
                ld t0, 0(sp)          # first operand
                addi sp, sp, 8
                add t0, t0, t1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # value
                addi sp, sp, 8
                ld a0, 0(sp)          # offset
                addi sp, sp, 8
                jal mstore_impl
            

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 5205        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_dup2 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 5148        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                # Unconditional jump
                ld t0, 0(sp)          # destination
                addi sp, sp, 8
                j L_{t0:x}           # jump to destination
            
L_1623:

            li a0, 3         # gas cost
            jal check_gas
        

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_swap1 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_pop t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_swap2 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_swap1 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_pop t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                # Unconditional jump
                ld t0, 0(sp)          # destination
                addi sp, sp, 8
                j L_{t0:x}           # jump to destination
            
L_162a:

            li a0, 3         # gas cost
            jal check_gas
        

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                dup0 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                # Conditional jump
                ld t1, 0(sp)          # condition
                addi sp, sp, 8
                ld t0, 0(sp)          # destination
                addi sp, sp, 8
                beqz t1, skip_162c   # if condition is 0, skip jump
                j L_162c           # jump to destination
            skip_162c:
            

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 549720211351261139443814        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 26988        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 109951162777600        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                nop t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                nop t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                nop t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                nop t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                nop t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                nop t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                nop t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                nop t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                nop t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                nop t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, None        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_dup3 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld t1, 0(sp)          # second operand
                addi sp, sp, 8
                ld t0, 0(sp)          # first operand
                addi sp, sp, 8
                add t0, t0, t1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # value
                addi sp, sp, 8
                ld a0, 0(sp)          # offset
                addi sp, sp, 8
                jal mstore_impl
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_pop t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                # Unconditional jump
                ld t0, 0(sp)          # destination
                addi sp, sp, 8
                j L_{t0:x}           # jump to destination
            
L_1652:

            li a0, 3         # gas cost
            jal check_gas
        

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, None        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 5264        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 17        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_dup4 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 3773        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                # Unconditional jump
                ld t0, 0(sp)          # destination
                addi sp, sp, 8
                j L_{t0:x}           # jump to destination
            
L_165e:

            li a0, 3         # gas cost
            jal check_gas
        

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_swap2 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_pop t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 5275        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_dup3 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 5212        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                # Unconditional jump
                ld t0, 0(sp)          # destination
                addi sp, sp, 8
                j L_{t0:x}           # jump to destination
            
L_1669:

            li a0, 3         # gas cost
            jal check_gas
        

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 32        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_dup3 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld t1, 0(sp)          # second operand
                addi sp, sp, 8
                ld t0, 0(sp)          # first operand
                addi sp, sp, 8
                add t0, t0, t1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_swap1 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_pop t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_swap2 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_swap1 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_pop t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                # Unconditional jump
                ld t0, 0(sp)          # destination
                addi sp, sp, 8
                j L_{t0:x}           # jump to destination
            
L_1674:

            li a0, 3         # gas cost
            jal check_gas
        

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, None        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 32        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_dup3 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld t1, 0(sp)          # second operand
                addi sp, sp, 8
                ld t0, 0(sp)          # first operand
                addi sp, sp, 8
                add t0, t0, t1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_swap1 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_pop t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_dup2 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_dup2 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld t1, 0(sp)          # second operand
                addi sp, sp, 8
                ld t0, 0(sp)          # first operand
                addi sp, sp, 8
                sub t0, t0, t1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, None        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_dup4 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld t1, 0(sp)          # second operand
                addi sp, sp, 8
                ld t0, 0(sp)          # first operand
                addi sp, sp, 8
                add t0, t0, t1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # value
                addi sp, sp, 8
                ld a0, 0(sp)          # offset
                addi sp, sp, 8
                jal mstore_impl
            

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 5309        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_dup2 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 5252        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                # Unconditional jump
                ld t0, 0(sp)          # destination
                addi sp, sp, 8
                j L_{t0:x}           # jump to destination
            
L_168b:

            li a0, 3         # gas cost
            jal check_gas
        

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_swap1 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_pop t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_swap2 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_swap1 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_pop t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                # Unconditional jump
                ld t0, 0(sp)          # destination
                addi sp, sp, 8
                j L_{t0:x}           # jump to destination
            
L_1692:

            li a0, 3         # gas cost
            jal check_gas
        

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                dup0 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        
    # Unknown opcode at 1694: UNKNOWN_0x4d

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 521405108573708978645347        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 35654494024736        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 6627431        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 2260864764386144186107136742614780303761892722        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 0        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                nop t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                nop t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                nop t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                nop t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                nop t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                nop t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                nop t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                nop t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                nop t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 32        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_dup3 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld t1, 0(sp)          # second operand
                addi sp, sp, 8
                ld t0, 0(sp)          # first operand
                addi sp, sp, 8
                add t0, t0, t1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # value
                addi sp, sp, 8
                ld a0, 0(sp)          # offset
                addi sp, sp, 8
                jal mstore_impl
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_pop t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                # Unconditional jump
                ld t0, 0(sp)          # destination
                addi sp, sp, 8
                j L_{t0:x}           # jump to destination
            
L_16e0:

            li a0, 3         # gas cost
            jal check_gas
        

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, None        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 5406        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 39        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_dup4 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 3773        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                # Unconditional jump
                ld t0, 0(sp)          # destination
                addi sp, sp, 8
                j L_{t0:x}           # jump to destination
            
L_16ec:

            li a0, 3         # gas cost
            jal check_gas
        

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_swap2 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_pop t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 5417        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_dup3 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 5316        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                # Unconditional jump
                ld t0, 0(sp)          # destination
                addi sp, sp, 8
                j L_{t0:x}           # jump to destination
            
L_16f7:

            li a0, 3         # gas cost
            jal check_gas
        

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 64        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_dup3 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld t1, 0(sp)          # second operand
                addi sp, sp, 8
                ld t0, 0(sp)          # first operand
                addi sp, sp, 8
                add t0, t0, t1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_swap1 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_pop t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_swap2 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_swap1 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_pop t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                # Unconditional jump
                ld t0, 0(sp)          # destination
                addi sp, sp, 8
                j L_{t0:x}           # jump to destination
            
L_1702:

            li a0, 3         # gas cost
            jal check_gas
        

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, None        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 32        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_dup3 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld t1, 0(sp)          # second operand
                addi sp, sp, 8
                ld t0, 0(sp)          # first operand
                addi sp, sp, 8
                add t0, t0, t1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_swap1 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_pop t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_dup2 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_dup2 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld t1, 0(sp)          # second operand
                addi sp, sp, 8
                ld t0, 0(sp)          # first operand
                addi sp, sp, 8
                sub t0, t0, t1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, None        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_dup4 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld t1, 0(sp)          # second operand
                addi sp, sp, 8
                ld t0, 0(sp)          # first operand
                addi sp, sp, 8
                add t0, t0, t1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # value
                addi sp, sp, 8
                ld a0, 0(sp)          # offset
                addi sp, sp, 8
                jal mstore_impl
            

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 5451        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_dup2 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 5394        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                # Unconditional jump
                ld t0, 0(sp)          # destination
                addi sp, sp, 8
                j L_{t0:x}           # jump to destination
            
L_1719:

            li a0, 3         # gas cost
            jal check_gas
        

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_swap1 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_pop t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_swap2 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_swap1 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_pop t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                # Unconditional jump
                ld t0, 0(sp)          # destination
                addi sp, sp, 8
                j L_{t0:x}           # jump to destination
            
L_1720:

            li a0, 3         # gas cost
            jal check_gas
        

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                dup0 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # value
                addi sp, sp, 8
                ld a0, 0(sp)          # offset
                addi sp, sp, 8
                jal mstore_impl
            

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 111525074461038        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 2034726241        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 2235138073531316655188718120499539364373332063        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_dup3 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld t1, 0(sp)          # second operand
                addi sp, sp, 8
                ld t0, 0(sp)          # first operand
                addi sp, sp, 8
                add t0, t0, t1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # value
                addi sp, sp, 8
                ld a0, 0(sp)          # offset
                addi sp, sp, 8
                jal mstore_impl
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_pop t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                # Unconditional jump
                ld t0, 0(sp)          # destination
                addi sp, sp, 8
                j L_{t0:x}           # jump to destination
            
L_1748:

            li a0, 3         # gas cost
            jal check_gas
        

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, None        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 5510        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 31        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_dup4 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 3773        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                # Unconditional jump
                ld t0, 0(sp)          # destination
                addi sp, sp, 8
                j L_{t0:x}           # jump to destination
            
L_1754:

            li a0, 3         # gas cost
            jal check_gas
        

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_swap2 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_pop t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 5521        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_dup3 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 5458        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                # Unconditional jump
                ld t0, 0(sp)          # destination
                addi sp, sp, 8
                j L_{t0:x}           # jump to destination
            
L_175f:

            li a0, 3         # gas cost
            jal check_gas
        

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 32        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_dup3 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld t1, 0(sp)          # second operand
                addi sp, sp, 8
                ld t0, 0(sp)          # first operand
                addi sp, sp, 8
                add t0, t0, t1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_swap1 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_pop t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_swap2 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_swap1 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_pop t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                # Unconditional jump
                ld t0, 0(sp)          # destination
                addi sp, sp, 8
                j L_{t0:x}           # jump to destination
            
L_176a:

            li a0, 3         # gas cost
            jal check_gas
        

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, None        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 32        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_dup3 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld t1, 0(sp)          # second operand
                addi sp, sp, 8
                ld t0, 0(sp)          # first operand
                addi sp, sp, 8
                add t0, t0, t1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_swap1 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_pop t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_dup2 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_dup2 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld t1, 0(sp)          # second operand
                addi sp, sp, 8
                ld t0, 0(sp)          # first operand
                addi sp, sp, 8
                sub t0, t0, t1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, None        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_dup4 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld t1, 0(sp)          # second operand
                addi sp, sp, 8
                ld t0, 0(sp)          # first operand
                addi sp, sp, 8
                add t0, t0, t1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # value
                addi sp, sp, 8
                ld a0, 0(sp)          # offset
                addi sp, sp, 8
                jal mstore_impl
            

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 5555        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_dup2 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 5498        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        

                # Unconditional jump
                ld t0, 0(sp)          # destination
                addi sp, sp, 8
                j L_{t0:x}           # jump to destination
            
L_1781:

            li a0, 3         # gas cost
            jal check_gas
        

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_swap1 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_pop t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_swap2 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_swap1 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_pop t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                # Unconditional jump
                ld t0, 0(sp)          # destination
                addi sp, sp, 8
                j L_{t0:x}           # jump to destination
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                invalid t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

            # LOG2 operation
            mv a2, 2       # number of topics
            ld a1, 0(sp)         # size
            addi sp, sp, 8
            ld a0, 0(sp)         # offset
            addi sp, sp, 8
            jal log_impl         # call log implementation
        

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 452857328472        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        

            li a0, 3         # gas cost
            jal check_gas
        
    # Unknown opcode at 1790: UNKNOWN_0x22

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                slt t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

            ld a1, 0(sp)          # size
            addi sp, sp, 8
            ld a0, 0(sp)          # offset
            addi sp, sp, 8
            jal ra, sha3_impl     # call SHA3 implementation
            addi sp, sp, -8
            sd a0, 0(sp)          # push result
        

            li a0, 3         # gas cost
            jal check_gas
        
    # Unknown opcode at 1793: UNKNOWN_0xdd

            li a0, 3         # gas cost
            jal check_gas
        
    # Unknown opcode at 1794: UNKNOWN_0x49

            li a0, 3         # gas cost
            jal check_gas
        
    # Unknown opcode at 1795: UNKNOWN_0xbf

            li a0, 3         # gas cost
            jal check_gas
        
    # Unknown opcode at 1796: UNKNOWN_0xe8

            li a0, 3         # gas cost
            jal check_gas
        

            # CREATE2 operation
            ld a2, 0(sp)         # value
            addi sp, sp, 8
            ld a1, 0(sp)         # offset
            addi sp, sp, 8
            ld a0, 0(sp)         # size
            addi sp, sp, 8
            jal create_impl      # call create implementation
            addi sp, sp, -8
            sd a0, 0(sp)        # push created address
        

            li a0, 3         # gas cost
            jal check_gas
        

                ld a0, 0(sp)          # key
                addi sp, sp, 8
                jal sload_impl
                addi sp, sp, -8
                sd a0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

            # CREATE operation
            ld a2, 0(sp)         # value
            addi sp, sp, 8
            ld a1, 0(sp)         # offset
            addi sp, sp, 8
            ld a0, 0(sp)         # size
            addi sp, sp, 8
            jal create_impl      # call create implementation
            addi sp, sp, -8
            sd a0, 0(sp)        # push created address
        

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_gasprice t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                remu t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_blockhash t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_calldataload t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        
    # Unknown opcode at 179e: UNKNOWN_0xda

            li a0, 3         # gas cost
            jal check_gas
        
    # Unknown opcode at 179f: UNKNOWN_0x2d

            li a0, 3         # gas cost
            jal check_gas
        
    # Unknown opcode at 17a0: UNKNOWN_0xb3

            li a0, 3         # gas cost
            jal check_gas
        
    # Unknown opcode at 17a1: UNKNOWN_0xea

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_swap12 t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_codecopy t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

                ld a1, 0(sp)          # second operand
                addi sp, sp, 8
                ld a0, 0(sp)          # first operand
                addi sp, sp, 8
                custom_byte t0, a0, a1
                addi sp, sp, -8
                sd t0, 0(sp)          # push result
            

            li a0, 3         # gas cost
            jal check_gas
        

            li t0, 3773075216946000729943211027736229940035929684819996992149826442362880        # load immediate value
            addi sp, sp, -8       # adjust stack pointer
            sd t0, 0(sp)          # store value on stack
        